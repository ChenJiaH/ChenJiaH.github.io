[{"title":"canvas实现下雪效果","url":"http://mcchen.club/2017/01/20/canvas实现下雪效果/","content":"<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>该Demo主要是requestAnimationFrame的一个简单应用，实现了粒子效果，网上也有一些其他的粒子效果的实现的根本原理也大致相同，只是运动路径算法差异。</p>\n<h2 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h2><p><a href=\"http://mcchen.club/project/canvas-snowing/snowing.html\">请狠狠戳我</a></p>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><h3 id=\"requestAnimationFrame\"><a href=\"#requestAnimationFrame\" class=\"headerlink\" title=\"requestAnimationFrame\"></a>requestAnimationFrame</h3><p>首先，你需要明白requestAnimationFrame是个什么东东。</p>\n<blockquote>\n<p>在浏览器动画程序中，我们通常使用一个定时器来循环每隔几毫秒移动目标物体一次，来让它动起来。如今有一个好消息，浏览器开发商们决定：“嗨，为什么我们不在浏览器里提供这样一个API呢，这样一来我们可以为用户优化他们的动画。”所以，这个requestAnimationFrame()函数就是针对动画效果的API，你可以把它用在DOM上的风格变化或画布动画或WebGL中。</p>\n</blockquote>\n<p>那么使用它有什么优势呢？</p>\n<blockquote>\n<p>浏览器可以优化并行的动画动作，更合理的重新排列动作序列，并把能够合并的动作放在一个渲染周期内完成，从而呈现出更流畅的动画效果。如果在一个浏览器标签页里运行一个动画，当这个标签页不可见时，浏览器会暂停它，这会减少CPU，内存的压力，节省电池电量。</p>\n</blockquote>\n<p>所以，我们第一步现在代码中增加一个<code>rAF</code>方法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 使用最优频率requestAnimationFrame代替定时器，当然如果浏览器如果不支持的话，还是使用定时器完成</span></div><div class=\"line\"><span class=\"built_in\">window</span>.rAF = (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">window</span>.requestAnimationFrame ||</div><div class=\"line\">            <span class=\"built_in\">window</span>.webkitRequestAnimationFrame ||</div><div class=\"line\">            <span class=\"built_in\">window</span>.mozRequestAnimationFrame ||</div><div class=\"line\">            <span class=\"built_in\">window</span>.oRequestAnimationFrame ||</div><div class=\"line\">            <span class=\"built_in\">window</span>.msRequestAnimationFrame ||</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">callback</span>) </span>&#123;</div><div class=\"line\">                setTimeout(callback, <span class=\"number\">1000</span> / <span class=\"number\">60</span>);</div><div class=\"line\">            &#125;;</div><div class=\"line\">&#125;)();</div></pre></td></tr></table></figure>\n<h3 id=\"初始化基本配置\"><a href=\"#初始化基本配置\" class=\"headerlink\" title=\"初始化基本配置\"></a>初始化基本配置</h3><p>首先我们可以设置一些默认的值，便于后续做修改调整或者适配等。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 默认配置</div><div class=\"line\">var defaultSetting = &#123;</div><div class=\"line\">    width: 900, // canvas默认宽度，后面修改为频幕宽度</div><div class=\"line\">    height: 300,    // canvas默认高度</div><div class=\"line\">    canvas: null,   // canvas对象</div><div class=\"line\">    ctx: null,  // 画布content(2x)</div><div class=\"line\">    snowArr: [],    // 雪花的数组</div><div class=\"line\">    total: 80   // 雪花的数量</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<p>接下来往雪花数组中推入指定数量的雪花对象，当然，每一个雪花我们可以给它设定自己的属性，长宽，渐变等。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">defaultSetting.width = <span class=\"built_in\">window</span>.innerWidth || <span class=\"built_in\">document</span>.documentElement.clientWidth ||  <span class=\"built_in\">document</span>.body.clientWidth;</div><div class=\"line\">defaultSetting.canvas = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"canvas\"</span>);</div><div class=\"line\">defaultSetting.canvas.setAttribute(<span class=\"string\">\"width\"</span>,defaultSetting.width);</div><div class=\"line\">defaultSetting.ctx = defaultSetting.canvas.getContext(<span class=\"string\">\"2d\"</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; defaultSetting.total;i++)&#123;</div><div class=\"line\">    defaultSetting.snowArr.push(&#123;</div><div class=\"line\">        <span class=\"string\">\"left\"</span>:Tools.createRandom(<span class=\"number\">0</span>, defaultSetting.width), <span class=\"comment\">// 工具函数createRandom是创建一个m上下n的随机数</span></div><div class=\"line\">        <span class=\"string\">\"top\"</span>:Tools.createRandom(<span class=\"number\">0</span>, defaultSetting.height),</div><div class=\"line\">        <span class=\"string\">\"deg\"</span>:Tools.createRandom(<span class=\"number\">-6</span>, <span class=\"number\">6</span>),</div><div class=\"line\">        <span class=\"string\">\"scale\"</span>:Tools.createRandom(<span class=\"number\">3</span>, <span class=\"number\">6</span>)</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>这个时候我们就得到了开始时刻雪花的数组和相关属性值</p>\n<h3 id=\"核心，不断渲染雪花位置的函数\"><a href=\"#核心，不断渲染雪花位置的函数\" class=\"headerlink\" title=\"核心，不断渲染雪花位置的函数\"></a>核心，不断渲染雪花位置的函数</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateSnow</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 清除画布，重新绘制下一帧雪花的位置</span></div><div class=\"line\">    defaultSetting.ctx.clearRect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, defaultSetting.width, defaultSetting.height);</div><div class=\"line\">    defaultSetting.ctx.save();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// 循环雪花数组，分别绘制每一个雪花的位置</span></div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i&lt;defaultSetting.snowArr.length; i++)&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> h = <span class=\"number\">0.5</span> * defaultSetting.snowArr[i].scale;</div><div class=\"line\">        defaultSetting.snowArr[i].left = defaultSetting.snowArr[i].left + <span class=\"built_in\">Math</span>.tan(Tools.radian(defaultSetting.snowArr[i].deg))*h/<span class=\"number\">2</span>;</div><div class=\"line\">        defaultSetting.snowArr[i].top = defaultSetting.snowArr[i].top + h;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// 删除画面外的雪花</span></div><div class=\"line\">        <span class=\"keyword\">if</span>(defaultSetting.snowArr[i].left &lt; <span class=\"number\">0</span> || defaultSetting.snowArr[i].left &gt; defaultSetting.width || defaultSetting.snowArr[i].top &gt; defaultSetting.height)&#123;</div><div class=\"line\">            defaultSetting.snowArr.splice(i--, <span class=\"number\">1</span>);</div><div class=\"line\">            <span class=\"keyword\">continue</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">var</span> width_i = defaultSetting.snowArr[i].scale;</div><div class=\"line\">        <span class=\"comment\">// 雪花边界投影</span></div><div class=\"line\">        <span class=\"keyword\">var</span> ra = defaultSetting.ctx.createRadialGradient(defaultSetting.snowArr[i].left, defaultSetting.snowArr[i].top, width_i/<span class=\"number\">4</span>, defaultSetting.snowArr[i].left, defaultSetting.snowArr[i].top, width_i);</div><div class=\"line\">        ra.addColorStop(<span class=\"number\">0</span>, <span class=\"string\">\"rgba(255,255,255,0.8)\"</span>);</div><div class=\"line\">        ra.addColorStop(<span class=\"number\">1</span>, <span class=\"string\">\"rgba(255,255,255,0.1)\"</span>);</div><div class=\"line\">        defaultSetting.ctx.fillStyle = ra;</div><div class=\"line\">        defaultSetting.ctx.beginPath();</div><div class=\"line\">        defaultSetting.ctx.arc(defaultSetting.snowArr[i].left, defaultSetting.snowArr[i].top, width_i, <span class=\"number\">0</span>, <span class=\"number\">2</span>*<span class=\"built_in\">Math</span>.PI);</div><div class=\"line\">        defaultSetting.ctx.fill();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    defaultSetting.ctx.restore();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// 持续刷新雪花的位置</span></div><div class=\"line\">    rAF(updateSnow);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>这样我们就得到了一组80个不断运动的雪花，但是这样的话不会有源源不断的新雪花加入，所以，最后一步，我们还需要不断补充新鲜雪花。</p>\n<h3 id=\"补充新鲜雪花\"><a href=\"#补充新鲜雪花\" class=\"headerlink\" title=\"补充新鲜雪花\"></a>补充新鲜雪花</h3><p>这个时候就会发现开始把雪花数组给单独提出来是多么明智，只需要不断push到该数组就行了</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 增加新的雪花</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createNewSnow</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(defaultSetting.snowArr.length &lt; <span class=\"number\">200</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i&lt;<span class=\"number\">20</span>; i++)&#123;</div><div class=\"line\">                defaultSetting.snowArr.push(&#123;</div><div class=\"line\">                    <span class=\"string\">\"left\"</span>:Tools.createRandom(<span class=\"number\">0</span>, defaultSetting.width),</div><div class=\"line\">                    <span class=\"string\">\"top\"</span>:<span class=\"number\">0</span>,</div><div class=\"line\">                    <span class=\"string\">\"deg\"</span>:Tools.createRandom(<span class=\"number\">-6</span>, <span class=\"number\">6</span>),</div><div class=\"line\">                    <span class=\"string\">\"scale\"</span>:Tools.createRandom(<span class=\"number\">3</span>, <span class=\"number\">6</span>)</div><div class=\"line\">                &#125;);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        createNewSnow();</div><div class=\"line\">    &#125;, <span class=\"built_in\">Math</span>.random()*<span class=\"number\">200</span>+<span class=\"number\">500</span>);</div><div class=\"line\">&#125;</div><div class=\"line\">createNewSnow();</div></pre></td></tr></table></figure>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>一个简单的粒子下雪效果就是这么简单，进一步可以去试试alloy团队的粒子效果。</p>\n<hr>\n<p>如果能给您带去些许帮助，鄙人不甚欢心。如有错误，恳请交流指出，谢谢！<br>转载请注明出处：<a href=\"http://mcchen.club/\">http://mcchen.club/</a></p>\n<hr>\n","categories":["Javascript"],"tags":["Javascript","Canvas"]},{"title":"[译文]如果你是一个前端开发者，那么2017年你该学习什么","url":"http://mcchen.club/2017/01/04/[译文]如果你是一个前端开发者，那么2017年你该学习什么/","content":"<p>随着前端生态系统快节奏的发展，我们更倾向于把时间花在尝试一些最新的技术以及网上争论这些技术上。我不是说我们不应该这样做，但或许我们应该慢下来一点，把精力放到那些不变的事情上：它们可以很大程度上提高我们的工作的质量和价值，以及更好的理解那些新技术。</p>\n<p>这篇文章是结合了我个人的经验以及个人的期望。分享我的同时，我也希望能够听听你们的想法。</p>\n<h3 id=\"学习如何编写具有可读性的代码\"><a href=\"#学习如何编写具有可读性的代码\" class=\"headerlink\" title=\"学习如何编写具有可读性的代码\"></a>学习如何编写具有可读性的代码</h3><p>我们的大部分工作不是在编写新代码，而是修改现有代码。这意味着相比于写代码，你更多的是阅读代码，所以优化你的代码是为了下一个阅读的程序员，而不是为了注释。</p>\n<p>我推荐阅读这三本令人叹为观止的书 - 由短到长排序：</p>\n<ul>\n<li><a href=\"https://www.amazon.com/gp/product/0596802293/\" target=\"_blank\" rel=\"external\">The Art of Readable Code</a>  by Dustin Boswell</li>\n<li><a href=\"https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882/\" target=\"_blank\" rel=\"external\">Clean Code: A Handbook of Agile Software Craftsmanship</a>  by Robert C. Martin</li>\n<li><a href=\"https://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670/\" target=\"_blank\" rel=\"external\">Code Complete: A Practical Handbook of Software Construction</a>  by Steve McConnell</li>\n</ul>\n<h3 id=\"深入学习JavaScript\"><a href=\"#深入学习JavaScript\" class=\"headerlink\" title=\"深入学习JavaScript\"></a>深入学习JavaScript</h3><p>当每周都有一个比任何旧框架都要优秀的新JavaScript框架时，我们很容易把大部分时间花在学习框架而不是JavaScript本身上。如果你正在使用是一个你并不明白它实现原理的框架，请暂时停下吧，深入学习JavaScript本身，直到你明白你使用的框架的实现原理。</p>\n<ul>\n<li>一套非常适用于开始深入学习JavaScript的丛书系列推荐给你，Kyle Simpson 的 <a href=\"https://github.com/getify/You-Dont-Know-JS\" target=\"_blank\" rel=\"external\">You Don’t Know JavaScript</a>，你可以免费在线阅读。</li>\n<li>Eric Elliott 也有一个庞大的学习清单是关于<a href=\"https://medium.com/javascript-scene/top-javascript-frameworks-topics-to-learn-in-2017-700a397b711#.zhnbn4rvg\" target=\"_blank\" rel=\"external\">JavaScript topics to learn in 2017</a></li>\n<li>Henrique Alves 有一个清单关于<a href=\"http://alves.im/blog/before-dive-into-react.html\" target=\"_blank\" rel=\"external\">things you should know before using React</a>(实际上通用于任何框架)</li>\n<li>Mike Pennisi 的<a href=\"https://bocoup.com/weblog/javascript-developers-watch-your-language\" target=\"_blank\" rel=\"external\">JavaScript Developers: Watch Your Language</a> 可以帮助你理解由TC39(一个推动JavaScript发展的委员会)推进的关于ECMAScript的新功能</li>\n</ul>\n<h3 id=\"学习函数式编程\"><a href=\"#学习函数式编程\" class=\"headerlink\" title=\"学习函数式编程\"></a>学习函数式编程</h3><p>多年来，我们一直都想要JavaScript中出现类。现在我们终于有了它们，但却不想使用它们：函数式才是我们想要的！我们甚至通过JSX编写HTML。</p>\n<ul>\n<li><a href=\"https://github.com/getify/Functional-Light-JS\" target=\"_blank\" rel=\"external\">Functional-Light JavaScript</a> by Kyle Simpson</li>\n<li>Frisby 教授的<a href=\"https://github.com/MostlyAdequate/mostly-adequate-guide\" target=\"_blank\" rel=\"external\">Mostly adequate guide to functional programming ebook</a> 以及 <a href=\"https://egghead.io/courses/professor-frisby-introduces-composable-functional-javascript\" target=\"_blank\" rel=\"external\">他的免费课程</a></li>\n</ul>\n<h3 id=\"学习设计基础\"><a href=\"#学习设计基础\" class=\"headerlink\" title=\"学习设计基础\"></a>学习设计基础</h3><p>作为前端开发人员，我们比团队中的任何人都更接近用户，甚至可能比设计师还要更接近用户。如果必须要设计师来验证你在屏幕上展示的每个像素，那么你可能做了一些错误的事情。</p>\n<ul>\n<li>黑客设计：<a href=\"https://www.amazon.com/Design-Hackers-Reverse-Engineering-Beauty-ebook/dp/B005J578EW\" target=\"_blank\" rel=\"external\">a book</a>和<a href=\"http://designforhackers.com/\" target=\"_blank\" rel=\"external\">a free course</a></li>\n<li>Tracy Osborn 提到的<a href=\"https://youtu.be/ZbrzdMaumNk\" target=\"_blank\" rel=\"external\">Design for Non-Designers</a></li>\n<li><a href=\"http://nathanbarry.com/webapps/\" target=\"_blank\" rel=\"external\">Design of Web Applications</a> by Nathan Barry</li>\n<li><a href=\"https://abookapart.com/products/on-web-typography\" target=\"_blank\" rel=\"external\">On Web Typography</a> by Jason Santa Maria</li>\n<li><a href=\"https://www.amazon.com/Inmates-Are-Running-Asylum-Products-ebook/dp/B000OZ0N62/\" target=\"_blank\" rel=\"external\">The Inmates Are Running the Asylum: Why High Tech Products Drive Us Crazy and How to Restore the Sanity</a> by Alan Cooper</li>\n<li>一些关于UI动画的文章：<a href=\"http://babich.biz/how-to-use-animation-to-improve-ux/\" target=\"_blank\" rel=\"external\">How to Use Animation to Improve UX </a>，<a href=\"https://medium.com/@pasql/transitional-interfaces-926eb80d64e3#.igcwawszz\" target=\"_blank\" rel=\"external\">Transitional Interfaces</a></li>\n</ul>\n<h3 id=\"了解如何与人合作\"><a href=\"#了解如何与人合作\" class=\"headerlink\" title=\"了解如何与人合作\"></a>了解如何与人合作</h3><p>我们有些人编程，是因为我们更喜欢与计算机交互而不是与人 - 不幸的是，这不是它的工作原理。</p>\n<p>我们很少孤立工作：我们必须与其他开发人员，设计师，经理，有时甚至与用户交谈。虽然这很难，但对于你想真正了解你在做什么以及为什么要这么做来说，这一切是非常重要的。因为这是我们做什么的价值所在。</p>\n<ul>\n<li><a href=\"https://www.amazon.com/Soft-Skills-software-developers-manual/dp/1617292397/\" target=\"_blank\" rel=\"external\">Soft Skills: The software developer’s life manual </a> by John Sonmez</li>\n<li><a href=\"https://www.amazon.com/Clean-Coder-Conduct-Professional-Programmers/dp/0137081073/\" target=\"_blank\" rel=\"external\">The Clean Coder: A Code of Conduct for Professional Programmers</a> by Robert C. Martin</li>\n<li><a href=\"https://www.amazon.com/Start-No-Negotiating-Tools-that-ebook/dp/B003EY7JEE/\" target=\"_blank\" rel=\"external\">Start with No: The Negotiating Tools that the Pros Don’t Want You to Know</a> by Jim Camp</li>\n</ul>\n<h3 id=\"学习如何通过文本与人沟通\"><a href=\"#学习如何通过文本与人沟通\" class=\"headerlink\" title=\"学习如何通过文本与人沟通\"></a>学习如何通过文本与人沟通</h3><p>我们与同事和其他人交流的时候大部分都是使用文本：任务描述和评论，代码评论，Git提交，聊天消息，电子邮件，微博，博客帖子等。</p>\n<p>想象一下，人们需要花多少时间去阅读和理解这些。如果你可以通过写得更清楚和简洁去减少这个时间，世界将变得更适宜工作。</p>\n<ul>\n<li><a href=\"https://www.amazon.com/gp/product/0060891548/\" target=\"_blank\" rel=\"external\">On Writing Well: The Classic Guide to Writing Nonfiction</a>  by William Zinsser</li>\n<li><a href=\"https://www.amazon.com/Elements-Style-4th-William-Strunk/dp/0205313426/\" target=\"_blank\" rel=\"external\">The Elements of Style</a> by William Strunk and E. B. White</li>\n<li><a href=\"http://www.economist.com/blogs/prospero/2013/07/george-orwell-writing\" target=\"_blank\" rel=\"external\">Orwell’s rules on writing</a></li>\n<li>在俄罗斯：非常棒的<a href=\"http://maximilyahov.ru/glvrd-pro/\" target=\"_blank\" rel=\"external\">Glavred course</a></li>\n</ul>\n<h3 id=\"学习经典的计算机科学知识\"><a href=\"#学习经典的计算机科学知识\" class=\"headerlink\" title=\"学习经典的计算机科学知识\"></a>学习经典的计算机科学知识</h3><p>前端开发一点也不像是动画下拉菜单。它比以前更复杂，而那个臭名昭着的“JavaScript疲劳”的一部分源于我们必须解决的任务复杂性的不断提高。</p>\n<p>然而，这意味着，是时候学习非前端开发几十年建立起来的全部知识理论。在这里，我想要让你多推荐一些。</p>\n<ul>\n<li><a href=\"https://www.coursera.org/specializations/algorithms\" target=\"_blank\" rel=\"external\">Learn To Think Like A Computer Scientist</a> course at Coursera</li>\n<li><a href=\"https://signalvnoise.com/posts/3375-the-five-programming-books-that-meant-most-to-me\" target=\"_blank\" rel=\"external\">The five programming books that meant most to me</a> by David Heinemeier Hansson</li>\n</ul>\n<h3 id=\"原文地址\"><a href=\"#原文地址\" class=\"headerlink\" title=\"原文地址\"></a>原文地址</h3><p><a href=\"https://medium.com/@sapegin/what-to-learn-in-2017-if-youre-a-frontend-developer-b6cfef46effd#.lsfa4327a\" target=\"_blank\" rel=\"external\">https://medium.com/@sapegin/what-to-learn-in-2017-if-youre-a-frontend-developer-b6cfef46effd#.lsfa4327a</a></p>\n<hr>\n<p>如果能给您带去些许帮助，鄙人不甚欢心。如有错误，恳请交流指出，谢谢！<br>转载请注明出处：<a href=\"http://mcchen.club/\">http://mcchen.club/</a></p>\n<hr>\n","categories":["译文"],"tags":["前端译文"]},{"title":"vue入门实例-基于vue&vue-router重写Cnode社区","url":"http://mcchen.club/2016/12/23/vue入门实例-基于vue&vue-router重写Cnode社区/","content":"<h2 id=\"项目介绍\"><a href=\"#项目介绍\" class=\"headerlink\" title=\"项目介绍\"></a>项目介绍</h2><p><a href=\"http://mcchen.club/project/vue-cnode/index.html\">线上实例Demo</a></p>\n<p>涉及到的技术包括但不限于：<code>vue</code>、<code>vue-router</code>、<code>webpack</code>、<code>zepto</code>、<code>fastclick</code>、<code>scss</code></p>\n<blockquote>\n<p>Tips:vue&amp;vue-router这里使用的是2.0版</p>\n</blockquote>\n<h2 id=\"文档\"><a href=\"#文档\" class=\"headerlink\" title=\"文档\"></a>文档</h2><p><a href=\"http://mcchen.club/2016/12/23/vue入门实例-基于vue&amp;vue-router重写Cnode社区/\">文档</a></p>\n<h2 id=\"Github\"><a href=\"#Github\" class=\"headerlink\" title=\"Github\"></a>Github</h2><p>Github地址：<a href=\"https://github.com/ChenJiaH/vue-cnode\" target=\"_blank\" rel=\"external\">vue-cnode</a></p>\n<p>线上地址:<a href=\"http://mcchen.club/project/vue-cnode/index.html\">Demo实例地址</a></p>\n<h2 id=\"项目开始之前的乱七八糟\"><a href=\"#项目开始之前的乱七八糟\" class=\"headerlink\" title=\"项目开始之前的乱七八糟\"></a>项目开始之前的乱七八糟</h2><p>最初的设想是完完全全由自己构建，这样能够熟悉全部的过程。</p>\n<ul>\n<li><p>创建项目目录层级(按照脚手架)</p>\n</li>\n<li><p>创建package.json，然后安装什么babel,各种loader等等一大堆乱七八糟</p>\n</li>\n<li><p>创建webpack.config.js，配置入口js，生成文件路径，预加载和加载资源等等</p>\n</li>\n<li><p>引入webpack plugins，通过这个webpack-hot-middleware实现重载</p>\n</li>\n</ul>\n<p>配置了一大堆之后，发现还有问题，然后还需要考虑build的配置，遂，猝，享年1小时。然后果断选择vue官网脚手架入手。</p>\n<blockquote>\n<p>好了，下面进入正题。</p>\n</blockquote>\n<h2 id=\"开发步骤\"><a href=\"#开发步骤\" class=\"headerlink\" title=\"开发步骤\"></a>开发步骤</h2><h3 id=\"通过vue官网提供的命令行工具快速搭建一个应用\"><a href=\"#通过vue官网提供的命令行工具快速搭建一个应用\" class=\"headerlink\" title=\"通过vue官网提供的命令行工具快速搭建一个应用\"></a>通过vue官网提供的命令行工具快速搭建一个应用</h3><p><a href=\"https://github.com/vuejs/vue-cli\" target=\"_blank\" rel=\"external\">Github文档</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 全局安装 vue-cli</span></div><div class=\"line\">$ npm install --global vue-cli</div><div class=\"line\"><span class=\"comment\"># 创建一个基于 webpack 模板的新项目</span></div><div class=\"line\">$ vue init webpack my-project</div><div class=\"line\"><span class=\"comment\"># 安装依赖，走你</span></div><div class=\"line\">$ <span class=\"built_in\">cd</span> my-project</div><div class=\"line\">$ npm install</div><div class=\"line\">$ npm run dev</div></pre></td></tr></table></figure>\n<p>这个时候你会发现<code>my-project</code>项目已经自动创建，文件路径大致如下<br><img src=\"/images/2016-12-23_000001.png\" alt=\"Alt text\"></p>\n<h3 id=\"取Cnode社区最常用的主题页相关入手\"><a href=\"#取Cnode社区最常用的主题页相关入手\" class=\"headerlink\" title=\"取Cnode社区最常用的主题页相关入手\"></a>取Cnode社区最常用的主题页相关入手</h3><p>大概可以分为主题页，主题详情页，评论点赞等设计到登录的这里暂时跳过，至于为什么？别问我，就是任性。</p>\n<p>我这里全部采用单文件组件方式开发，即<code>*.vue</code>。</p>\n<p><a href=\"https://cn.vuejs.org/v2/guide/single-file-components.html\" target=\"_blank\" rel=\"external\">什么是单文件组件？</a></p>\n<p>与vue相关的资源全部放在src文件夹下，无需vue渲染的资源放到static文件夹下，附上开发文件目录</p>\n<p><img src=\"/images/2016-12-23_000002.png\" alt=\"Alt text\"></p>\n<ul>\n<li>我们先来看看main.js</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 引入vue</span></div><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span>;</div><div class=\"line\"><span class=\"comment\">// 引入zepto</span></div><div class=\"line\"><span class=\"keyword\">import</span> $ <span class=\"keyword\">from</span> <span class=\"string\">'webpack-zepto'</span>;</div><div class=\"line\"><span class=\"comment\">// 引入vue-router</span></div><div class=\"line\"><span class=\"keyword\">import</span> VueRouter <span class=\"keyword\">from</span> <span class=\"string\">'vue-router'</span>;</div><div class=\"line\"><span class=\"comment\">// 引入路由配置文件</span></div><div class=\"line\"><span class=\"keyword\">import</span> routes <span class=\"keyword\">from</span> <span class=\"string\">'./routes.js'</span>;</div><div class=\"line\"><span class=\"comment\">//  引入fastclick</span></div><div class=\"line\"><span class=\"keyword\">import</span> FastClick <span class=\"keyword\">from</span> <span class=\"string\">'fastclick'</span>;</div><div class=\"line\"><span class=\"comment\">// 引入页面入口文件，其实这个可以不要，我这里引入的唯一目的就是在App.vue下加载全局通用css</span></div><div class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./App.vue'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// ajax设置跨域</span></div><div class=\"line\">$.ajaxSettings.crossDomain = <span class=\"literal\">true</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/* eslint-disable no-new */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 安装VueRouter插件</span></div><div class=\"line\">Vue.use(VueRouter);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 创建一个router的实例对象</span></div><div class=\"line\"><span class=\"keyword\">var</span> router = <span class=\"keyword\">new</span> VueRouter(&#123;</div><div class=\"line\">  routes</div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"comment\">// 移动端修复点透和延时</span></div><div class=\"line\">FastClick.attach(<span class=\"built_in\">document</span>.body);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 创建一个Vue实例对象</span></div><div class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  <span class=\"attr\">el</span>: <span class=\"string\">\"#app\"</span>,   <span class=\"comment\">// 挂载元素，这里挂载到index.html中id为app的元素上</span></div><div class=\"line\">  router,   <span class=\"comment\">// 引入路由，等于router: router</span></div><div class=\"line\">  template: <span class=\"string\">'&lt;App/&gt;'</span>,   <span class=\"comment\">// 注意:这里如果使用了template，那么&lt;App&gt;&lt;/App&gt;将会替换你整个id为app的元素，除非里面含有slot标签，你想用render也是一个道理</span></div><div class=\"line\">  components: &#123; <span class=\"comment\">// 组件引入，App对应的就是&lt;App&gt;&lt;/App&gt;</span></div><div class=\"line\">    App</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<ul>\n<li>接下来看看路由配置routes.js</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 引入路由对应的组件</span></div><div class=\"line\"><span class=\"keyword\">import</span> preLoader <span class=\"keyword\">from</span> <span class=\"string\">'./assets/view/preLoader.vue'</span>;</div><div class=\"line\"><span class=\"keyword\">import</span> all <span class=\"keyword\">from</span> <span class=\"string\">'./assets/view/all.vue'</span>;</div><div class=\"line\"><span class=\"keyword\">import</span> topic <span class=\"keyword\">from</span> <span class=\"string\">'./assets/view/topic.vue'</span>;</div><div class=\"line\"><span class=\"keyword\">import</span> about <span class=\"keyword\">from</span> <span class=\"string\">'./assets/view/about.vue'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> [</div><div class=\"line\">  &#123;</div><div class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">\"/\"</span>,  <span class=\"comment\">// 路由路径，当页面路径为.../#/的时候使用组件preLoader去渲染页面</span></div><div class=\"line\">    name: <span class=\"string\">\"home\"</span>,   <span class=\"comment\">// 可以理解为key</span></div><div class=\"line\">    component: preLoader    <span class=\"comment\">// 组件</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  &#123;</div><div class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">\"/all\"</span>,</div><div class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">\"all\"</span>,</div><div class=\"line\">    <span class=\"attr\">component</span>: all</div><div class=\"line\">  &#125;,</div><div class=\"line\">  &#123;</div><div class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">\"/topic/:id\"</span>,</div><div class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">\"topic\"</span>,</div><div class=\"line\">    <span class=\"attr\">component</span>: topic</div><div class=\"line\">  &#125;,</div><div class=\"line\">  &#123;</div><div class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">\"/about\"</span>,</div><div class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">\"about\"</span>,</div><div class=\"line\">    <span class=\"attr\">component</span>: about</div><div class=\"line\">  &#125;</div><div class=\"line\">];</div></pre></td></tr></table></figure>\n<ul>\n<li>如何实现页面跳转，我们来看看根页面的组件preLoader.vue</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\">// template里面就是等待渲染html结构</div><div class=\"line\">&lt;template&gt;</div><div class=\"line\">  &lt;div id=\"pageLoader\" v-show=\"show\"&gt;&lt;img src=\"~assets/images/preLoad.gif\" alt=\"\"&gt;&lt;/div&gt;</div><div class=\"line\">&lt;/template&gt;</div><div class=\"line\">&lt;script&gt;</div><div class=\"line\">    // 不习惯export写法可以用 module.exports = &#123;&#125;</div><div class=\"line\">    export default &#123;</div><div class=\"line\">      name: 'preLoader',</div><div class=\"line\">      data ()&#123;</div><div class=\"line\">        return &#123;</div><div class=\"line\">          show: true</div><div class=\"line\">        &#125;</div><div class=\"line\">      &#125;,</div><div class=\"line\">      mounted: function () &#123;</div><div class=\"line\">        // 往this.$router里push一个name为all的对象，意味着路由将跳转到/#/ + all =&gt; /#/all，这里还有其他的模式，不论</div><div class=\"line\">        setTimeout (() =&gt; &#123;</div><div class=\"line\">          this.$router.push(&#123;</div><div class=\"line\">            name: 'all'</div><div class=\"line\">          &#125;);</div><div class=\"line\">          this.show = false;</div><div class=\"line\">        &#125;,1314);</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&lt;/script&gt;</div><div class=\"line\">// 这里如果要使用scss的话必须加上lang=\"scss\"，为了让ide不报错，给style加上rel跟type如下就可以了</div><div class=\"line\">// 注意：vue-cli默认最后是编译处理css的，这里想使用scss必须安装style-loader和vue-style-loader，不需要改webpack配置</div><div class=\"line\">&lt;style rel=\"stylesheet/scss\" type=\"text/css\"  lang=\"scss\"&gt;</div><div class=\"line\">  .main-wrap &#123; position: relative; max-width: 750px; min-width: 320px; margin: 0 auto; width: 100%; min-height: 100%;&#125;</div><div class=\"line\">  #pageLoader &#123; position: fixed; left: 50%; top: 50%; transform: translate(-50%,-50%) translateZ(0); width: 160px; height: 20px;&#125;</div><div class=\"line\">&lt;/style&gt;</div></pre></td></tr></table></figure>\n<ul>\n<li>页面跳转之后进入到主题的列表页all.vue，template跟style没什么好说的，正常写吧，来看看script部分</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 引入组件</span></div><div class=\"line\"><span class=\"keyword\">import</span> $ <span class=\"keyword\">from</span> <span class=\"string\">'webpack-zepto'</span>;</div><div class=\"line\"><span class=\"keyword\">import</span> backTop <span class=\"keyword\">from</span> <span class=\"string\">'../components/backtop.vue'</span>;</div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">\"all\"</span>,</div><div class=\"line\">  <span class=\"attr\">components</span>: &#123;</div><div class=\"line\">    backTop,</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">filters</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">getFreeTime</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">time</span>) </span>&#123;    <span class=\"comment\">// 这里是自定义过滤器，由于vue2.0干掉了默认提供的filters，所以要使用的话需要自行编写</span></div><div class=\"line\">      <span class=\"comment\">// Code</span></div><div class=\"line\">      <span class=\"keyword\">return</span> time</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  data ()&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">      <span class=\"attr\">SCROLL_LOCK</span>: <span class=\"literal\">false</span>, <span class=\"comment\">// 滚动锁，在ajax触发之后完成之前保证不会再次发出请求</span></div><div class=\"line\">      menuShow: <span class=\"literal\">false</span>,    <span class=\"comment\">// menu菜单控制器</span></div><div class=\"line\">      topics: [], <span class=\"comment\">// 数据</span></div><div class=\"line\">      params: &#123;   <span class=\"comment\">// 请求参数</span></div><div class=\"line\">        page: <span class=\"number\">1</span>,</div><div class=\"line\">        <span class=\"attr\">limit</span>: <span class=\"number\">20</span>,</div><div class=\"line\">        <span class=\"attr\">tab</span>: <span class=\"string\">'all'</span>,</div><div class=\"line\">        <span class=\"attr\">mdrender</span>: <span class=\"literal\">true</span></div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">mounted</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;  <span class=\"comment\">// 当结构挂载之后</span></div><div class=\"line\">    <span class=\"comment\">// 这里就是我们要做的事情了...</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// 先判断是否存在tab</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.$route.query &amp;&amp; <span class=\"keyword\">this</span>.$route.query.tab) &#123;</div><div class=\"line\">      <span class=\"keyword\">this</span>.params.tab = <span class=\"keyword\">this</span>.$route.query.tab; <span class=\"comment\">// 当前所在类别</span></div><div class=\"line\">      $(<span class=\"string\">\".menu-list a\"</span>).eq(<span class=\"keyword\">this</span>.getTitle(<span class=\"keyword\">this</span>.$route.query.tab).idx).addClass(<span class=\"string\">\"active\"</span>).siblings(<span class=\"string\">\"a\"</span>).removeClass(<span class=\"string\">\"active\"</span>);</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">      $(<span class=\"string\">\".menu-list a\"</span>).eq(<span class=\"number\">0</span>).addClass(<span class=\"string\">\"active\"</span>).siblings(<span class=\"string\">\"a\"</span>).removeClass(<span class=\"string\">\"active\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">// 请求数据，这里提为一个methods了，因为存在多次调用</span></div><div class=\"line\">    <span class=\"keyword\">this</span>.getTopics();</div><div class=\"line\">    $(<span class=\"string\">\"body\"</span>).removeClass(<span class=\"string\">\"os-mode\"</span>);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// 滚动</span></div><div class=\"line\">    <span class=\"keyword\">var</span> self = <span class=\"keyword\">this</span>;</div><div class=\"line\">    $(<span class=\"built_in\">window</span>).on(<span class=\"string\">\"scroll\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      self.getScrollData()</div><div class=\"line\">    &#125;)</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">methods</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">getTitle</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">val</span>) </span>&#123;</div><div class=\"line\">      <span class=\"comment\">// 获取动态的标题</span></div><div class=\"line\">      <span class=\"keyword\">return</span> obj;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"attr\">getTopics</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">type</span>) </span>&#123;  <span class=\"comment\">// 请求数据</span></div><div class=\"line\">      <span class=\"keyword\">var</span> self = <span class=\"keyword\">this</span>;</div><div class=\"line\">      $.get(<span class=\"string\">\"https://cnodejs.org/api/v1/topics\"</span>, self.params, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (res &amp;&amp; res.data) &#123;  <span class=\"comment\">// 如果查到数据</span></div><div class=\"line\">          self.SCROLL_LOCK = <span class=\"literal\">true</span>;</div><div class=\"line\">          self.topics = res.data;</div><div class=\"line\">        &#125;</div><div class=\"line\">      &#125;)</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"comment\">// 滚动加载数据</span></div><div class=\"line\">    getScrollData() &#123;</div><div class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.SCROLL_LOCK) &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> totalheight = $(<span class=\"built_in\">window</span>).height() + $(<span class=\"built_in\">window</span>).scrollTop();</div><div class=\"line\">        <span class=\"keyword\">if</span> ($(<span class=\"built_in\">document</span>).height() &lt;= totalheight + <span class=\"number\">200</span>) &#123;</div><div class=\"line\">          <span class=\"keyword\">this</span>.SCROLL_LOCK = <span class=\"literal\">false</span>;</div><div class=\"line\">          <span class=\"keyword\">this</span>.params.limit += <span class=\"number\">20</span>;</div><div class=\"line\">          <span class=\"keyword\">this</span>.getTopics();</div><div class=\"line\">        &#125;</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"comment\">// 显示sidebar</span></div><div class=\"line\">    openMenu: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">this</span>.menuShow = <span class=\"literal\">true</span>;</div><div class=\"line\">      $(<span class=\"string\">\"body\"</span>).addClass(<span class=\"string\">\"os-mode\"</span>);</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"comment\">// 收起sidebar</span></div><div class=\"line\">    closeMenu: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">this</span>.menuShow = <span class=\"literal\">false</span>;</div><div class=\"line\">      $(<span class=\"string\">\"body\"</span>).removeClass(<span class=\"string\">\"os-mode\"</span>);</div><div class=\"line\">    &#125;,</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">computed</span>: &#123; <span class=\"comment\">// 计算属性，适用于频繁变动</span></div><div class=\"line\">    title: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.getTitle(<span class=\"keyword\">this</span>.params.tab).title;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"attr\">getOpenClass</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.menuShow) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"open\"</span>;</div><div class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>;</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">watch</span>: &#123;    <span class=\"comment\">// 监听器</span></div><div class=\"line\">    $route: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">to, from</span>) </span>&#123;     <span class=\"comment\">// 这里是核心，监听$route(路由的配置对象),一旦这玩意变了，就肯定有情况</span></div><div class=\"line\">      <span class=\"comment\">// 如果是当前页面切换分类的情况</span></div><div class=\"line\">      <span class=\"keyword\">if</span> (to.query &amp;&amp; to.query.tab) &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.params.tab = to.query.tab;</div><div class=\"line\">        $(<span class=\"string\">\".menu-list a\"</span>).eq(<span class=\"keyword\">this</span>.getTitle(to.query.tab).idx).addClass(<span class=\"string\">\"active\"</span>).siblings(<span class=\"string\">\"a\"</span>).removeClass(<span class=\"string\">\"active\"</span>);</div><div class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        $(<span class=\"string\">\".menu-list a\"</span>).eq(<span class=\"number\">0</span>).addClass(<span class=\"string\">\"active\"</span>).siblings(<span class=\"string\">\"a\"</span>).removeClass(<span class=\"string\">\"active\"</span>);</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"keyword\">this</span>.getTopics();</div><div class=\"line\">      <span class=\"comment\">// 隐藏导航栏</span></div><div class=\"line\">      <span class=\"keyword\">this</span>.menuShow = <span class=\"literal\">false</span>;</div><div class=\"line\">      $(<span class=\"string\">\"body\"</span>).removeClass(<span class=\"string\">\"os-mode\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ul>\n<li>一个完整的组件就大概是上述几个步骤了，按照<a href=\"https://github.com/ChenJiaH/vue-cnode\" target=\"_blank\" rel=\"external\">源码</a>安装编写试试吧</li>\n</ul>\n<h2 id=\"版本\"><a href=\"#版本\" class=\"headerlink\" title=\"版本\"></a>版本</h2><p>1.0.0</p>\n<h2 id=\"缺点与小尾巴\"><a href=\"#缺点与小尾巴\" class=\"headerlink\" title=\"缺点与小尾巴\"></a>缺点与小尾巴</h2><h3 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h3><ul>\n<li><p>其实里面组件分的并不细，比如header、sidebar都可以单独抽出来作为组件存在，可以减少代码量</p>\n</li>\n<li><p>还可以拓展评论，登录，用户信息等一些列<a href=\"https://cnodejs.org/api\" target=\"_blank\" rel=\"external\">CNode API</a>提供的功能页面</p>\n</li>\n<li><p>如果没有脚手架，直接上手开发复杂度不低</p>\n</li>\n<li><p>这里还没有引入vuex做状态管理，如果涉及到非父子组件通信建议使用</p>\n</li>\n</ul>\n<h3 id=\"写在结尾的话\"><a href=\"#写在结尾的话\" class=\"headerlink\" title=\"写在结尾的话\"></a>写在结尾的话</h3><p>CNode项目还是比较建议作为一个vue&amp;vue-router的入门级练手项目，因为里面实际上涉及到了单页路由的切换管理，同时也实现了日常开发的一些基本功能：包括tab页签切换，ajax请求数据，能够满足日常项目的基本要求。</p>\n<blockquote>\n<p>特别简单的页面不建议使用，正常html+css+js的效率远高于使用vue.</p>\n</blockquote>\n<hr>\n<p>如果能给您带去些许帮助，鄙人不甚欢心。如有错误，恳请交流指出，谢谢！<br>转载请注明出处：<a href=\"http://mcchen.club/\">http://mcchen.club/</a></p>\n<hr>\n","categories":["Vuejs"],"tags":["Javascript","Vuejs"]},{"title":"Nodejs创建缩略图","url":"http://mcchen.club/2016/12/13/Nodejs创建缩略图/","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>团队站项目页因为采用瀑布流形式展示，同屏幕出现了大量大尺寸图，影响了页面的流畅度。</p>\n<p>经过测试：</p>\n<ol>\n<li>全部更换为一张大图，页面流畅</li>\n<li>参考首页，多张正常大小图，页面流畅</li>\n</ol>\n<p>基本可以确定：<strong>图大而且多，是导致页面卡顿的“真凶”</strong></p>\n<h2 id=\"自己实现图片缩略图\"><a href=\"#自己实现图片缩略图\" class=\"headerlink\" title=\"自己实现图片缩略图\"></a>自己实现图片缩略图</h2><h3 id=\"Step1\"><a href=\"#Step1\" class=\"headerlink\" title=\"Step1\"></a>Step1</h3><p>缩略图嘛，首先要有原图，然后必然要对图片进行处理。Node里面，要处理图片，无非就是使用二进制流，然后通过Buffer去Do anything what you want…</p>\n<h3 id=\"Step2\"><a href=\"#Step2\" class=\"headerlink\" title=\"Step2\"></a>Step2</h3><p>对图片进行处理，我这里采用的是gm模块，人家有现成的轮子为啥要自己封装，484傻…gm模块必须依赖于一个本地图片处理软件。</p>\n<p>这里有两个选择：<a href=\"http://www.graphicsmagick.org/download.html\" target=\"_blank\" rel=\"external\">GraphicsMagick</a>和<a href=\"http://www.imagemagick.org/script/binary-releases.php\" target=\"_blank\" rel=\"external\">ImageMagick</a>。我选择的是前者，你问我为什么？因为它前啊~</p>\n<p>安装的教程自己google去，不用谢哈~注意：需要添加到环境变量。</p>\n<h3 id=\"Step3\"><a href=\"#Step3\" class=\"headerlink\" title=\"Step3\"></a>Step3</h3><p>安装完成后，就是在nodejs下使用gm模块了</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// import gm module</span></div><div class=\"line\"><span class=\"keyword\">var</span> gm = <span class=\"built_in\">require</span>(<span class=\"string\">\"gm\"</span>);</div><div class=\"line\"><span class=\"comment\">// use example</span></div><div class=\"line\">gm(filePath)</div><div class=\"line\">    .resize(<span class=\"number\">100</span>,<span class=\"number\">200</span>))</div><div class=\"line\">    .write(<span class=\"string\">\"upload/\"</span> + outPath, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(e) &#123; logger.error(<span class=\"string\">\"gm写图片失败了\"</span>)&#125;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">\"成功在本地生成缩略图 upload/\"</span>+ outPath);</div><div class=\"line\">        <span class=\"comment\">// Do something</span></div><div class=\"line\">    &#125;);</div></pre></td></tr></table></figure>\n<p>上述代码实现的是通过gm读取文件路径为filePath的文件，然后生成一张100X200的缩略图，接着写入生成到upload文件夹下的outPath下。运行一下，发现会抛出error，因为outPath的文件夹目录不存在。</p>\n<p><strong>为什么会不存在路径？</strong></p>\n<p>因为我吃饱没事每个文件夹都打开然后找到之后自己创建吗，吃力不讨好。所以在这里，就是我前面文章介绍的<a href=\"http://mcchen.club/2016/07/12/Nodejs%E5%88%9B%E5%BB%BA%E5%A4%9A%E7%BA%A7%E7%9B%AE%E5%BD%95%E6%96%87%E4%BB%B6%E5%A4%B9/\">mkdir模块</a>大放异彩的时候啦~</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> gm = <span class=\"built_in\">require</span>(<span class=\"string\">\"gm\"</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> mkdirs = <span class=\"built_in\">require</span>(<span class=\"string\">'jm-mkdirs'</span>);</div><div class=\"line\">mkdirs.sync(<span class=\"string\">\"upload/\"</span> + tempArr.join(<span class=\"string\">\"/\"</span>)); <span class=\"comment\">// 就是这句</span></div><div class=\"line\">gm(filesList[imageIdx].path)</div><div class=\"line\">    .resize(<span class=\"number\">304</span>,<span class=\"built_in\">Math</span>.ceil(<span class=\"number\">304</span>/filesList[imageIdx].radio))</div><div class=\"line\">    .write(<span class=\"string\">\"upload/\"</span> + outPath, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(e) &#123; logger.error(<span class=\"string\">\"gm写图片失败了\"</span>)&#125;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">\"成功在本地生成缩略图 upload/\"</span>+ outPath);</div><div class=\"line\">        logger.debug(<span class=\"string\">\"成功在本地生成缩略图 upload/\"</span>+ outPath);</div><div class=\"line\">        <span class=\"comment\">// Do something</span></div><div class=\"line\">    &#125;);</div></pre></td></tr></table></figure>\n<p>这样会在一个新的本地路径下生成一个同结构的缩略图文件夹了。Perfect!</p>\n<h3 id=\"Step4\"><a href=\"#Step4\" class=\"headerlink\" title=\"Step4:\"></a>Step4:</h3><p>修改一下自己的需求任务，我这里是上传到云存储，同时上传原图和缩略图到云存储即可。</p>\n<p><img src=\"/images/2016-12-26_000001.png\" alt=\"Alt text\"></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><ol>\n<li>自己开发的生成缩略图的功能目前也只是支持缩略图，要达到自定义宽高，质量等多方面辅助实现，还是离不开服务器的支持。</li>\n<li>目前缩略图还可以增加根据图片大小生成SHA码，来作为标识，可以进行对比，用于文件的对比更新，做增量修改。</li>\n</ol>\n<hr>\n<p>如果能给您带去些许帮助，鄙人不甚欢心。如有错误，恳请交流指出，谢谢！<br>转载请注明出处：<a href=\"http://mcchen.club/\">http://mcchen.club/</a></p>\n<hr>\n","categories":["Nodejs"],"tags":["Nodejs","gm"]},{"title":"jm-base","url":"http://mcchen.club/2016/09/12/jm-base/","content":"<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>A universal tool in any surrounding.<br>任何环境下通用的jm工具（封装了一些常用方法）</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install jm-base</div></pre></td></tr></table></figure>\n<h2 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h2><h3 id=\"version\"><a href=\"#version\" class=\"headerlink\" title=\"version\"></a>version</h3><p>版本号</p>\n<h3 id=\"timestamp\"><a href=\"#timestamp\" class=\"headerlink\" title=\"timestamp\"></a>timestamp</h3><p>更新时间戳</p>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><h3 id=\"animate-obj-target-time-type\"><a href=\"#animate-obj-target-time-type\" class=\"headerlink\" title=\"animate(obj, target, time, type)\"></a>animate(obj, target, time, type)</h3><table>\n<thead>\n<tr>\n<th>字段</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>obj</td>\n<td>Object</td>\n<td><code>无</code></td>\n<td>jquery对象</td>\n</tr>\n<tr>\n<td>target</td>\n<td>String</td>\n<td><code>&quot;无&quot;</code></td>\n<td>transform属性值</td>\n</tr>\n<tr>\n<td>time</td>\n<td>String</td>\n<td><code>&quot;无&quot;</code></td>\n<td>动画时间，单位/s</td>\n</tr>\n<tr>\n<td>type</td>\n<td>String</td>\n<td><code>ease-out</code></td>\n<td>动画过渡方式</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"ajax-config\"><a href=\"#ajax-config\" class=\"headerlink\" title=\"ajax(config)\"></a>ajax(config)</h3><p>config为参数配置对象</p>\n<table>\n<thead>\n<tr>\n<th>属性值</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>String</td>\n<td><code>&quot;无&quot;</code></td>\n<td>request url</td>\n</tr>\n<tr>\n<td>data</td>\n<td>Object</td>\n<td><code>{}</code></td>\n<td>request params</td>\n</tr>\n<tr>\n<td>type</td>\n<td>String</td>\n<td><code>&quot;get&quot;</code></td>\n<td>请求类型，可选<code>&quot;get&quot;</code>、<code>&quot;post&quot;</code></td>\n</tr>\n<tr>\n<td>dataType</td>\n<td>String</td>\n<td><code>&quot;json&quot;</code></td>\n<td>数据类型，可选<code>&quot;json&quot;</code>、<code>&quot;jsonp&quot;</code></td>\n</tr>\n<tr>\n<td>traditional</td>\n<td>Boolean</td>\n<td><code>false</code></td>\n<td></td>\n</tr>\n<tr>\n<td>callback</td>\n<td>Function</td>\n<td><code>callback(data)</code></td>\n<td>成功回调函数</td>\n</tr>\n<tr>\n<td>failFn</td>\n<td>Function</td>\n<td><code>failFn()</code></td>\n<td>失败回调函数</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"createDiv-className，-innerHtml\"><a href=\"#createDiv-className，-innerHtml\" class=\"headerlink\" title=\"createDiv(className， innerHtml)\"></a>createDiv(className， innerHtml)</h3><table>\n<thead>\n<tr>\n<th>属性值</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>String</td>\n<td><code>&quot;无&quot;</code></td>\n<td>class名</td>\n</tr>\n<tr>\n<td>innerHtml</td>\n<td>String</td>\n<td><code>{}</code></td>\n<td>inner内容</td>\n</tr>\n</tbody>\n</table>\n<p>返回一个原生dom对象</p>\n<h3 id=\"format-str-data\"><a href=\"#format-str-data\" class=\"headerlink\" title=\"format(str, data)\"></a>format(str, data)</h3><table>\n<thead>\n<tr>\n<th>属性值</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>str</td>\n<td>String</td>\n<td><code>&quot;无&quot;</code></td>\n<td>html模板</td>\n</tr>\n<tr>\n<td>data</td>\n<td>JSON</td>\n<td><code>{}</code></td>\n<td>数据</td>\n</tr>\n</tbody>\n</table>\n<p>返回一个填充数据的html片段</p>\n<h3 id=\"formatTime-time-format\"><a href=\"#formatTime-time-format\" class=\"headerlink\" title=\"formatTime(time, format)\"></a>formatTime(time, format)</h3><table>\n<thead>\n<tr>\n<th>属性值</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>time</td>\n<td>Number</td>\n<td><code>无</code></td>\n<td>时间戳</td>\n</tr>\n<tr>\n<td>format</td>\n<td>String</td>\n<td><code>&quot;无&quot;</code></td>\n<td>输出时间格式 “yyyy-MM-dd HH:mm:ss” 年月日 时分秒 格式自定义</td>\n</tr>\n</tbody>\n</table>\n<p>返回一个自定义格式化好的时间字符串</p>\n<h3 id=\"getBrowserInfo-time-format\"><a href=\"#getBrowserInfo-time-format\" class=\"headerlink\" title=\"getBrowserInfo(time, format)\"></a>getBrowserInfo(time, format)</h3><p>返回一个结果对象，属性值有<code>systemType</code>和<code>appType</code></p>\n<table>\n<thead>\n<tr>\n<th>systemType属性值</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>iOS</td>\n<td>Boolean</td>\n<td><code>无</code></td>\n<td>是否iOS系统</td>\n</tr>\n<tr>\n<td>Android</td>\n<td>Boolean</td>\n<td><code>无</code></td>\n<td>是否Android系统</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>appType属性值</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>mqq</td>\n<td>Boolean</td>\n<td><code>无</code></td>\n<td>是否处于手机qq环境</td>\n</tr>\n<tr>\n<td>wx</td>\n<td>Boolean</td>\n<td><code>无</code></td>\n<td>是否处于微信环境</td>\n</tr>\n<tr>\n<td>jdApp</td>\n<td>Boolean</td>\n<td><code>无</code></td>\n<td>是否处于京东APP环境</td>\n</tr>\n<tr>\n<td>jrApp</td>\n<td>Boolean</td>\n<td><code>无</code></td>\n<td>是否处于金融APP环境</td>\n</tr>\n<tr>\n<td>wyApp</td>\n<td>Boolean</td>\n<td><code>无</code></td>\n<td>是否处于京东钱包APP环境</td>\n</tr>\n<tr>\n<td>jdStock</td>\n<td>Boolean</td>\n<td><code>无</code></td>\n<td>是否处于京东股票APP环境</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"getCookie-name\"><a href=\"#getCookie-name\" class=\"headerlink\" title=\"getCookie(name)\"></a>getCookie(name)</h3><table>\n<thead>\n<tr>\n<th>属性值</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>String</td>\n<td><code>无</code></td>\n<td>cookie-name</td>\n</tr>\n</tbody>\n</table>\n<p>返回cookie值</p>\n<h3 id=\"getUrlString-name\"><a href=\"#getUrlString-name\" class=\"headerlink\" title=\"getUrlString(name)\"></a>getUrlString(name)</h3><table>\n<thead>\n<tr>\n<th>属性值</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>String</td>\n<td><code>无</code></td>\n<td>url参数</td>\n</tr>\n</tbody>\n</table>\n<p>返回url参数值</p>\n<h3 id=\"lazyLoad-images\"><a href=\"#lazyLoad-images\" class=\"headerlink\" title=\"lazyLoad($images)\"></a>lazyLoad($images)</h3><table>\n<thead>\n<tr>\n<th>属性值</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>$images</td>\n<td>Object</td>\n<td><code>$(&quot;img[data-src]&quot;)</code></td>\n<td>需要懒加载的图片对象</td>\n</tr>\n</tbody>\n</table>\n<p>返回一个是否完成的标志</p>\n<h3 id=\"pageLock\"><a href=\"#pageLock\" class=\"headerlink\" title=\"pageLock()\"></a>pageLock()</h3><p>移动端页面移动锁定</p>\n<h3 id=\"pageUnlock\"><a href=\"#pageUnlock\" class=\"headerlink\" title=\"pageUnlock()\"></a>pageUnlock()</h3><p>移动端页面移动解锁</p>\n<h3 id=\"toast-obj\"><a href=\"#toast-obj\" class=\"headerlink\" title=\"toast(obj)\"></a>toast(obj)</h3><p>传入一个toast配置对象</p>\n<table>\n<thead>\n<tr>\n<th>参数值</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>text</td>\n<td>String</td>\n<td><code>&quot;无&quot;</code></td>\n<td>toast信息</td>\n</tr>\n<tr>\n<td>pos</td>\n<td>String/Object</td>\n<td><code>&quot;top&quot;</code></td>\n<td>toast位置字符串或者css配置对象</td>\n</tr>\n<tr>\n<td>autoClose</td>\n<td>Boolean</td>\n<td><code>true</code></td>\n<td>是否自动消失</td>\n</tr>\n<tr>\n<td>maxWidth</td>\n<td>String</td>\n<td><code>&quot;无&quot;</code></td>\n<td>最大宽度</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h2><p>兼容AMD/CMD;<br>支持Node.js;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// import jm from 'jm'; // ES6</span></div><div class=\"line\"><span class=\"keyword\">var</span> jm = <span class=\"built_in\">require</span>(<span class=\"string\">'jm'</span>);</div><div class=\"line\">jm.API</div></pre></td></tr></table></figure>\n<h2 id=\"License\"><a href=\"#License\" class=\"headerlink\" title=\"License\"></a>License</h2><p>MIT</p>\n<h2 id=\"Github\"><a href=\"#Github\" class=\"headerlink\" title=\"Github\"></a>Github</h2><p>Github地址及使用文档：<a href=\"https://github.com/ChenJiaH/jm-base\" target=\"_blank\" rel=\"external\">jm-base</a></p>\n<hr>\n<p>如果能给您带去些许帮助，鄙人不甚欢心。如有错误，恳请交流指出，谢谢！<br>转载请注明出处：<a href=\"http://mcchen.club/\">http://mcchen.club/</a></p>\n<hr>\n","categories":["Javascript"],"tags":["Javascript"]},{"title":"Nodejs复制粘贴文件","url":"http://mcchen.club/2016/07/13/Nodejs复制粘贴文件/","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>在服务器环境上，基本没有可视化界面，都是通过命令行操作，所以，想要自动复制文件，还需要自己编写。</p>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><h3 id=\"将文件转为Buffer\"><a href=\"#将文件转为Buffer\" class=\"headerlink\" title=\"将文件转为Buffer\"></a>将文件转为Buffer</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">encode</span> (<span class=\"params\">filePath</span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// read binary data</span></div><div class=\"line\">    <span class=\"keyword\">var</span> bitmap = fs.readFileSync(filePath);</div><div class=\"line\">    <span class=\"comment\">// convert binary data to base64 encoded string</span></div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Buffer(bitmap).toString(<span class=\"string\">'base64'</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>返回的是一个base64格式的Buffer，便于后续生成文件</p>\n</blockquote>\n<h3 id=\"Buffer解码成文件生成到指定路径\"><a href=\"#Buffer解码成文件生成到指定路径\" class=\"headerlink\" title=\"Buffer解码成文件生成到指定路径\"></a>Buffer解码成文件生成到指定路径</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">decode</span> (<span class=\"params\">filePath, saveFilePath</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> base64str = <span class=\"keyword\">this</span>.encode(filePath);</div><div class=\"line\">    <span class=\"comment\">// create buffer object from base64 encoded string, it is important to tell the constructor that the string is base64 encoded</span></div><div class=\"line\">    <span class=\"keyword\">var</span> bitmap = <span class=\"keyword\">new</span> Buffer(base64str, <span class=\"string\">'base64'</span>);</div><div class=\"line\">    <span class=\"comment\">// write buffer to file</span></div><div class=\"line\">    fs.writeFileSync(saveFilePath, bitmap);</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'******** File created from base64 encoded string ********'</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>这里的操作都是同步的，完全可以执行完后检测新文件是否存在</p>\n</blockquote>\n<h3 id=\"jm-copy-base64\"><a href=\"#jm-copy-base64\" class=\"headerlink\" title=\"jm-copy-base64\"></a>jm-copy-base64</h3><p>根据上述的原理，自己编写一个node环境的npm包，专门用于自动复制文件。</p>\n<p>Github地址及使用文档：<a href=\"https://github.com/ChenJiaH/jm-copy-base64\" target=\"_blank\" rel=\"external\">jm-copy-base64</a></p>\n<hr>\n<p>如果能给您带去些许帮助，鄙人不甚欢心。如有错误，恳请交流指出，谢谢！<br>转载请注明出处：<a href=\"http://mcchen.club/\">http://mcchen.club/</a></p>\n<hr>\n","categories":["Nodejs"],"tags":["Nodejs"]},{"title":"Nodejs创建多级目录文件夹","url":"http://mcchen.club/2016/07/12/Nodejs创建多级目录文件夹/","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>由于Nodejs的API只提供创建一级目录，所以如果需要创建多级目录的话，那需要一级一级去创建，为了代码的简便，采用递归的写法。</p>\n<h2 id=\"创建方式\"><a href=\"#创建方式\" class=\"headerlink\" title=\"创建方式\"></a>创建方式</h2><h3 id=\"异步创建\"><a href=\"#异步创建\" class=\"headerlink\" title=\"异步创建\"></a>异步创建</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">async</span> (<span class=\"params\">dirname, callback</span>)</span>&#123;</div><div class=\"line\">    fs.exists(dirname, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">exists</span>)</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(exists)&#123;</div><div class=\"line\">            callback();</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            mkdirs.async(path.dirname(dirname), <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">                fs.mkdir(dirname, callback);</div><div class=\"line\">            &#125;);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>缺点是无法保证执行回调的顺序</p>\n</blockquote>\n<h3 id=\"同步创建\"><a href=\"#同步创建\" class=\"headerlink\" title=\"同步创建\"></a>同步创建</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sync</span> (<span class=\"params\">dirname</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(fs.existsSync(dirname))&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(mkdirs.sync(path.dirname(dirname)))&#123;</div><div class=\"line\">            fs.mkdirSync(dirname);</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>可以精准的保证执行完成之后再执行后续操作</p>\n</blockquote>\n<h3 id=\"jm-mkdirs\"><a href=\"#jm-mkdirs\" class=\"headerlink\" title=\"jm-mkdirs\"></a>jm-mkdirs</h3><p>根据上述的原理，自己编写一个node环境的npm包，专门用于创建多级目录文件夹。</p>\n<p>Github地址及使用文档：<a href=\"https://github.com/ChenJiaH/jm-mkdirs\" target=\"_blank\" rel=\"external\">jm-mkdirs</a></p>\n<hr>\n<p>如果能给您带去些许帮助，鄙人不甚欢心。如有错误，恳请交流指出，谢谢！<br>转载请注明出处：<a href=\"http://mcchen.club/\">http://mcchen.club/</a></p>\n<hr>\n","categories":["Nodejs"],"tags":["Nodejs"]},{"title":"现代模块加载机制解析","url":"http://mcchen.club/2016/05/31/现代模块加载机制解析/","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>随着近几年模块化被越来越多的前端人士所念叨，我也义无反顾的涌入了这股大潮，本文将浅析个人的模块加载理解。</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>本文不对具体的库进行分析，只从宏观上介绍一些核心的概念。</p>\n<h3 id=\"模拟module函数\"><a href=\"#模拟module函数\" class=\"headerlink\" title=\"模拟module函数\"></a>模拟module函数</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> McChenModules = (<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Manager</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> modules = &#123;&#125;;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">define</span>(<span class=\"params\">name, deps, impl</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; deps.length; i++) &#123;</div><div class=\"line\">            deps[i] = modules[deps[i]];</div><div class=\"line\">        &#125;</div><div class=\"line\">        modules[name] = impl.apply(impl, deps);</div><div class=\"line\">    &#125;</div><div class=\"line\">     <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get</span>(<span class=\"params\">name</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> modules[name];</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">        <span class=\"attr\">define</span>: define,</div><div class=\"line\">        <span class=\"attr\">get</span>: get</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)();</div></pre></td></tr></table></figure>\n<p>这里核心是<code>modules[name] = impl.apply(impl, deps)</code>，为了模块的定义引入包装函数，并可传入依赖，返回值，也就是模块的API了，根据key存在modules列表中。</p>\n<h3 id=\"定义模块\"><a href=\"#定义模块\" class=\"headerlink\" title=\"定义模块\"></a>定义模块</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">McChenModules.define(<span class=\"string\">\"moduleA\"</span>, [], <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">hello</span>(<span class=\"params\">who</span>)</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"Let me introduce:\"</span> + who;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">        <span class=\"attr\">hello</span>: hello</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">McChenModules.define(<span class=\"string\">\"moduleB\"</span>, [<span class=\"string\">\"moduleA\"</span>], <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">module</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> hungry = <span class=\"string\">\"hippo\"</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">awesome</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">module</span>.hello(hungry).toUpperCase());</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">        <span class=\"attr\">awesome</span>: awesome</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> moduleA = McChenModules.get(<span class=\"string\">\"moduleA\"</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> moduleB = McChenModules.get(<span class=\"string\">\"moduleB\"</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(moduleA.hello(<span class=\"string\">\"hippo\"</span>));</div><div class=\"line\"></div><div class=\"line\">moduleB.awesome();</div></pre></td></tr></table></figure>\n<p>moduleA和moduleB都是通过一个返回公共API的函数来定义的。模块间也可以相互依赖并使用，这便是模块化加载的核心所在。</p>\n<h3 id=\"未来的模块机制-ES6\"><a href=\"#未来的模块机制-ES6\" class=\"headerlink\" title=\"未来的模块机制(ES6)\"></a>未来的模块机制(ES6)</h3><p>ES6的模块没有“行内”格式，必须被定义在独立的文件中才行，浏览器或引擎有一个默认的“模块加载器”</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// moduleA.js</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">hello</span>(<span class=\"params\">who</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"Let me introduce:\"</span> + who;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> hello;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// moduleB.js</span></div><div class=\"line\"><span class=\"keyword\">import</span> hello form <span class=\"string\">\"moduleA\"</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> hungry = <span class=\"string\">\"hippo\"</span>;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">awesome</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(hello(hungry).toUpperCase());</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">export</span> awesome;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// main.js</span></div><div class=\"line\"><span class=\"built_in\">module</span> moduleA form <span class=\"string\">\"moduleA\"</span>;</div><div class=\"line\"><span class=\"built_in\">module</span> moduleB form <span class=\"string\">\"moduleB\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(bar.hello(<span class=\"string\">\"rhino\"</span>));</div><div class=\"line\">foo.awesome();</div></pre></td></tr></table></figure>\n<p>需要把代码片段提取出来分单独的js文件。</p>\n<hr>\n<p>如果能给您带去些许帮助，鄙人不甚欢心。如有错误，恳请交流指出，谢谢！<br>转载请注明出处：<a href=\"http://mcchen.club/\">http://mcchen.club/</a></p>\n<hr>\n","categories":["Javascript"],"tags":["Javascript","模块化"]},{"title":"移动端rem布局万能适配mixin","url":"http://mcchen.club/2016/05/12/移动端rem布局万能适配mixin/","content":"<h2 id=\"基于640宽的设计稿\"><a href=\"#基于640宽的设计稿\" class=\"headerlink\" title=\"基于640宽的设计稿\"></a>基于640宽的设计稿</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">/================================================================</div><div class=\"line\">以下为基于ip5 宽度320做的适配，标准html&#123;font-size:10px&#125;,即1rem = 10px</div><div class=\"line\">=================================================================/</div><div class=\"line\">@mixin queryWidth($min, $max) &#123;</div><div class=\"line\">    @if $min == -1 &#123;</div><div class=\"line\">      @media screen and (max-width: $max+px) &#123;</div><div class=\"line\">        html &#123;</div><div class=\"line\">          font-size: ( ($max+1) / 320 ) * 10px;</div><div class=\"line\">        &#125;</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125; @else if $max == -1 &#123;</div><div class=\"line\">      @media screen and (min-width: \\$min+px) &#123;</div><div class=\"line\">        html &#123;</div><div class=\"line\">          font-size: ( $min / 320 ) * 10px;</div><div class=\"line\">        &#125;</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125; @else &#123;</div><div class=\"line\">      @media screen and (min-width: $min+px) and (max-width: $max+px) &#123;</div><div class=\"line\">        html &#123;</div><div class=\"line\">          font-size: ( $min / 320 ) * 10px;</div><div class=\"line\">        &#125;</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">@media only screen and (orientation: landscape) &#123;</div><div class=\"line\">  html &#123;</div><div class=\"line\">    font-size: 10px;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">@include queryWidth(-1, 319); // for iphone 4</div><div class=\"line\">@include queryWidth(320, 359); // for iphone 5</div><div class=\"line\">@include queryWidth(360, 374);</div><div class=\"line\">@include queryWidth(375, 383); // for iphone 6</div><div class=\"line\">@include queryWidth(384, 399);</div><div class=\"line\">@include queryWidth(400, 413);</div><div class=\"line\">@include queryWidth(414, -1); // for iphone 6 plus</div></pre></td></tr></table></figure>\n<h2 id=\"基于750宽的设计稿\"><a href=\"#基于750宽的设计稿\" class=\"headerlink\" title=\"基于750宽的设计稿\"></a>基于750宽的设计稿</h2><ul>\n<li>只需将mixin中320改为375即可。若要100px=1rem，只需将mixin中10改成100即可。</li>\n</ul>\n<blockquote>\n<p>当然，这只能实现大部分常规机型的适配，有些特殊机型还是需要自己再加上对应的适配。接下来罗列一下我用到过的适配，希望得到各位帮助逐步完善。</p>\n</blockquote>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">@<span class=\"keyword\">media</span> screen and (min-width: 320px) &#123;&#125; <span class=\"comment\">//for iphone 5</span></div><div class=\"line\">@<span class=\"keyword\">media</span> screen and (min-width: 375px) &#123;&#125; <span class=\"comment\">//for iphone 6</span></div><div class=\"line\">@<span class=\"keyword\">media</span> screen and (min-width: 414px) &#123;&#125; <span class=\"comment\">//for iphone 6 plus</span></div><div class=\"line\">@<span class=\"keyword\">media</span> screen and (min-aspect-ratio: 69/<span class=\"number\">100</span>) &#123;&#125; <span class=\"comment\">//for huawei荣耀6</span></div><div class=\"line\">@<span class=\"keyword\">media</span> screen and (min-aspect-ratio: 7/<span class=\"number\">10</span>) &#123;&#125; <span class=\"comment\">//for mx3</span></div><div class=\"line\">@<span class=\"keyword\">media</span> screen and (max-height: 480px) &#123;&#125; <span class=\"comment\">//for iphone 4</span></div><div class=\"line\">@<span class=\"keyword\">media</span> screen and (max-height: 420px) &#123;&#125; <span class=\"comment\">//for iphone 4 微信</span></div><div class=\"line\">@<span class=\"keyword\">media</span> only screen and (orientation: landscape) &#123;&#125; <span class=\"comment\">// for 横屏</span></div></pre></td></tr></table></figure>\n<hr>\n<p>如果能给您带去些许帮助，鄙人不甚欢心。如有错误，恳请交流指出，谢谢！<br>转载请注明出处：<a href=\"http://mcchen.club/\">http://mcchen.club/</a></p>\n<hr>\n","categories":["Css"],"tags":["Css","Rem"]},{"title":"桌面应用开发笔记Electron","url":"http://mcchen.club/2016/05/11/桌面应用开发笔记Electron-1/","content":"<h2 id=\"编写步骤\"><a href=\"#编写步骤\" class=\"headerlink\" title=\"编写步骤\"></a>编写步骤</h2><h3 id=\"一、安装nodejs以及npm\"><a href=\"#一、安装nodejs以及npm\" class=\"headerlink\" title=\"一、安装nodejs以及npm\"></a>一、安装nodejs以及npm</h3><ul>\n<li>注意配置环境变量path，安装时勾选上可进行自动配置</li>\n</ul>\n<h3 id=\"二、使用淘宝npm镜像\"><a href=\"#二、使用淘宝npm镜像\" class=\"headerlink\" title=\"二、使用淘宝npm镜像\"></a>二、使用淘宝npm镜像</h3><ul>\n<li>因为现在换成https，故直接用npm安装报SSL配置问题，所以采用cnpm代替npm完成electron安装</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g cnpm –registry=https://registry.npm.taobao.org</div></pre></td></tr></table></figure>\n<h3 id=\"安装electron\"><a href=\"#安装electron\" class=\"headerlink\" title=\"安装electron\"></a>安装electron</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cnpm install -g electron-prebuilt</div></pre></td></tr></table></figure>\n<h3 id=\"安装git\"><a href=\"#安装git\" class=\"headerlink\" title=\"安装git\"></a>安装git</h3><ul>\n<li>官网下载安装，主要用于拉取electron在Github源码。自行下载electron的话可不安装。</li>\n</ul>\n<h3 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/atom/electron-quick-start</div><div class=\"line\">npm install &amp;&amp; npm start</div></pre></td></tr></table></figure>\n<p>接着会出现一个helloworld的桌面应用</p>\n<h2 id=\"打包步骤\"><a href=\"#打包步骤\" class=\"headerlink\" title=\"打包步骤\"></a>打包步骤</h2><h3 id=\"下载electron框架\"><a href=\"#下载electron框架\" class=\"headerlink\" title=\"下载electron框架\"></a>下载electron框架</h3><p><a href=\"https://github.com/electron/electron/releases\" target=\"_blank\" rel=\"external\">https://github.com/electron/electron/releases</a> 选择对应系统的版本下载下来，得到一堆配置文件和locales以及resources文件夹，具体使用说明查看electron官网</p>\n<h3 id=\"安装asar，打包依赖组件\"><a href=\"#安装asar，打包依赖组件\" class=\"headerlink\" title=\"安装asar，打包依赖组件\"></a>安装asar，打包依赖组件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g asar</div></pre></td></tr></table></figure>\n<h3 id=\"打包静态资源城app-asar\"><a href=\"#打包静态资源城app-asar\" class=\"headerlink\" title=\"打包静态资源城app.asar\"></a>打包静态资源城app.asar</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">asar pack 文件夹名称 app.asar</div></pre></td></tr></table></figure>\n<blockquote>\n<p>文件夹里存放静态资源，最好不要放exe/dat等类型的文件<br>  .asar的文件名必须为app.asar，必须！</p>\n</blockquote>\n<h3 id=\"将app-asar移至框架中的resources文件夹内\"><a href=\"#将app-asar移至框架中的resources文件夹内\" class=\"headerlink\" title=\"将app.asar移至框架中的resources文件夹内\"></a>将app.asar移至框架中的resources文件夹内</h3><ul>\n<li>此时运行electron.exe，你会发现里面的内容已经换成你的资源了</li>\n</ul>\n<h3 id=\"通过winrar或者nsis等工具把刚才的资源制作成安装程序\"><a href=\"#通过winrar或者nsis等工具把刚才的资源制作成安装程序\" class=\"headerlink\" title=\"通过winrar或者nsis等工具把刚才的资源制作成安装程序\"></a>通过winrar或者nsis等工具把刚才的资源制作成安装程序</h3><ul>\n<li>至此，其他人通过下载该文件便安装你的桌面应用了。</li>\n</ul>\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>打包一个的桌面应用并发布就是这么简单，赞不赞~</p>\n<hr>\n<p>如果能给您带去些许帮助，鄙人不甚欢心。如有错误，恳请交流指出，谢谢！<br>转载请注明出处：<a href=\"http://mcchen.club/\">http://mcchen.club/</a></p>\n<hr>\n","categories":["Electron"],"tags":["Nodejs","Javascript","Electron"]},{"title":"Nodejs+Express+Mongodb搭建简单的应用(3)","url":"http://mcchen.club/2016/04/29/Nodejs-Express-Mongodb搭建简单的应用-3/","content":"<h2 id=\"最终效果\"><a href=\"#最终效果\" class=\"headerlink\" title=\"最终效果\"></a>最终效果</h2><p><img src=\"/images/2016-03-30_204400.png\" alt=\"Alt text\"></p>\n<h2 id=\"项目文件结构\"><a href=\"#项目文件结构\" class=\"headerlink\" title=\"项目文件结构\"></a>项目文件结构</h2><p>先把文件结构贴出来利于后续流程说明</p>\n<p><img src=\"/images/2016-03-30_204549.png\" alt=\"Alt text\"></p>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><h3 id=\"首先新建一个login-jade文件，代码如下（注意缩进，间隔为2字间距，md不缩进-）\"><a href=\"#首先新建一个login-jade文件，代码如下（注意缩进，间隔为2字间距，md不缩进-）\" class=\"headerlink\" title=\"首先新建一个login.jade文件，代码如下（注意缩进，间隔为2字间距，md不缩进-_-!）\"></a>首先新建一个login.jade文件，代码如下（注意缩进，间隔为2字间距，md不缩进-_-!）</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">extends layout</div><div class=\"line\">block link</div><div class=\"line\">    link(rel='stylesheet', href='/stylesheets/1.0.0/login.css')</div><div class=\"line\">block content</div><div class=\"line\">    canvas#jm-funnyBackground</div><div class=\"line\">    div.loginBox.abs-mt</div><div class=\"line\">        div.title</div><div class=\"line\">           h3</div><div class=\"line\">        div.u-name</div><div class=\"line\">            h4 用户名：</div><div class=\"line\">            input.username#Name(tabindex='1', placeholder='请输入用户名',name='Name', type='text')</div><div class=\"line\">        div.u-pwd</div><div class=\"line\">            h4 密码：</div><div class=\"line\">            input.password#Password(tabindex='2', placeholder='请输入密码',name='Password', type='password')</div><div class=\"line\">            a.logon#Logon(href='javascript:;') 登录</div><div class=\"line\">block script</div><div class=\"line\">    script(src='/javascripts/modules/funnyBackground/funnyBackground.js')</div><div class=\"line\">    script(src='/javascripts/modules/login/login.js')</div></pre></td></tr></table></figure>\n<blockquote>\n<p> extend是jade模板的一大特色，继承，另外一大特色是mixin，以后再叙(实际项目我已经更换为artTemplate了)。</p>\n</blockquote>\n<h3 id=\"编写对应scss和js并引入\"><a href=\"#编写对应scss和js并引入\" class=\"headerlink\" title=\"编写对应scss和js并引入\"></a>编写对应scss和js并引入</h3><h3 id=\"根据上一篇文章，开两个cmd，一个mongod-–dbpath-D-database，另外一个mongo。\"><a href=\"#根据上一篇文章，开两个cmd，一个mongod-–dbpath-D-database，另外一个mongo。\" class=\"headerlink\" title=\"根据上一篇文章，开两个cmd，一个mongod –dbpath D:\\database，另外一个mongo。\"></a>根据上一篇文章，开两个cmd，一个mongod –dbpath D:\\database，另外一个mongo。</h3><ul>\n<li><p>use database，建立database数据库</p>\n</li>\n<li><p>接下来为数据库里添加用户表，存放登录用户名和密码，db.usercollection.insert({“username”:”admin”, “password”:”123456”})</p>\n</li>\n<li><p>这时候可以通过mongoVUE或者cmd find 可以看到在database这数据库中已经增加了一张usercollection的表，里面有三个字段，_id，username, password，如下图：</p>\n</li>\n</ul>\n<p><img src=\"/images/2016-03-30_210056.png\" alt=\"Alt text\"></p>\n<h3 id=\"交互部分\"><a href=\"#交互部分\" class=\"headerlink\" title=\"交互部分\"></a>交互部分</h3><p>login.js 截取部分交互代码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">self.getAjaxData(<span class=\"string\">\"/login\"</span>,&#123;<span class=\"attr\">username</span>: username,<span class=\"attr\">password</span>:password&#125;,<span class=\"string\">\"post\"</span>,<span class=\"string\">\"json\"</span>,self.loginCallback)  <span class=\"comment\">// 发ajax请求到localhost:3000/login</span></div><div class=\"line\">   loginCallback: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;  <span class=\"comment\">// ajax成功回调</span></div><div class=\"line\">       <span class=\"keyword\">if</span>(data.code == <span class=\"number\">200</span>)&#123;</div><div class=\"line\">           <span class=\"built_in\">window</span>.location = <span class=\"string\">'/index'</span>;</div><div class=\"line\">       &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(data.code == <span class=\"number\">201</span>) &#123;</div><div class=\"line\">           alert(<span class=\"string\">\"您输入的用户名或密码不正确\"</span>);</div><div class=\"line\">       &#125;</div><div class=\"line\">   &#125;,</div><div class=\"line\">   <span class=\"attr\">getAjaxData</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">url, data, type, dataType, callback, failFn</span>) </span>&#123;</div><div class=\"line\">       $.ajax(&#123;</div><div class=\"line\">           <span class=\"attr\">url</span>: url,</div><div class=\"line\">           <span class=\"attr\">data</span>: data,</div><div class=\"line\">           <span class=\"attr\">type</span>: type,</div><div class=\"line\">           <span class=\"attr\">dataType</span>: dataType,</div><div class=\"line\">           <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">               callback &amp;&amp; callback(data);</div><div class=\"line\">           &#125;,</div><div class=\"line\">           <span class=\"attr\">error</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">               failFn &amp;&amp; failFn();</div><div class=\"line\">           &#125;</div><div class=\"line\">       &#125;);</div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure>\n<ul>\n<li><p>首先通过ajax给localhost:3000/login发出请求</p>\n</li>\n<li><p>然后在node中处理请求，req.body.*就是ajax传入的data</p>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">router.post(<span class=\"string\">'/login'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 请求带过来的data在req.body里</span></div><div class=\"line\">    <span class=\"keyword\">var</span> username = req.body.username;</div><div class=\"line\">    <span class=\"keyword\">var</span> password = req.body.password;</div><div class=\"line\">    <span class=\"keyword\">var</span> collection = db.get(<span class=\"string\">'usercollection'</span>); <span class=\"comment\">//获得数据库中的集合(类似关系数据库中的表)</span></div><div class=\"line\">    collection.find(&#123;<span class=\"string\">\"username\"</span>: username, <span class=\"string\">\"password\"</span>: password&#125;, &#123;&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e, docs</span>) </span>&#123; <span class=\"comment\">//取得所有的集合数据, 渲染到页面上,关键字是data，第一个&#123;&#125;表示where，第二个&#123;&#125;表示显示隐藏，第三个为回调函数</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (docs != <span class=\"string\">\"\"</span>) &#123;</div><div class=\"line\">            req.session.username = docs[<span class=\"number\">0</span>].username;</div><div class=\"line\">            req.session.password = docs[<span class=\"number\">0</span>].password;</div><div class=\"line\">            res.send(&#123;<span class=\"string\">\"code\"</span>: <span class=\"number\">200</span>&#125;);    <span class=\"comment\">// 200 表示登录成功</span></div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            res.send(&#123;<span class=\"string\">\"code\"</span>: <span class=\"number\">201</span>&#125;);    <span class=\"comment\">// 201 表示登录失败</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<ul>\n<li><p>node通过res.send给ajax返回了一个json，里面只有一个状态参数code</p>\n</li>\n<li><p>login.js去判断，如果登录成功，则进行页面跳转，window.location = “/index”</p>\n</li>\n<li><p>node拦截localhost:3000/index，并进行数据渲染，这里利用了session进行参数存储，判断登录状态亦可使用</p>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*GET index page */</span></div><div class=\"line\">router.get(<span class=\"string\">'/index'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> docs = res.session;</div><div class=\"line\">    res.render(<span class=\"string\">'index'</span>, &#123;</div><div class=\"line\">        <span class=\"string\">\"data\"</span>: docs</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"因为express4-X以上已经把session模块分离出来了，所以必须要多引入依赖模块express-session\"><a href=\"#因为express4-X以上已经把session模块分离出来了，所以必须要多引入依赖模块express-session\" class=\"headerlink\" title=\"因为express4.X以上已经把session模块分离出来了，所以必须要多引入依赖模块express-session\"></a>因为express4.X以上已经把session模块分离出来了，所以必须要多引入依赖模块express-session</h3><ul>\n<li>在app.js中增加</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> session = <span class=\"built_in\">require</span>(<span class=\"string\">'express-session'</span>);</div><div class=\"line\">app.use(session(&#123;</div><div class=\"line\">    <span class=\"attr\">secret</span>: <span class=\"string\">\"McChen\"</span>,  <span class=\"comment\">// 必填参数，可随意取名</span></div><div class=\"line\">    name: <span class=\"string\">\"loginMes\"</span>, <span class=\"comment\">// 存入cookies的参数名</span></div><div class=\"line\">    cookie: &#123;<span class=\"attr\">maxAge</span>: <span class=\"number\">60000</span> * <span class=\"number\">60</span> * <span class=\"number\">24</span> * <span class=\"number\">15</span>&#125;,  <span class=\"comment\">// cookie的生命周期</span></div><div class=\"line\">    resave: <span class=\"literal\">false</span>,  <span class=\"comment\">// 必须，否则session会报错</span></div><div class=\"line\">    saveUninitialized: <span class=\"literal\">true</span>  必须，否则session会报错</div><div class=\"line\">&#125;));</div></pre></td></tr></table></figure>\n<ul>\n<li>之后便可以愉快的利用res.session进行存储了</li>\n</ul>\n<h2 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h2><p>至此，一个与数据库交互的登录页面已经基本完成</p>\n<hr>\n<p>如果能给您带去些许帮助，鄙人不甚欢心。如有错误，恳请交流指出，谢谢！<br>转载请注明出处：<a href=\"http://mcchen.club/\">http://mcchen.club/</a></p>\n<hr>\n","categories":["Nodejs"],"tags":["Nodejs","Express","Javascript"]},{"title":"Nodejs+Express+Mongodb搭建简单的应用(2)","url":"http://mcchen.club/2016/04/28/Nodejs-Express-Mongodb搭建简单的应用-2/","content":"<h2 id=\"开发前准备\"><a href=\"#开发前准备\" class=\"headerlink\" title=\"开发前准备\"></a>开发前准备</h2><ul>\n<li>安装node.js</li>\n<li>安装Express（用webstorm的小伙伴们可省略此步，直接创建nodejs项目即可）</li>\n<li>安装Mongodb</li>\n<li>安装Mongovue（数据库可视化工具，中文，习惯用命令行的可不用）</li>\n</ul>\n<h2 id=\"非webstorm开发\"><a href=\"#非webstorm开发\" class=\"headerlink\" title=\"非webstorm开发\"></a>非webstorm开发</h2><h3 id=\"创建一个express项目\"><a href=\"#创建一个express项目\" class=\"headerlink\" title=\"创建一个express项目\"></a>创建一个express项目</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">express --sessions newProject</div></pre></td></tr></table></figure>\n<h3 id=\"对package-json进行编辑，主要是依赖dependencies\"><a href=\"#对package-json进行编辑，主要是依赖dependencies\" class=\"headerlink\" title=\"对package.json进行编辑，主要是依赖dependencies\"></a>对package.json进行编辑，主要是依赖dependencies</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"string\">\"name\"</span>: <span class=\"string\">\"newProject\"</span>,</div><div class=\"line\">    <span class=\"string\">\"version\"</span>: <span class=\"string\">\"0.0.1\"</span>,</div><div class=\"line\">    <span class=\"string\">\"private\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">    <span class=\"string\">\"scripts\"</span>: &#123;</div><div class=\"line\">        <span class=\"string\">\"start\"</span>: <span class=\"string\">\"node app.js\"</span></div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"string\">`\"dependencies\": &#123;</span></div><div class=\"line\">        \"express\": \"3.4.8\",</div><div class=\"line\">        \"jade\": \"*\"</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"安装依赖，完成之后执行node-app-js\"><a href=\"#安装依赖，完成之后执行node-app-js\" class=\"headerlink\" title=\"安装依赖，完成之后执行node app.js\"></a>安装依赖，完成之后执行node app.js</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install</div></pre></td></tr></table></figure>\n<h3 id=\"浏览器打开localhost-3000即可发现一个简单express页面建立完成了\"><a href=\"#浏览器打开localhost-3000即可发现一个简单express页面建立完成了\" class=\"headerlink\" title=\"浏览器打开localhost:3000即可发现一个简单express页面建立完成了\"></a>浏览器打开localhost:3000即可发现一个简单express页面建立完成了</h3><h3 id=\"配置入口文件及express参数\"><a href=\"#配置入口文件及express参数\" class=\"headerlink\" title=\"配置入口文件及express参数\"></a>配置入口文件及express参数</h3><p>在app.js最后面加上下面代码，实例化Express并赋值给app变量</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> app = express();</div></pre></td></tr></table></figure>\n<p>接着对express的参数进行配置，这里设置了端口，寻找views的目录，用什么模板引擎来处理这些views，和一些其它的东西。还要注意最后一行，它告诉Express把public/目录下的静态文件作为顶层目录的文件来托管。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// all environments</span></div><div class=\"line\">app.set(<span class=\"string\">'port'</span>, process.env.PORT || <span class=\"number\">3000</span>);</div><div class=\"line\">app.set(<span class=\"string\">'views'</span>, path.join(__dirname, <span class=\"string\">'views'</span>));</div><div class=\"line\">app.set(<span class=\"string\">'view engine'</span>, <span class=\"string\">'ejs'</span>);</div><div class=\"line\">app.use(express.favicon());</div><div class=\"line\">app.use(express.logger(<span class=\"string\">'dev'</span>));</div><div class=\"line\">app.use(express.bodyParser());</div><div class=\"line\">app.use(express.methodOverride());</div><div class=\"line\">app.use(app.router);</div><div class=\"line\">app.use(express.static(path.join(__dirname, <span class=\"string\">'public'</span>)));</div></pre></td></tr></table></figure>\n<p>接下来把最后一行替换，保证引的路径为pubilc</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">   <span class=\"comment\">// 替换前</span></div><div class=\"line\">app.use(express.bodyParser());</div><div class=\"line\"><span class=\"comment\">// 替换后</span></div><div class=\"line\">app.use(express.urlencoded());</div></pre></td></tr></table></figure>\n<p>继续增加插件检查和过期提醒</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.get(<span class=\"string\">'/'</span>, routes.index);</div><div class=\"line\">app.get(<span class=\"string\">'/users'</span>, user.list);</div><div class=\"line\">http.createServer(app).listen(app.get(<span class=\"string\">'port'</span>), <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Express server listening on port '</span> + app.get(<span class=\"string\">'port'</span>));</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>创建一个http server并且启动它</p>\n<h2 id=\"webstorm开发\"><a href=\"#webstorm开发\" class=\"headerlink\" title=\"webstorm开发\"></a>webstorm开发</h2><h3 id=\"直接new一个新Node-js-Express-App-项目，直接搞定上面全部流程\"><a href=\"#直接new一个新Node-js-Express-App-项目，直接搞定上面全部流程\" class=\"headerlink\" title=\"直接new一个新Node.js Express App 项目，直接搞定上面全部流程\"></a>直接new一个新Node.js Express App 项目，直接搞定上面全部流程</h3><h3 id=\"安装mongodb，安装完成后在bin文件夹路径下执行：\"><a href=\"#安装mongodb，安装完成后在bin文件夹路径下执行：\" class=\"headerlink\" title=\"安装mongodb，安装完成后在bin文件夹路径下执行：\"></a>安装mongodb，安装完成后在bin文件夹路径下执行：</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mongod --dbpath D:\\database</div></pre></td></tr></table></figure>\n<p>表示把数据保存在D盘database文件夹下</p>\n<h3 id=\"新开一个cmd进入bin文件夹后，执行：\"><a href=\"#新开一个cmd进入bin文件夹后，执行：\" class=\"headerlink\" title=\"新开一个cmd进入bin文件夹后，执行：\"></a>新开一个cmd进入bin文件夹后，执行：</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mongo</div></pre></td></tr></table></figure>\n<p>这时候表示已经连接上了数据库，接下来就可以进行操作了。</p>\n<h3 id=\"新建一个属于自己的数据库，并写入数据\"><a href=\"#新建一个属于自己的数据库，并写入数据\" class=\"headerlink\" title=\"新建一个属于自己的数据库，并写入数据\"></a>新建一个属于自己的数据库，并写入数据</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">use myDataBase</div><div class=\"line\">db.myCollection.insert(&#123; “username” : “XXX″, “email” : “XXX” &#125;)</div></pre></td></tr></table></figure>\n<p>db表示刚才创建的myDataBase的数据库，myCollection表示在里面创建了一张表，后面是插入的字段</p>\n<h3 id=\"把mongo连接到node\"><a href=\"#把mongo连接到node\" class=\"headerlink\" title=\"把mongo连接到node\"></a>把mongo连接到node</h3><p>在app.js中插入以下代码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.get(<span class=\"string\">'/myDataBase'</span>, routes.myDataBase(db));  <span class=\"comment\">// 当用户访问myDataBase时，把db传递到路由</span></div><div class=\"line\">router.myDataBase= <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">db</span>) </span>&#123;   <span class=\"comment\">// 创建对应的myDataBase路由</span></div><div class=\"line\">   <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">var</span> collection = db.get(<span class=\"string\">'myCollection'</span>);</div><div class=\"line\">       collection.find(&#123;&#125;,&#123;&#125;,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e,docs</span>)</span>&#123;</div><div class=\"line\">           res.render(<span class=\"string\">'myPage'</span>, &#123;</div><div class=\"line\">                <span class=\"string\">\"data\"</span> : docs</div><div class=\"line\">           &#125;);</div><div class=\"line\">       &#125;);</div><div class=\"line\">   &#125;;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<p>创建对应的模板，我这里采用的是jade，即myPage.jade(由于不习惯，后期我切换为artTemplate了)</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">doctype html</div><div class=\"line\">html</div><div class=\"line\">  head</div><div class=\"line\">    title= \"McChen\"</div><div class=\"line\">    link(rel='icon', href='http://www.jd.com/favicon.ico')</div><div class=\"line\">    link(rel='stylesheet', href='http://static.360buyimg.com/finance/mobile/base/cm/1.0.0/reset.css')</div><div class=\"line\">    link(rel='stylesheet', href='/stylesheets/style.css')</div><div class=\"line\">    script(src=\"/javascripts/test.js\")</div><div class=\"line\">  body</div><div class=\"line\">\th1 McChen</div><div class=\"line\">\tp.name.title Learning Node</div><div class=\"line\">    p.name: #&#123;data[0].username&#125;</div></pre></td></tr></table></figure>\n<p>保存文件，重启node服务器，你会发现data[0]=XXX，已经从数据库中成功取出来了</p>\n<h3 id=\"往数据库中写入数据，可以通过ajax，然后render数据库的数据。\"><a href=\"#往数据库中写入数据，可以通过ajax，然后render数据库的数据。\" class=\"headerlink\" title=\"往数据库中写入数据，可以通过ajax，然后render数据库的数据。\"></a>往数据库中写入数据，可以通过ajax，然后render数据库的数据。</h3><h2 id=\"Do-It\"><a href=\"#Do-It\" class=\"headerlink\" title=\"Do It!\"></a>Do It!</h2><p>OK，Do it now~ 让我们做一个简单的登录页面吧</p>\n<hr>\n<p>如果能给您带去些许帮助，鄙人不甚欢心。如有错误，恳请交流指出，谢谢！<br>转载请注明出处：<a href=\"http://mcchen.club/\">http://mcchen.club/</a></p>\n<hr>\n","categories":["Nodejs"],"tags":["Nodejs","Express","Javascript"]},{"title":"Nodejs+Express+Mongodb搭建简单的应用(1)","url":"http://mcchen.club/2016/04/27/Nodejs-Express-Mongodb搭建简单的应用-1/","content":"<h2 id=\"Node-js应用场景\"><a href=\"#Node-js应用场景\" class=\"headerlink\" title=\"Node.js应用场景\"></a>Node.js应用场景</h2><ul>\n<li>高并发、高性能服务器</li>\n</ul>\n<h2 id=\"Node-js最重要特性\"><a href=\"#Node-js最重要特性\" class=\"headerlink\" title=\"Node.js最重要特性\"></a>Node.js最重要特性</h2><ul>\n<li>通过单线程实现异步处理环境</li>\n</ul>\n<h2 id=\"实现高性能的两种机制\"><a href=\"#实现高性能的两种机制\" class=\"headerlink\" title=\"实现高性能的两种机制\"></a>实现高性能的两种机制</h2><h3 id=\"一-非阻塞型I-O\"><a href=\"#一-非阻塞型I-O\" class=\"headerlink\" title=\"一. 非阻塞型I/O\"></a>一. 非阻塞型I/O</h3><ul>\n<li>在执行访问数据库的代码之后可以立即转而执行后面的代码，把数据库返回结果的处理代码放在回调函数中执行。（传统阻塞型I/O表现为在执行访问数据库的代码后，线程将暂停下来，等待数据库返回结果再继续执行）</li>\n</ul>\n<h3 id=\"二-事件环\"><a href=\"#二-事件环\" class=\"headerlink\" title=\"二. 事件环\"></a>二. 事件环</h3><ul>\n<li>在一个时刻只能执行一个事件回调函数，但是在执行一个事件回调的中途可以转而处理其他事件（包括触发新的事件、声明该事件的回调函数等），然后返回继续执行原事件回调函数</li>\n</ul>\n<h2 id=\"Node-js-v0-10中的核心模块\"><a href=\"#Node-js-v0-10中的核心模块\" class=\"headerlink\" title=\"Node.js v0.10中的核心模块\"></a>Node.js v0.10中的核心模块</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">模块名</th>\n<th style=\"text-align:left\">模块功能</th>\n<th style=\"text-align:left\">stability(稳定度)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">assert</td>\n<td style=\"text-align:left\">为应用程序的单元测试添加断言处理</td>\n<td style=\"text-align:left\">5-Locked(今后不会被修改)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">buffer</td>\n<td style=\"text-align:left\">用于实现二进制数据的存储与转换</td>\n<td style=\"text-align:left\">3-stable(稳定)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">child_process</td>\n<td style=\"text-align:left\">用于实现子进程的创建与管理</td>\n<td style=\"text-align:left\">3-stable(稳定)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">cluster</td>\n<td style=\"text-align:left\">用于实现多进程</td>\n<td style=\"text-align:left\">1-Experimental(实验性阶段)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">console</td>\n<td style=\"text-align:left\">用于为控制台输出信息</td>\n<td style=\"text-align:left\">4-API Frozen(今后API部分不会被修改)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">crypto</td>\n<td style=\"text-align:left\">用于实现数据的加密解密处理</td>\n<td style=\"text-align:left\">2-Unstable(不稳定)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">debugger</td>\n<td style=\"text-align:left\">用于实现一个内置调试器来帮助开发者调试应用程序</td>\n<td style=\"text-align:left\">3-stable(稳定)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">dns</td>\n<td style=\"text-align:left\">用于实现与DNS相关的处理</td>\n<td style=\"text-align:left\">3-stable(稳定)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">domain</td>\n<td style=\"text-align:left\">用于实现多个I/O之间的协作处理</td>\n<td style=\"text-align:left\">2-Unstable(不稳定)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">events</td>\n<td style=\"text-align:left\">用于为事件处理提供一个基础类</td>\n<td style=\"text-align:left\">4-API Frozen(今后API部分不会被修改)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">fs</td>\n<td style=\"text-align:left\">用于操作文件及文件系统</td>\n<td style=\"text-align:left\">3-stable(稳定)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">http</td>\n<td style=\"text-align:left\">用于实现HTTP服务器端及客户端</td>\n<td style=\"text-align:left\">3-stable(稳定)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">https</td>\n<td style=\"text-align:left\">用于实现HTTPS服务器端及客户端</td>\n<td style=\"text-align:left\">3-stable(稳定)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">net</td>\n<td style=\"text-align:left\">用于创建TCP服务器与客户端</td>\n<td style=\"text-align:left\">3-stable(稳定)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">os</td>\n<td style=\"text-align:left\">用于获取操作系统信息</td>\n<td style=\"text-align:left\">4-API Frozen(今后API部分不会被修改)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">path</td>\n<td style=\"text-align:left\">用于处理文件路径</td>\n<td style=\"text-align:left\">3-stable(稳定)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">punycode</td>\n<td style=\"text-align:left\">用于实现Punycode字符串的编码及解码</td>\n<td style=\"text-align:left\">2-Unstable(不稳定)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">querystring</td>\n<td style=\"text-align:left\">用于处理HTTP请求中使用的查询字符串</td>\n<td style=\"text-align:left\">3-stable(稳定)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">readline</td>\n<td style=\"text-align:left\">用于读取一行标准输入流</td>\n<td style=\"text-align:left\">2-Unstable(不稳定)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">repl</td>\n<td style=\"text-align:left\">用于实现REPL(Read-Eval-Print-Loop)交互式运行环境</td>\n<td style=\"text-align:left\">(无)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">stream</td>\n<td style=\"text-align:left\">用于为流的输入/输出处理提供一个基础类</td>\n<td style=\"text-align:left\">2-Unstable(不稳定)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string_decoder</td>\n<td style=\"text-align:left\">用于实现从二进制数据到字符串数据之间的转换</td>\n<td style=\"text-align:left\">3-stable(稳定)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">tls</td>\n<td style=\"text-align:left\">用于使用OpenSSL来实现TLS/SSL通信处理</td>\n<td style=\"text-align:left\">3-stable(稳定)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">tty</td>\n<td style=\"text-align:left\">用于获取来自于TTY终端的信息</td>\n<td style=\"text-align:left\">2-Unstable(不稳定)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">url</td>\n<td style=\"text-align:left\">用于实现URL字符串的解析与格式化</td>\n<td style=\"text-align:left\">3-stable(稳定)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">util</td>\n<td style=\"text-align:left\">用于实现各种实用函数</td>\n<td style=\"text-align:left\">5-Locked(今后不会被修改)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">vm</td>\n<td style=\"text-align:left\">用于为Javascript脚本代码提供一个独立的运行环境</td>\n<td style=\"text-align:left\">2-Unstable(不稳定)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">zlib</td>\n<td style=\"text-align:left\">内部使用zlib类库来实现数据的压缩及解压处理</td>\n<td style=\"text-align:left\">3-stable(稳定)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Node-js-v0-10中追加的类、函数与对象\"><a href=\"#Node-js-v0-10中追加的类、函数与对象\" class=\"headerlink\" title=\"Node.js v0.10中追加的类、函数与对象\"></a>Node.js v0.10中追加的类、函数与对象</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">类、函数及对象名</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Buffer类</td>\n<td style=\"text-align:left\">用于为二进制数据的存储提供一个缓存区</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">setTimeout函数</td>\n<td style=\"text-align:left\">用于在制定时间到达时执行一个指定函数，指定方法为从当前时刻之后多少毫秒</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">clearTimeout函数</td>\n<td style=\"text-align:left\">用于取消在setTimeout函数内指定的函数的执行</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">setInterval函数</td>\n<td style=\"text-align:left\">用于指定每隔多少时间执行一个指定函数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">clearInterval函数</td>\n<td style=\"text-align:left\">用于取消在setInterval函数内指定的函数的执行</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">require函数</td>\n<td style=\"text-align:left\">用于加载模块</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">module对象</td>\n<td style=\"text-align:left\">用于访问信息模块</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">process对象</td>\n<td style=\"text-align:left\">用于访问进程信息</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"栗子-Demo\"><a href=\"#栗子-Demo\" class=\"headerlink\" title=\"栗子(Demo)\"></a>栗子(Demo)</h3><p>先在node项目中建立一个demo.js，代码如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">'http'</span>);</div><div class=\"line\">    http.createServer(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">    res.writeHead(<span class=\"number\">200</span>, &#123;<span class=\"string\">'Content-Type'</span>: <span class=\"string\">'text/html'</span>&#125;);</div><div class=\"line\">    res.write(<span class=\"string\">'&lt;head&gt;&lt;meta charset=\"utf-8\" /&gt;&lt;/head&gt;'</span>);</div><div class=\"line\">    res.end(<span class=\"string\">\"&lt;div style='font-size: 50px;'&gt;I'm McChen&lt;/div&gt;\"</span>);</div><div class=\"line\">&#125;).listen(<span class=\"number\">1337</span>, <span class=\"string\">'127.0.0.1'</span>);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'Server running at http://127.0.0.1:1337/'</span>);</div></pre></td></tr></table></figure></p>\n<p>然后在命令行中执行node demo.js<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">node .\\demo.js</div><div class=\"line\">//Tips: 命令行中将显示 Server running at http://127.0.0.1:1337/</div></pre></td></tr></table></figure></p>\n<p>在任意浏览器打开 <a href=\"http://127.0.0.1:1337/\" target=\"_blank\" rel=\"external\">http://127.0.0.1:1337/</a> ，将发现页面中会显示 <code>I&#39;m McChen</code></p>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>本节主要介绍了Node.js的概况，以及一个简单的小栗子。（至于怎么安装Node，这个就不要问了吧-_-!）</p>\n<hr>\n<p>如果能给您带去些许帮助，鄙人不甚欢心。如有错误，恳请交流指出，谢谢！<br>转载请注明出处：<a href=\"http://mcchen.club/\">http://mcchen.club/</a></p>\n<hr>\n","categories":["Nodejs"],"tags":["Nodejs","Express","Javascript"]},{"title":"修复IScroll点击无效问题，增加scrollTo数值容错处理","url":"http://mcchen.club/2016/03/04/修复IScroll点击无效问题，增加scrollTo数值容错处理/","content":"<h2 id=\"修复IScroll点击BUG\"><a href=\"#修复IScroll点击BUG\" class=\"headerlink\" title=\"修复IScroll点击BUG\"></a>修复IScroll点击BUG</h2><p>由于做移动端开发，使用IScroll的的时候，在IScroll区域有需要点击时部分安卓机点击无效。若是设置click为true，则iOS需双击才能触发点击事件。</p>\n<h3 id=\"版本号\"><a href=\"#版本号\" class=\"headerlink\" title=\"版本号\"></a>版本号</h3><p>IScroll: v5.1.3</p>\n<h3 id=\"针对不同机型进行IScroll配置参数click的修改\"><a href=\"#针对不同机型进行IScroll配置参数click的修改\" class=\"headerlink\" title=\"针对不同机型进行IScroll配置参数click的修改\"></a>针对不同机型进行IScroll配置参数click的修改</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">IScroll</span> (<span class=\"params\">el, options</span>) </span>&#123;</div><div class=\"line\"><span class=\"comment\">// INSERT POINT: DEFAULTS</span></div><div class=\"line\">    <span class=\"comment\">// fix click in bad Android</span></div><div class=\"line\">    <span class=\"keyword\">this</span>.options.click = <span class=\"keyword\">this</span>.fixIScrollClickInAndroid();</div><div class=\"line\">&#125;</div><div class=\"line\">IScroll.prototype = &#123;</div><div class=\"line\">    <span class=\"attr\">version</span>: <span class=\"string\">'5.1.3'</span>,</div><div class=\"line\">    <span class=\"attr\">fixIScrollClickInAndriod</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"regexp\">/iPhone|iPad|iPod|Macintosh/i</span>.test(navigator.userAgent)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"regexp\">/Chrome/i</span>.test(navigator.userAgent)) <span class=\"keyword\">return</span> (<span class=\"regexp\">/Android/i</span>.test(navigator.userAgent));</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"regexp\">/Silk/i</span>.test(navigator.userAgent)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"regexp\">/Android/i</span>.test(navigator.userAgent)) &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> s = navigator.userAgent.substr(navigator.userAgent.indexOf(<span class=\"string\">'Android'</span>)+<span class=\"number\">8</span>,<span class=\"number\">5</span>);</div><div class=\"line\">        <span class=\"comment\">//return parseFloat(s[0]+s[3]) &lt; 44 ? false : true&#125;</span></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">parseFloat</span>(s[<span class=\"number\">0</span>]+s[<span class=\"number\">2</span>]+s[<span class=\"number\">4</span>]) &lt;= <span class=\"number\">442</span> &amp;&amp; <span class=\"built_in\">parseFloat</span>(s[<span class=\"number\">0</span>]+s[<span class=\"number\">2</span>]+s[<span class=\"number\">4</span>]) &gt; <span class=\"number\">430</span> ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>&#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"增加scrollTo数值容错处理\"><a href=\"#增加scrollTo数值容错处理\" class=\"headerlink\" title=\"增加scrollTo数值容错处理\"></a>增加scrollTo数值容错处理</h2><p>在返回页面的时候需要定位，所以把第一次进入的位置存入sessionStorage了，取出来时调用scrollTo(0,pos)无效。</p>\n<h3 id=\"出现原因\"><a href=\"#出现原因\" class=\"headerlink\" title=\"出现原因\"></a>出现原因</h3><p>IScroll对于数值设置为Number，当存入sessionStorage会转为字符串，若取出来不进行parseFloat处理，将返NaN导致无法定位</p>\n<h3 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><ul>\n<li>对从sessionStorage中取出来的数值，进行parseFloat处理</li>\n<li>修改IScroll关于scrollTo位置的源码，增加 || 0 操作</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> myScroll = <span class=\"keyword\">new</span> Scroll(<span class=\"string\">\"#wrapper\"</span>);</div><div class=\"line\"><span class=\"built_in\">window</span>.sessionStorage.setItem(<span class=\"string\">\"pos\"</span>,myScroll.y);</div><div class=\"line\">myScroll.scrollTo(<span class=\"built_in\">parseFloat</span>(<span class=\"built_in\">window</span>.sessionStorage.getItem(<span class=\"string\">\"pos\"</span>)))； <span class=\"comment\">// 也可修改scrollTo方法做 || 0 转换为数值处理</span></div></pre></td></tr></table></figure>\n<hr>\n<p>如果能给您带去些许帮助，鄙人不甚欢心。如有错误，恳请交流指出，谢谢！<br>转载请注明出处：<a href=\"http://mcchen.club/\">http://mcchen.club/</a></p>\n<hr>\n","categories":["Javascript"],"tags":["Javascript","IScroll"]},{"title":"jmui","url":"http://mcchen.club/2015/12/07/jmui/","content":"<h2 id=\"介绍-已停止维护，不建议使用，仅供参考\"><a href=\"#介绍-已停止维护，不建议使用，仅供参考\" class=\"headerlink\" title=\"介绍(已停止维护，不建议使用，仅供参考)\"></a>介绍<code>(已停止维护，不建议使用，仅供参考)</code></h2><p>一款目标为代码简单、易用、齐全，处理部分移动端bug，涵盖机型广，大大减少开发交互型组件的工作量的移动端框架。</p>\n<h2 id=\"CORE-amp-API\"><a href=\"#CORE-amp-API\" class=\"headerlink\" title=\"CORE&amp;API\"></a>CORE&amp;API</h2><h3 id=\"jmui\"><a href=\"#jmui\" class=\"headerlink\" title=\"jmui\"></a>jmui</h3><p>js模块，jmui基础工具函数集合</p>\n<blockquote>\n<p>语法：<code>jmui.方法名</code></p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数名称</th>\n<th style=\"text-align:center\">参数类型</th>\n<th style=\"text-align:left\">参数说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">vision</td>\n<td style=\"text-align:center\">String</td>\n<td style=\"text-align:left\">版本号</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">timestamp</td>\n<td style=\"text-align:center\">Long</td>\n<td style=\"text-align:left\">时间戳</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法名</th>\n<th style=\"text-align:left\">使用说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">lazyLoad</td>\n<td style=\"text-align:left\">图片懒加载，返回<code>Boolean</code>。<code>true</code>表示全部加载完成,<code>false</code>表示没有全部加载完成<br>Demo实例：<a href=\"http://mcchen.club/project/jmui/demo/lazyLoad.html\">请狠狠戳我</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">requestAnimationFrame</td>\n<td style=\"text-align:left\">对于现代浏览器使用<code>requestAnimationFrame</code>代替<code>setTimeOut</code><br>Demo实例：<a href=\"http://mcchen.club/project/jmui/demo/requestAnimationFrameAndTween.html\">请狠狠戳我</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">tween</td>\n<td style=\"text-align:left\">将缓动曲线集合添加至<code>Math.Tween</code>类<br>Demo实例：<a href=\"http://mcchen.club/project/jmui/demo/requestAnimationFrameAndTween.html\">请狠狠戳我</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">pageLock</td>\n<td style=\"text-align:left\">锁定页面</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">pageUnlock</td>\n<td style=\"text-align:left\">解锁页面</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getUrlString</td>\n<td style=\"text-align:left\">获取Url参数值<br>语法：<code>jmui.getUrlString(name)</code><br>参数类型：<code>{String}</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">setCookie</td>\n<td style=\"text-align:left\">将值存入cookie<br>语法：<code>jmui.setCookie(c_name,value,expiredays)</code><br>参数说明：<code>名称，键值，存在周期（可选）</code><br>参数类型：<code>{String}</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getCookie</td>\n<td style=\"text-align:left\">从cookie中取值<br>语法：<code>jmui.getCookie(c_name)</code><br>参数类型：<code>{String}</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getBrowserInfo</td>\n<td style=\"text-align:left\">获取浏览器UA 判断环境，返回<code>object，{object}.in环境={boolean}</code><br>参数：<code>inIos、inWx、inApp、inJdApp、inJrApp、inWyApp</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">addJrBanner</td>\n<td style=\"text-align:left\">添加金融Banner，可进行金融APP下载<br>语法：<code>jmui.addJrBanner(imgSrc,id,saveDays)</code><br>参数说明：<code>bannerUrl，下载id（默认70），存在周期（默认1天）</code><br>参数类型：<code>{String}、{Int}、{Int}</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">formatTime</td>\n<td style=\"text-align:left\">时间格式化<br>语法：<code>jmui.formatTime(time,&#39;yyyy-MM-dd HH:mm:ss&#39;)</code><br>参数说明：<code>时间戳，输入格式</code><br>参数类型：<code>{Long}、{String}</code><br>注：<code>yyyy</code>表示年，<code>MM</code>表示月，<code>dd</code>表示日，<code>HH</code>表示小时，<code>mm</code>表示分，<code>ss</code>表示秒（参数名不允许更改，格式可自定义）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">createDiv</td>\n<td style=\"text-align:left\">创建DIV，返回<code>Object</code>。<br>语法：<code>jmui.createDiv(className,innerHTML)</code><br>参数说明：<code>标签class名，html内容</code><br>参数类型：<code>{String}</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">fixTips</td>\n<td style=\"text-align:left\">固定提示，返回<code>Object</code>。<br>语法：<code>jmui.fixTips({text:&quot;固定提示框&quot;,pos:&quot;top&quot;,autoClose:false})</code><br>参数说明：<code>html内容，位置，自动隐藏</code><br>参数类型：<code>{String}、{top/mid}、{Boolean}</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">validate</td>\n<td style=\"text-align:left\">验证器集合，返回<code>Boolean</code>。<br>语法：<code>jmui.validate.方法名（值）</code><br>方法：<br><code>checkTel(value)</code> 验证手机号<br><code>checkEmail(value)</code> 验证邮箱地址<br><code>checkPicture(value)</code> 验证图片格式<br><code>checkRar(value)</code> 验证压缩格式<br><code>checkIDCard(value)</code> 验证身份证<br><code>checkQQ(value)</code> 验证QQ号<br><code>checkPassWord(value)</code> 验证密码 字母开头，长度在6~20之间，只能包含字母、数字和下划线<br><code>checkCreditCard(value)</code> 验证信用卡<br><code>checkBankCard(value)</code> 验证银联卡<br><code>checkVisaCard(value)</code> 验证Visa卡<br><code>checkMasterCard(value)</code> 验证万事达卡<br><code>checkLoginName(value)</code> 验证登录名<br><code>checkTrueName(value)</code> 验证真实姓名 考虑到外国人名 xx·XXX<br><code>checkChinese(value)</code> 验证中文</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"jmuiForZepto\"><a href=\"#jmuiForZepto\" class=\"headerlink\" title=\"jmuiForZepto\"></a>jmuiForZepto</h3><blockquote>\n<p>语法：<code>$(&quot;选择器&quot;).方法名</code></p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法名</th>\n<th style=\"text-align:left\">使用说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">createAppDownload</td>\n<td style=\"text-align:left\">将一个标签按钮转化为可检测安装与否的下载链接<br>语法：<code>$(&quot;选择器&quot;).addJrBanner(id,appSrc)</code><br>参数说明：<code>下载id（默认70），app链接（默认&#39;jdmobild://&#39;）</code><br>参数类型：<code>{Int}、{String}</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">createBackTop</td>\n<td style=\"text-align:left\">将元素变为回到顶部按钮<br>语法：<code>$(&quot;选择器&quot;).createBackTop(type)</code><br>参数说明：<code>scroll平滑滚动、static瞬间制定</code><br>参数类型：<code>{String}</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">useNineKeyboard</td>\n<td style=\"text-align:left\">input调用九宫键盘 兼容Android IOS<br>语法：<code>$(&quot;选择器&quot;).useNineKeyboard()</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">setOnlyRead</td>\n<td style=\"text-align:left\">input设置为已读<br>语法：<code>$(&quot;选择器&quot;).setOnlyRead()</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"部分组件文档\"><a href=\"#部分组件文档\" class=\"headerlink\" title=\"部分组件文档\"></a>部分组件文档</h2><p>完整组件列表戳这里：<a href=\"http://mcchen.club/project/jmui/demo/index.html\">http://mcchen.club/project/jmui/demo/index.html</a></p>\n<h3 id=\"addrPicker\"><a href=\"#addrPicker\" class=\"headerlink\" title=\"addrPicker\"></a>addrPicker</h3><p>js模块，地址选择器</p>\n<blockquote>\n<p>语法：<code>new AddrPicker({config});</code></p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数名称</th>\n<th style=\"text-align:center\">参数类型</th>\n<th style=\"text-align:left\">参数说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">selecteBtn</td>\n<td style=\"text-align:center\">Object</td>\n<td style=\"text-align:left\">必选，触发选择按钮</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">addrPickerBox</td>\n<td style=\"text-align:center\">Object</td>\n<td style=\"text-align:left\">必选，地址选择的容器</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">moveBox</td>\n<td style=\"text-align:center\">Object</td>\n<td style=\"text-align:left\">必选，可滑动区域容器</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">moveObj</td>\n<td style=\"text-align:center\">Object</td>\n<td style=\"text-align:left\">必选，可滑动的对象</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">addrInput</td>\n<td style=\"text-align:center\">Object</td>\n<td style=\"text-align:left\">必选，输入内容区域</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">lineHeight</td>\n<td style=\"text-align:center\">Int</td>\n<td style=\"text-align:left\">必选，每个滚动项高度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">btnSure</td>\n<td style=\"text-align:center\">Object</td>\n<td style=\"text-align:left\">必选，确定按钮</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">btnCancel</td>\n<td style=\"text-align:center\">Object</td>\n<td style=\"text-align:left\">必选，取消按钮</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">sureFn</td>\n<td style=\"text-align:center\">Function</td>\n<td style=\"text-align:left\">可选，确定回调函数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">cancelFn</td>\n<td style=\"text-align:center\">Function</td>\n<td style=\"text-align:left\">可选，取消回调函数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ajaxUrl</td>\n<td style=\"text-align:center\">String</td>\n<td style=\"text-align:left\">可选，数据Url</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> addrPicker(&#123;</div><div class=\"line\">                <span class=\"attr\">selecteBtn</span>: $(<span class=\"string\">\"#btnChooseAddr\"</span>),</div><div class=\"line\">                <span class=\"attr\">addrPickerBox</span>: $(<span class=\"string\">\"#addrPicker\"</span>),</div><div class=\"line\">                <span class=\"attr\">moveBox</span>: $(<span class=\"string\">\".picker-item\"</span>),</div><div class=\"line\">                <span class=\"attr\">moveObj</span>: $(<span class=\"string\">\".picker-ul\"</span>),</div><div class=\"line\">                <span class=\"attr\">btnSure</span>: $(<span class=\"string\">\"#pickerSure\"</span>),</div><div class=\"line\">                <span class=\"attr\">btnCancel</span>: $(<span class=\"string\">\"#pickerCancel\"</span>),</div><div class=\"line\">                <span class=\"attr\">addrInput</span>: $(<span class=\"string\">\"#addrInput\"</span>),</div><div class=\"line\">                <span class=\"attr\">lineHeight</span>: <span class=\"number\">40</span>,</div><div class=\"line\">                <span class=\"attr\">ajaxUrl</span>: &#123;<span class=\"string\">\"province\"</span>: <span class=\"string\">\"../data/provinces.json\"</span>, <span class=\"string\">\"city\"</span>: <span class=\"string\">\"../data/citys.json\"</span>, <span class=\"string\">\"area\"</span>: <span class=\"string\">\"../data/areas.json\"</span>&#125;,</div><div class=\"line\">                <span class=\"attr\">sureFn</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">id,text</span>) </span>&#123;</div><div class=\"line\">                    $(<span class=\"string\">\"#addrProvince\"</span>).val(id[<span class=\"number\">0</span>] + <span class=\"string\">\",\"</span> + text[<span class=\"number\">0</span>])</div><div class=\"line\">                    $(<span class=\"string\">\"#addrCity\"</span>).val(id[<span class=\"number\">1</span>] + <span class=\"string\">\",\"</span> + text[<span class=\"number\">1</span>])</div><div class=\"line\">                    $(<span class=\"string\">\"#addrArea\"</span>).val(id[<span class=\"number\">2</span>] + <span class=\"string\">\",\"</span> + text[<span class=\"number\">2</span>])</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;);</div></pre></td></tr></table></figure>\n<p>Demo实例：<a href=\"http://mcchen.club/project/jmui/demo/addrPicker.html\">请狠狠戳我</a></p>\n<h3 id=\"countDown\"><a href=\"#countDown\" class=\"headerlink\" title=\"countDown\"></a>countDown</h3><p>js模块，倒计时插件</p>\n<blockquote>\n<p>语法：<code>new CountDown({config});</code></p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数名称</th>\n<th style=\"text-align:center\">参数类型</th>\n<th style=\"text-align:left\">参数说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">$day</td>\n<td style=\"text-align:center\">Object</td>\n<td style=\"text-align:left\">必选，显示天的对象</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$hour</td>\n<td style=\"text-align:center\">Object</td>\n<td style=\"text-align:left\">必选，显示小时的对象</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$min</td>\n<td style=\"text-align:center\">Object</td>\n<td style=\"text-align:left\">必选，显示分的对象</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$second</td>\n<td style=\"text-align:center\">Object</td>\n<td style=\"text-align:left\">可选，显示秒的对象</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">totalSecond</td>\n<td style=\"text-align:center\">Int</td>\n<td style=\"text-align:left\">必选，倒计时总时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">timeCent</td>\n<td style=\"text-align:center\">Int</td>\n<td style=\"text-align:left\">可选，倒计时单位</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">endFn</td>\n<td style=\"text-align:center\">Function</td>\n<td style=\"text-align:left\">可选，结束回调函数</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> CountDown(&#123;</div><div class=\"line\">                <span class=\"attr\">$day</span>: $(<span class=\"string\">\".day\"</span>),</div><div class=\"line\">                <span class=\"attr\">$hour</span>: $(<span class=\"string\">\".hour\"</span>),</div><div class=\"line\">                <span class=\"attr\">$min</span>: $(<span class=\"string\">\".min\"</span>),</div><div class=\"line\">                <span class=\"attr\">$second</span>: $(<span class=\"string\">\".second\"</span>),</div><div class=\"line\">                <span class=\"attr\">totalSecond</span>: <span class=\"number\">10</span>,</div><div class=\"line\">                <span class=\"attr\">endFn</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">                    alert(<span class=\"string\">\"终于等到你，还好我没放弃---------然并卵\"</span>);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;);</div></pre></td></tr></table></figure>\n<p>Demo实例：<a href=\"http://mcchen.club/project/jmui/demo/countDown.html\">请狠狠戳我</a></p>\n<h3 id=\"dropElement\"><a href=\"#dropElement\" class=\"headerlink\" title=\"dropElement\"></a>dropElement</h3><p>js模块，元素飘落插件</p>\n<blockquote>\n<p>语法：<code>new DropElement({config});</code></p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数名称</th>\n<th style=\"text-align:center\">参数类型</th>\n<th style=\"text-align:left\">参数说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">sizeArr</td>\n<td style=\"text-align:center\">Array</td>\n<td style=\"text-align:left\">必选，掉落元素的尺寸数组（二维）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">count</td>\n<td style=\"text-align:center\">Int</td>\n<td style=\"text-align:left\">可选，同时出现的最大数量</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">during</td>\n<td style=\"text-align:center\">Int</td>\n<td style=\"text-align:left\">可选，完成一次掉落的周期</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">splitTime</td>\n<td style=\"text-align:center\">Int</td>\n<td style=\"text-align:left\">可选，每个元素出现的时间间隔</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">width</td>\n<td style=\"text-align:center\">Int</td>\n<td style=\"text-align:left\">可选，可掉落的区域宽度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">loop</td>\n<td style=\"text-align:center\">Boolean</td>\n<td style=\"text-align:left\">可选，是否循环掉落</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> DropElement(&#123;</div><div class=\"line\">                <span class=\"attr\">sizeArr</span>: [[<span class=\"number\">10</span>, <span class=\"number\">24</span>], [<span class=\"number\">13</span>, <span class=\"number\">15</span>], [<span class=\"number\">16</span>, <span class=\"number\">19</span>], [<span class=\"number\">12</span>, <span class=\"number\">14</span>], [<span class=\"number\">10</span>, <span class=\"number\">15</span>]],</div><div class=\"line\">                <span class=\"attr\">count</span>: <span class=\"number\">15</span>,</div><div class=\"line\">                <span class=\"attr\">during</span>: <span class=\"number\">3000</span>,</div><div class=\"line\">                <span class=\"attr\">splitTime</span>: <span class=\"number\">300</span>,</div><div class=\"line\">                <span class=\"attr\">loop</span>: <span class=\"literal\">true</span></div><div class=\"line\">            &#125;);</div></pre></td></tr></table></figure>\n<p>Demo实例：<a href=\"http://mcchen.club/project/jmui/demo/dropElement.html\">请狠狠戳我</a></p>\n<h3 id=\"iscroll\"><a href=\"#iscroll\" class=\"headerlink\" title=\"iscroll\"></a>iscroll</h3><p>js模块，web最流畅的滚动插件</p>\n<blockquote>\n<p>语法：<code>new IScroll(&quot;#wrapper&quot;, {config});</code></p>\n</blockquote>\n<p>参数请点这里：<a href=\"https://github.com/cubiq/iscroll/\" target=\"_blank\" rel=\"external\">https://github.com/cubiq/iscroll/</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> IScroll(<span class=\"string\">\"#wrapper\"</span>, &#123;<span class=\"attr\">mouseWheel</span>: <span class=\"literal\">true</span>, <span class=\"attr\">probeType</span>: <span class=\"number\">3</span>&#125;);</div></pre></td></tr></table></figure>\n<p>Demo实例：<a href=\"http://mcchen.club/project/jmui/demo/iscroll.html\">请狠狠戳我</a></p>\n<h3 id=\"md5\"><a href=\"#md5\" class=\"headerlink\" title=\"md5\"></a>md5</h3><p>js模块，MD5转换插件</p>\n<blockquote>\n<p>语法：<code>new MD5({config});</code></p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数名称</th>\n<th style=\"text-align:center\">参数类型</th>\n<th style=\"text-align:left\">参数说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">$btn</td>\n<td style=\"text-align:center\">Object</td>\n<td style=\"text-align:left\">必选，转换触发按钮</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">str</td>\n<td style=\"text-align:center\">String</td>\n<td style=\"text-align:left\">必选，需要转换的字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">endFn</td>\n<td style=\"text-align:center\">Function</td>\n<td style=\"text-align:left\">可选，转换完成回调函数</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> MD5(&#123;</div><div class=\"line\">                <span class=\"attr\">$btn</span>:$(<span class=\"string\">\".jmui-md5-btnTransform\"</span>),</div><div class=\"line\">                <span class=\"attr\">str</span>:$(<span class=\"string\">\".jmui-md5-str\"</span>).text(),</div><div class=\"line\">                <span class=\"attr\">endFn</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">str</span>) </span>&#123;</div><div class=\"line\">                    $(<span class=\"string\">\".jmui-md5-str\"</span>).text(str);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;)</div></pre></td></tr></table></figure>\n<p>Demo实例：<a href=\"http://mcchen.club/project/jmui/demo/md5.html\">请狠狠戳我</a></p>\n<h3 id=\"preLoad\"><a href=\"#preLoad\" class=\"headerlink\" title=\"preLoad\"></a>preLoad</h3><p>js模块，预加载插件</p>\n<blockquote>\n<p>语法：<code>new PreLoad({config});</code></p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数名称</th>\n<th style=\"text-align:center\">参数类型</th>\n<th style=\"text-align:left\">参数说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">tasks</td>\n<td style=\"text-align:center\">Array</td>\n<td style=\"text-align:left\">必选，存放预加载资源Url的数组</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">finishedFn</td>\n<td style=\"text-align:center\">Function</td>\n<td style=\"text-align:left\">必选，完成加载的回调函数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">prefix</td>\n<td style=\"text-align:center\">String</td>\n<td style=\"text-align:left\">可选，输出的前缀</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> PreLoad(&#123;</div><div class=\"line\">                <span class=\"attr\">tasks</span>:[</div><div class=\"line\">                    <span class=\"string\">\"1.png\"</span>,</div><div class=\"line\">                    <span class=\"string\">\"2.png\"</span>,</div><div class=\"line\">                    <span class=\"string\">\"3.png\"</span></div><div class=\"line\">                ],</div><div class=\"line\">                <span class=\"attr\">finishedFn</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">total</span>)</span>&#123;</div><div class=\"line\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"已经加载完成了，共加载\"</span>+total+<span class=\"string\">\"个资源\"</span>);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;);</div></pre></td></tr></table></figure>\n<p>Demo实例：<a href=\"http://mcchen.club/project/jmui/demo/preLoad.html\">请狠狠戳我</a></p>\n<h3 id=\"qrcode\"><a href=\"#qrcode\" class=\"headerlink\" title=\"qrcode\"></a>qrcode</h3><p>js模块，二维码插件</p>\n<blockquote>\n<p>语法：<code>new QRCode(object,{config});</code></p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数名称</th>\n<th style=\"text-align:center\">参数类型</th>\n<th style=\"text-align:left\">参数说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">object</td>\n<td style=\"text-align:center\">Object</td>\n<td style=\"text-align:left\">必填，二维码的容器</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">text</td>\n<td style=\"text-align:center\">*</td>\n<td style=\"text-align:left\">必选，二维码内容（支持 url 文本 电子邮件 短消息 电话 vCard 地理位置 二级制压缩文件）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">width</td>\n<td style=\"text-align:center\">Int</td>\n<td style=\"text-align:left\">可选，二维码宽度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">height</td>\n<td style=\"text-align:center\">Int</td>\n<td style=\"text-align:left\">可选，二维码高度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">colorDark</td>\n<td style=\"text-align:center\">String</td>\n<td style=\"text-align:left\">可选，二维码颜色</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">colorLight</td>\n<td style=\"text-align:center\">Int</td>\n<td style=\"text-align:left\">可选，二维码底色</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">correctLevel</td>\n<td style=\"text-align:center\">？</td>\n<td style=\"text-align:left\">可选，二维码容错等级</td>\n</tr>\n</tbody>\n</table>\n<p>参数请点这里：<a href=\"https://github.com/davidshimjs/qrcodejs\" target=\"_blank\" rel=\"external\">https://github.com/davidshimjs/qrcodejs</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> QRCode(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"qrcode\"</span>), &#123;</div><div class=\"line\">                <span class=\"attr\">text</span>: <span class=\"string\">\"http://jr.jd.com?\"</span> + <span class=\"built_in\">Math</span>.random(),</div><div class=\"line\">                <span class=\"attr\">width</span>: <span class=\"number\">61</span>,</div><div class=\"line\">                <span class=\"attr\">height</span>: <span class=\"number\">61</span>,</div><div class=\"line\">                <span class=\"attr\">colorDark</span>: <span class=\"string\">\"#000000\"</span>,</div><div class=\"line\">                <span class=\"attr\">colorLight</span>: <span class=\"string\">\"#ffffff\"</span></div><div class=\"line\">            &#125;)；</div></pre></td></tr></table></figure>\n<p>Demo实例：<a href=\"http://mcchen.club/project/jmui/demo/qrcode.html\">请狠狠戳我</a></p>\n<hr>\n<p>如果能给您带去些许帮助，鄙人不甚欢心。如有错误，恳请交流指出，谢谢！<br>转载请注明出处：<a href=\"http://mcchen.club/\">http://mcchen.club/</a></p>\n<hr>\n","categories":["Javascript"],"tags":["Javascript","移动端框架"]},{"title":"jQuery插件编写学习中遇见的问题--attr&prop","url":"http://mcchen.club/2015/09/01/jQuery插件编写学习中遇见的问题--attr&prop/","content":"<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>最近在学习JQuery的插件的编写，有两种方式:</p>\n<ul>\n<li>.fn.extend    作用于对象原型上</li>\n<li>.extend   作用于JQuery对象上</li>\n</ul>\n<p>我接下来编写的是表格奇偶数不同色，checkbox选择则高亮宣誓，使用$.fn.extend</p>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><h3 id=\"html-部分\"><a href=\"#html-部分\" class=\"headerlink\" title=\"html 部分\"></a>html 部分</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">id</span>=<span class=\"string\">\"table1\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>姓名<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>性别<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>所在地<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>张三<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>女<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>浙江杭州<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>李四<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>男<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>湖南长沙<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>王二<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>女<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>浙江温州<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>McChen<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>男<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>北京<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>NVSHEN<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>女<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>浙江杭州<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>html无非就是一个简单的表格，接下来随意设置样式</p>\n<h3 id=\"css部分\"><a href=\"#css部分\" class=\"headerlink\" title=\"css部分\"></a>css部分</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.even</span> &#123; <span class=\"attribute\">background</span>:<span class=\"number\">#FFF38F</span>;&#125; <span class=\"selector-class\">.odd</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#FFFFEE</span>;&#125; <span class=\"selector-class\">.selected</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#ff0000</span>;&#125;</div></pre></td></tr></table></figure>\n<p>简单说一下 even是偶数行样式，odd是奇数行样式，selected是选中的样式即高亮。</p>\n<h3 id=\"插件编写\"><a href=\"#插件编写\" class=\"headerlink\" title=\"插件编写\"></a>插件编写</h3><p>接下来是重点，遇见的问题也在这。先附上使用attr时的代码。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">;(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">$</span>) </span>&#123;</div><div class=\"line\">$.fn.extend(&#123;</div><div class=\"line\">    <span class=\"string\">\"tableColor\"</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">options</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.each(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> aaa = $.extend(&#123;</div><div class=\"line\">                  <span class=\"attr\">odd</span> : <span class=\"string\">\"odd\"</span>,</div><div class=\"line\">                   <span class=\"attr\">even</span> : <span class=\"string\">\"even\"</span>,</div><div class=\"line\">                  <span class=\"attr\">selected</span> : <span class=\"string\">\"selected\"</span></div><div class=\"line\">               &#125;,options);</div><div class=\"line\">                $(<span class=\"string\">\"tbody&gt;tr:odd\"</span>,<span class=\"keyword\">this</span>).addClass(aaa.odd);</div><div class=\"line\">                $(<span class=\"string\">\"tbody&gt;tr:even\"</span>,<span class=\"keyword\">this</span>).addClass(aaa.even);</div><div class=\"line\">                $(<span class=\"string\">\"tbody&gt;tr\"</span>,<span class=\"keyword\">this</span>).on(<span class=\"string\">\"click\"</span>,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">                    <span class=\"keyword\">var</span> hasSelected = $(<span class=\"keyword\">this</span>).hasClass(aaa.selected);  <span class=\"comment\">//判断是否选中</span></div><div class=\"line\">                 <span class=\"comment\">//判断是否选中然后增加或移除class</span></div><div class=\"line\">                    $(<span class=\"keyword\">this</span>)[hasSelected?<span class=\"string\">\"removeClass\"</span>:<span class=\"string\">\"addClass\"</span>](aaa.selected)</div><div class=\"line\">                       .find(<span class=\"string\">\":checkbox\"</span>).attr(<span class=\"string\">\"checked\"</span>,!hasSelected);</div><div class=\"line\">               &#125;);</div><div class=\"line\">               $(<span class=\"string\">\"tbody&gt;tr:has(:checked)\"</span>,<span class=\"keyword\">this</span>).addClass(aaa.selected);</div><div class=\"line\">               <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">            &#125;)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;)</div><div class=\"line\">&#125;)(jQuery);</div><div class=\"line\"><span class=\"comment\">//------------------------以上是插件编写的代码</span></div></pre></td></tr></table></figure>\n<p>接下来是插件的使用方法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//------------------------开始测试插件的应用</span></div><div class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    $(<span class=\"string\">\"#table1\"</span>).tableColor()</div><div class=\"line\">        .find(<span class=\"string\">\"th\"</span>).css(<span class=\"string\">\"color\"</span>,<span class=\"string\">\"red\"</span>);</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<p>个人看来jq插件需要具备最基本的两点:</p>\n<ul>\n<li>可以自定义参数</li>\n<li>返回的是对象可以进行链式操作</li>\n</ul>\n<h3 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>先看使用attr设置checked的效果图如下：</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/742480/201509/742480-20150901164056778-1551868345.gif\" alt=\"Alt text\"></p>\n<p>我们将attr换成prop之后效果如下：</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/742480/201509/742480-20150901163815294-1325047430.gif\" alt=\"Alt text\"></p>\n<p>当我们使用attr设置checked属性时，发现只有初次生效，解决的办法是使用prop。</p>\n<h2 id=\"浅析原因\"><a href=\"#浅析原因\" class=\"headerlink\" title=\"浅析原因\"></a>浅析原因</h2><p>官方对于prop()的解释是获取在匹配的元素集中的第一个元素的属性值，它的返回值不同于attr，为true或false。（attr返回checked或””），因此总结一下适用范围：</p>\n<ol>\n<li>添加属性名称该属性就会生效应该使用prop();</li>\n<li>是有true,false两个属性使用prop();</li>\n<li>其他则使用attr();</li>\n</ol>\n<p>但是，官方推荐使用的是attr，这我有点不知甚解。</p>\n<p><img src=\"http://images2015.cnblogs.com/blog/742480/201509/742480-20150901164509310-1096291165.png\" alt=\"Alt text\"></p>\n<hr>\n<p>如果能给您带去些许帮助，鄙人不甚欢心。如有错误，恳请交流指出，谢谢！<br>转载请注明出处：<a href=\"http://mcchen.club/\">http://mcchen.club/</a></p>\n<hr>\n","categories":["Javascript"],"tags":["Javascript","JQuery"]},{"title":"document.body.scrollTop等常见易混淆属性整理","url":"http://mcchen.club/2015/09/01/document.body.scrollTop等常见易混淆属性整理/","content":"<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>Javascript中有一些常见易混淆的属性，下面我做了一份大概的整理。</p>\n<h2 id=\"混淆属性\"><a href=\"#混淆属性\" class=\"headerlink\" title=\"混淆属性\"></a>混淆属性</h2><h3 id=\"document-body-clientWidth\"><a href=\"#document-body-clientWidth\" class=\"headerlink\" title=\"document.body.clientWidth\"></a>document.body.clientWidth</h3><p>网页可见区域宽</p>\n<h3 id=\"document-body-offsetWidth\"><a href=\"#document-body-offsetWidth\" class=\"headerlink\" title=\"document.body.offsetWidth\"></a>document.body.offsetWidth</h3><p>网页可见区域宽（包括边线的宽）</p>\n<h3 id=\"document-body-offsetHieght\"><a href=\"#document-body-offsetHieght\" class=\"headerlink\" title=\"document.body.offsetHieght\"></a>document.body.offsetHieght</h3><p>网页可见区域高（包括边线的高）</p>\n<h3 id=\"document-body-scrollWidth\"><a href=\"#document-body-scrollWidth\" class=\"headerlink\" title=\"document.body.scrollWidth\"></a>document.body.scrollWidth</h3><p>网页正文全文宽</p>\n<h3 id=\"document-body-scrollHieght\"><a href=\"#document-body-scrollHieght\" class=\"headerlink\" title=\"document.body.scrollHieght\"></a>document.body.scrollHieght</h3><p>网页正文全文高</p>\n<h3 id=\"document-body-scrollTop\"><a href=\"#document-body-scrollTop\" class=\"headerlink\" title=\"document.body.scrollTop\"></a>document.body.scrollTop</h3><p>网页被卷去的高</p>\n<h3 id=\"document-body-scrollLeft\"><a href=\"#document-body-scrollLeft\" class=\"headerlink\" title=\"document.body.scrollLeft\"></a>document.body.scrollLeft</h3><p>网页被卷去的左</p>\n<h3 id=\"window-screenTop\"><a href=\"#window-screenTop\" class=\"headerlink\" title=\"window.screenTop\"></a>window.screenTop</h3><p>网页正文部分上</p>\n<h3 id=\"window-screenLeft\"><a href=\"#window-screenLeft\" class=\"headerlink\" title=\"window.screenLeft\"></a>window.screenLeft</h3><p>网页正文部分左</p>\n<h3 id=\"window-screen-height\"><a href=\"#window-screen-height\" class=\"headerlink\" title=\"window.screen.height\"></a>window.screen.height</h3><p>屏幕分辨率的高</p>\n<h3 id=\"window-screen-width\"><a href=\"#window-screen-width\" class=\"headerlink\" title=\"window.screen.width\"></a>window.screen.width</h3><p>屏幕分辨率的宽</p>\n<h3 id=\"window-screen-availHeight\"><a href=\"#window-screen-availHeight\" class=\"headerlink\" title=\"window.screen.availHeight\"></a>window.screen.availHeight</h3><p>屏幕可用工作区高度</p>\n<h3 id=\"window-screen-availWidth\"><a href=\"#window-screen-availWidth\" class=\"headerlink\" title=\"window.screen.availWidth\"></a>window.screen.availWidth</h3><p>屏幕可用工作区宽度</p>\n<h3 id=\"scrollHeight\"><a href=\"#scrollHeight\" class=\"headerlink\" title=\"scrollHeight\"></a>scrollHeight</h3><p>获取对象的滚动高度</p>\n<h3 id=\"scrollLeft\"><a href=\"#scrollLeft\" class=\"headerlink\" title=\"scrollLeft\"></a>scrollLeft</h3><p>设置或获取位于对象左边界和窗口中目前可见内容的最左端之间的距离</p>\n<h3 id=\"scrollTop\"><a href=\"#scrollTop\" class=\"headerlink\" title=\"scrollTop\"></a>scrollTop</h3><p>设置或获取位于对象最顶端和窗口中可见内容的最顶端之间的距离</p>\n<h3 id=\"scrollWidth\"><a href=\"#scrollWidth\" class=\"headerlink\" title=\"scrollWidth\"></a>scrollWidth</h3><p>获取对象的滚动宽度</p>\n<h3 id=\"offsetHeight\"><a href=\"#offsetHeight\" class=\"headerlink\" title=\"offsetHeight\"></a>offsetHeight</h3><p>获取对象相对于版面或由父坐标 offsetParent 属性指定的父坐标的高度</p>\n<h3 id=\"offsetLeft\"><a href=\"#offsetLeft\" class=\"headerlink\" title=\"offsetLeft\"></a>offsetLeft</h3><p>获取对象相对于版面或由 offsetParent 属性指定的父坐标的计算左侧位置</p>\n<h3 id=\"offsetTop\"><a href=\"#offsetTop\" class=\"headerlink\" title=\"offsetTop\"></a>offsetTop</h3><p>获取对象相对于版面或由 offsetTop 属性指定的父坐标的计算顶端位置</p>\n<h3 id=\"event-clientX\"><a href=\"#event-clientX\" class=\"headerlink\" title=\"event.clientX\"></a>event.clientX</h3><p>相对文档的水平坐标</p>\n<h3 id=\"event-clientY\"><a href=\"#event-clientY\" class=\"headerlink\" title=\"event.clientY\"></a>event.clientY</h3><p>相对文档的垂直坐标</p>\n<h3 id=\"event-offsetX\"><a href=\"#event-offsetX\" class=\"headerlink\" title=\"event.offsetX\"></a>event.offsetX</h3><p>相对容器的水平坐标</p>\n<h3 id=\"event-offsetY\"><a href=\"#event-offsetY\" class=\"headerlink\" title=\"event.offsetY\"></a>event.offsetY</h3><p>相对容器的垂直坐标</p>\n<h3 id=\"document-documentElement-scrollTop\"><a href=\"#document-documentElement-scrollTop\" class=\"headerlink\" title=\"document.documentElement.scrollTop\"></a>document.documentElement.scrollTop</h3><p>垂直方向滚动的值</p>\n<h3 id=\"event-clientX-document-documentElement-scrollTop\"><a href=\"#event-clientX-document-documentElement-scrollTop\" class=\"headerlink\" title=\"event.clientX+document.documentElement.scrollTop\"></a>event.clientX+document.documentElement.scrollTop</h3><p>相对文档的水平座标+垂直方向滚动的量</p>\n<h2 id=\"Tips\"><a href=\"#Tips\" class=\"headerlink\" title=\"Tips\"></a>Tips</h2><p>要获取当前页面的滚动条纵坐标位置，用：document.documentElement.scrollTop;</p>\n<p>而不是：document.body.scrollTop;</p>\n<p>documentElement 对应的是 html 标签，而 body 对应的是 body 标签</p>\n<hr>\n<p>如果能给您带去些许帮助，鄙人不甚欢心。如有错误，恳请交流指出，谢谢！<br>转载请注明出处：<a href=\"http://mcchen.club/\">http://mcchen.club/</a></p>\n<hr>\n","categories":["Javascript"],"tags":["Javascript","资料整理"]},{"title":"50个实用jquery代码段整理","url":"http://mcchen.club/2015/08/11/50个实用jquery代码段整理/","content":"<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>JQuery有一些使用频率比较高的方法，下面我做了一份大概的整理。</p>\n<h2 id=\"实用方法\"><a href=\"#实用方法\" class=\"headerlink\" title=\"实用方法\"></a>实用方法</h2><h3 id=\"1-创建嵌套的过滤器\"><a href=\"#1-创建嵌套的过滤器\" class=\"headerlink\" title=\"1.创建嵌套的过滤器\"></a>1.创建嵌套的过滤器</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//允许你减少集合中的匹配元素的过滤器，</span></div><div class=\"line\"><span class=\"comment\">//只剩下那些与给定的选择器匹配的部分。在这种情况下，</span></div><div class=\"line\"><span class=\"comment\">//查询删除了任何没（:not）有（:has）</span></div><div class=\"line\"><span class=\"comment\">//包含class为“selected”（.selected）的子节点。</span></div><div class=\"line\">.filter(<span class=\"string\">\":not(:has(.selected))\"</span>)</div></pre></td></tr></table></figure>\n<h3 id=\"2-如何重用元素搜索\"><a href=\"#2-如何重用元素搜索\" class=\"headerlink\" title=\"2.如何重用元素搜索\"></a>2.如何重用元素搜索</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> allItems = $(<span class=\"string\">\"div.item\"</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> keepList = $(<span class=\"string\">\"div#container1 div.item\"</span>);</div><div class=\"line\"><span class=\"comment\">//现在你可以继续使用这些jQuery对象来工作了。例如，</span></div><div class=\"line\"><span class=\"comment\">//基于复选框裁剪“keep list”，复选框的名称</span></div><div class=\"line\"><span class=\"comment\">//符合</span></div><div class=\"line\">$(formToLookAt + <span class=\"string\">\" input:checked\"</span>).each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    keepList = keepList.filter(<span class=\"string\">\".\"</span> + $(<span class=\"keyword\">this</span>).attr(<span class=\"string\">\"name\"</span>));</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"3-任何使用has-来检查某个元素是否包含某个类或是元素\"><a href=\"#3-任何使用has-来检查某个元素是否包含某个类或是元素\" class=\"headerlink\" title=\"3.任何使用has()来检查某个元素是否包含某个类或是元素\"></a>3.任何使用has()来检查某个元素是否包含某个类或是元素</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//jQuery 1.4.*包含了对这一has方法的支持。该方法找出</span></div><div class=\"line\"><span class=\"comment\">//某个元素是否包含了其他另一个元素类或是其他任何的</span></div><div class=\"line\"><span class=\"comment\">//你正在查找并要在其之上进行操作的东东。</span></div><div class=\"line\">$(<span class=\"string\">\"input\"</span>).has(<span class=\"string\">\".email\"</span>).addClass(<span class=\"string\">\"email_icon\"</span>);</div></pre></td></tr></table></figure>\n<h3 id=\"4-如何使用jQuery来切换样式表\"><a href=\"#4-如何使用jQuery来切换样式表\" class=\"headerlink\" title=\"4.如何使用jQuery来切换样式表\"></a>4.如何使用jQuery来切换样式表</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//找出你希望切换的媒体类型（media-type），然后把href设置成新的样式表。</span></div><div class=\"line\">$(<span class=\"string\">'link[media='</span>screen<span class=\"string\">']'</span>).attr(<span class=\"string\">'href'</span>, <span class=\"string\">'Alternative.css'</span>);</div></pre></td></tr></table></figure>\n<h3 id=\"5-如何限制选择范围（基于优化目的）\"><a href=\"#5-如何限制选择范围（基于优化目的）\" class=\"headerlink\" title=\"5.如何限制选择范围（基于优化目的）\"></a>5.如何限制选择范围（基于优化目的）</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//尽可能使用标签名来作为类名的前缀，</span></div><div class=\"line\"><span class=\"comment\">//这样jQuery就不需要花费更多的时间来搜索</span></div><div class=\"line\"><span class=\"comment\">//你想要的元素。还要记住的一点是，</span></div><div class=\"line\"><span class=\"comment\">//针对于你的页面上的元素的操作越具体化，</span></div><div class=\"line\"><span class=\"comment\">//就越能降低执行和搜索的时间。</span></div><div class=\"line\"><span class=\"keyword\">var</span> in_stock = $(<span class=\"string\">'#shopping_cart_items input.is_in_stock'</span>);</div></pre></td></tr></table></figure>\n<h3 id=\"6-如何正确地使用ToggleClass\"><a href=\"#6-如何正确地使用ToggleClass\" class=\"headerlink\" title=\"6.如何正确地使用ToggleClass\"></a>6.如何正确地使用ToggleClass</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//切换（toggle）类允许你根据某个类的</span></div><div class=\"line\"><span class=\"comment\">//是否存在来添加或是删除该类。</span></div><div class=\"line\"><span class=\"comment\">//这种情况下有些开发者使用：</span></div><div class=\"line\">a.hasClass(<span class=\"string\">'blueButton'</span>) ? a.removeClass(<span class=\"string\">'blueButton'</span>) : a.addClass(<span class=\"string\">'blueButton'</span>);</div><div class=\"line\"><span class=\"comment\">//toggleClass允许你使用下面的语句来很容易地做到这一点</span></div><div class=\"line\">a.toggleClass(<span class=\"string\">'blueButton'</span>);</div></pre></td></tr></table></figure>\n<h3 id=\"7-如何设置IE特有的功能：\"><a href=\"#7-如何设置IE特有的功能：\" class=\"headerlink\" title=\"7. 如何设置IE特有的功能：\"></a>7. 如何设置IE特有的功能：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> ($.browser.msie) &#123;</div><div class=\"line\"><span class=\"comment\">// Internet Explorer就是个虐待狂</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"8-如何使用jQuery来代替一个元素：\"><a href=\"#8-如何使用jQuery来代替一个元素：\" class=\"headerlink\" title=\"8. 如何使用jQuery来代替一个元素：\"></a>8. 如何使用jQuery来代替一个元素：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(<span class=\"string\">'#thatdiv'</span>).replaceWith(<span class=\"string\">'fnuh'</span>);</div></pre></td></tr></table></figure>\n<h3 id=\"9-如何验证某个元素是否为空：\"><a href=\"#9-如何验证某个元素是否为空：\" class=\"headerlink\" title=\"9. 如何验证某个元素是否为空：\"></a>9. 如何验证某个元素是否为空：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> ($(<span class=\"string\">'#keks'</span>).html()) &#123;</div><div class=\"line\"><span class=\"comment\">//什么都没有找到;</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"10-如何从一个未排序的集合中找出某个元素的索引号\"><a href=\"#10-如何从一个未排序的集合中找出某个元素的索引号\" class=\"headerlink\" title=\"10. 如何从一个未排序的集合中找出某个元素的索引号\"></a>10. 如何从一个未排序的集合中找出某个元素的索引号</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(<span class=\"string\">\"ul &gt; li\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> index = $(<span class=\"keyword\">this</span>).prevAll().length;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"11-如何把函数绑定到事件上：\"><a href=\"#11-如何把函数绑定到事件上：\" class=\"headerlink\" title=\"11. 如何把函数绑定到事件上：\"></a>11. 如何把函数绑定到事件上：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(<span class=\"string\">'#foo'</span>).bind(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\"> \talert(<span class=\"string\">'User clicked on \"foo.\"'</span>);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"12-如何追加或是添加html到元素中：\"><a href=\"#12-如何追加或是添加html到元素中：\" class=\"headerlink\" title=\"12. 如何追加或是添加html到元素中：\"></a>12. 如何追加或是添加html到元素中：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(<span class=\"string\">'#lal'</span>).append(<span class=\"string\">'sometext'</span>);</div></pre></td></tr></table></figure>\n<h3 id=\"13-在创建元素时，如何使用对象字面量（literal）来定义属性\"><a href=\"#13-在创建元素时，如何使用对象字面量（literal）来定义属性\" class=\"headerlink\" title=\"13. 在创建元素时，如何使用对象字面量（literal）来定义属性\"></a>13. 在创建元素时，如何使用对象字面量（literal）来定义属性</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> e = $(<span class=\"string\">\"\"</span>, &#123; <span class=\"attr\">href</span>: <span class=\"string\">\"#\"</span>, <span class=\"attr\">class</span>: <span class=\"string\">\"a-class another-class\"</span>, <span class=\"attr\">title</span>: <span class=\"string\">\"...\"</span> &#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"14-如何使用多个属性来进行过滤\"><a href=\"#14-如何使用多个属性来进行过滤\" class=\"headerlink\" title=\"14. 如何使用多个属性来进行过滤\"></a>14. 如何使用多个属性来进行过滤</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//在使用许多相类似的有着不同类型的input元素时，</span></div><div class=\"line\"><span class=\"comment\">//这种基于精确度的方法很有用</span></div><div class=\"line\"><span class=\"keyword\">var</span> elements = $(<span class=\"string\">'#someid input[type=sometype][value=somevalue]'</span>).get();</div></pre></td></tr></table></figure>\n<h3 id=\"15-如何使用jQuery来预加载图像：\"><a href=\"#15-如何使用jQuery来预加载图像：\" class=\"headerlink\" title=\"15. 如何使用jQuery来预加载图像：\"></a>15. 如何使用jQuery来预加载图像：</h3> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">jQuery.preloadImages = function() &#123;</div><div class=\"line\">    for(var i = 0; i &lt; arguments.length; i++) &#123;</div><div class=\"line\">        $(&quot;&lt;img /&gt;&quot;).attr(&apos;src&apos;, arguments[i]);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">//用法</div><div class=\"line\">$.preloadImages(&apos;image1.gif&apos;, &apos;/path/to/image2.png&apos;, &apos;some/image3.jpg&apos;);</div></pre></td></tr></table></figure>\n<h3 id=\"16-如何为任何与选择器相匹配的元素设置事件处理程序：\"><a href=\"#16-如何为任何与选择器相匹配的元素设置事件处理程序：\" class=\"headerlink\" title=\"16. 如何为任何与选择器相匹配的元素设置事件处理程序：\"></a>16. 如何为任何与选择器相匹配的元素设置事件处理程序：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(<span class=\"string\">'button.someClass'</span>).live(<span class=\"string\">'click'</span>, someFunction);</div><div class=\"line\"><span class=\"comment\">//注意，在jQuery 1.4.2中，delegate和undelegate选项</span></div><div class=\"line\"><span class=\"comment\">//被引入代替live，因为它们提供了更好的上下文支持</span></div><div class=\"line\"><span class=\"comment\">//例如，就table来说，以前你会用</span></div><div class=\"line\"><span class=\"comment\">//.live()</span></div><div class=\"line\">$(<span class=\"string\">\"table\"</span>).each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    $(<span class=\"string\">\"td\"</span>, <span class=\"keyword\">this</span>).live(<span class=\"string\">\"hover\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        $(<span class=\"keyword\">this</span>).toggleClass(<span class=\"string\">\"hover\"</span>);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"comment\">//现在用</span></div><div class=\"line\">$(<span class=\"string\">\"table\"</span>).delegate(<span class=\"string\">\"td\"</span>, <span class=\"string\">\"hover\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    $(<span class=\"keyword\">this</span>).toggleClass(<span class=\"string\">\"hover\"</span>);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"17-如何找到一个已经被选中的option元素：\"><a href=\"#17-如何找到一个已经被选中的option元素：\" class=\"headerlink\" title=\"17. 如何找到一个已经被选中的option元素：\"></a>17. 如何找到一个已经被选中的option元素：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(<span class=\"string\">'#someElement'</span>).find(<span class=\"string\">'option:selected'</span>);</div></pre></td></tr></table></figure>\n<h3 id=\"18-如何隐藏一个包含了某个值文本的元素：\"><a href=\"#18-如何隐藏一个包含了某个值文本的元素：\" class=\"headerlink\" title=\"18. 如何隐藏一个包含了某个值文本的元素：\"></a>18. 如何隐藏一个包含了某个值文本的元素：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(<span class=\"string\">\"p.value:contains('thetextvalue')\"</span>).hide();</div></pre></td></tr></table></figure>\n<h3 id=\"19-如果自动滚动到页面中的某区域\"><a href=\"#19-如果自动滚动到页面中的某区域\" class=\"headerlink\" title=\"19. 如果自动滚动到页面中的某区域\"></a>19. 如果自动滚动到页面中的某区域</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">jQuery.fn.autoscroll = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">selector</span>) </span>&#123;</div><div class=\"line\">    $(<span class=\"string\">'html,body'</span>).animate(</div><div class=\"line\">        &#123;<span class=\"attr\">scrollTop</span>: $(selector).offset().top&#125;,</div><div class=\"line\">        <span class=\"number\">500</span></div><div class=\"line\">    &#125;;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//然后像这样来滚动到你希望去到的class/area上。</span></div><div class=\"line\">$(<span class=\"string\">'.area_name'</span>).autoscroll();</div></pre></td></tr></table></figure>\n<h3 id=\"20-如何检测各种浏览器：\"><a href=\"#20-如何检测各种浏览器：\" class=\"headerlink\" title=\"20. 如何检测各种浏览器：\"></a>20. 如何检测各种浏览器：</h3><p>检测Safari (if( $.browser.safari)),<br>检测IE6及之后版本 (if (.browser.msie &amp;&amp;.browser.msie &amp;&amp;.browser.version &gt; 6 )),<br>检测IE6及之前版本 (if (.browser.msie &amp;&amp;.browser.msie &amp;&amp;.browser.version &lt;= 6 )),<br>检测FireFox 2及之后版本 (if (.browser.mozilla &amp;&amp;.browser.mozilla &amp;&amp;.browser.version &gt;= ‘1.8’ ))</p>\n<h3 id=\"21-如何替换串中的词\"><a href=\"#21-如何替换串中的词\" class=\"headerlink\" title=\"21. 如何替换串中的词\"></a>21. 如何替换串中的词</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> el = $(<span class=\"string\">'#id'</span>);</div><div class=\"line\">el.html(el.html().replace(<span class=\"regexp\">/word/ig</span>, <span class=\"string\">''</span>));</div></pre></td></tr></table></figure>\n<h3 id=\"22-如何禁用右键单击上下文菜单：\"><a href=\"#22-如何禁用右键单击上下文菜单：\" class=\"headerlink\" title=\"22. 如何禁用右键单击上下文菜单：\"></a>22. 如何禁用右键单击上下文菜单：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(<span class=\"built_in\">document</span>).bind(<span class=\"string\">'contextmenu'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"23-如何定义一个定制的选择器\"><a href=\"#23-如何定义一个定制的选择器\" class=\"headerlink\" title=\"23. 如何定义一个定制的选择器\"></a>23. 如何定义一个定制的选择器</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">$.expr[<span class=\"string\">':'</span>].mycustomselector = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">element, index, meta, stack</span>)</span>&#123;</div><div class=\"line\"><span class=\"comment\">// element- 一个DOM元素</span></div><div class=\"line\"><span class=\"comment\">// index – 栈中的当前循环索引</span></div><div class=\"line\"><span class=\"comment\">// meta – 有关选择器的元数据</span></div><div class=\"line\"><span class=\"comment\">// stack – 要循环的所有元素的栈</span></div><div class=\"line\"><span class=\"comment\">// 如果包含了当前元素就返回true</span></div><div class=\"line\"><span class=\"comment\">// 如果不包含当前元素就返回false &#125;;</span></div><div class=\"line\"><span class=\"comment\">// 定制选择器的用法：</span></div><div class=\"line\">$(<span class=\"string\">'.someClasses:test'</span>).doSomething();</div></pre></td></tr></table></figure>\n<h3 id=\"24-如何检查某个元素是否存在\"><a href=\"#24-如何检查某个元素是否存在\" class=\"headerlink\" title=\"24. 如何检查某个元素是否存在\"></a>24. 如何检查某个元素是否存在</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> ($(<span class=\"string\">'#someDiv'</span>).length) &#123;</div><div class=\"line\"><span class=\"comment\">//万岁！！！它存在……</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"25-如何使用jQuery来检测右键和左键的鼠标单击两种情况：\"><a href=\"#25-如何使用jQuery来检测右键和左键的鼠标单击两种情况：\" class=\"headerlink\" title=\"25. 如何使用jQuery来检测右键和左键的鼠标单击两种情况：\"></a>25. 如何使用jQuery来检测右键和左键的鼠标单击两种情况：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(<span class=\"string\">\"#someelement\"</span>).live(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>( (!.browser.msie &amp;&amp; e.button == <span class=\"number\">0</span>) || (.browser.msie &amp;&amp; e.button == <span class=\"number\">0</span>) || (.browser.msie &amp;&amp; e.button == <span class=\"number\">1</span>) ) &#123;</div><div class=\"line\">    alert(<span class=\"string\">\"Left Mouse Button Clicked\"</span>);</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(e.button == <span class=\"number\">2</span>) &#123;</div><div class=\"line\">        alert(<span class=\"string\">\"Right Mouse Button Clicked\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"26-如何显示或是删除input域中的默认值\"><a href=\"#26-如何显示或是删除input域中的默认值\" class=\"headerlink\" title=\"26. 如何显示或是删除input域中的默认值\"></a>26. 如何显示或是删除input域中的默认值</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//这段代码展示了在用户未输入值时，</span></div><div class=\"line\"><span class=\"comment\">//如何在文本类型的input域中保留</span></div><div class=\"line\"><span class=\"comment\">//一个默认值</span></div><div class=\"line\">wap_val = [];</div><div class=\"line\">$(<span class=\"string\">\".swap\"</span>).each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">i</span>)</span>&#123;</div><div class=\"line\">    wap_val[i] = $(<span class=\"keyword\">this</span>).val();</div><div class=\"line\">    $(<span class=\"keyword\">this</span>).focusin(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> ($(<span class=\"keyword\">this</span>).val() == swap_val[i]) &#123;</div><div class=\"line\">        $(<span class=\"keyword\">this</span>).val(<span class=\"string\">\"\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;).focusout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (.trim(.trim((<span class=\"keyword\">this</span>).val()) == <span class=\"string\">\"\"</span>) &#123;</div><div class=\"line\">        $(<span class=\"keyword\">this</span>).val(swap_val[i]);</div><div class=\"line\">    &#125;&#125;);</div><div class=\"line\">&#125;);</div><div class=\"line\">&lt;input type=\"text\" value=\"Enter Username here..\" /&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"27-如何在一段时间之后自动隐藏或关闭元素（支持1-4版本）：\"><a href=\"#27-如何在一段时间之后自动隐藏或关闭元素（支持1-4版本）：\" class=\"headerlink\" title=\"27. 如何在一段时间之后自动隐藏或关闭元素（支持1.4版本）：\"></a>27. 如何在一段时间之后自动隐藏或关闭元素（支持1.4版本）：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//这是1.3.2中我们使用setTimeout来实现的方式</span></div><div class=\"line\">setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    $(<span class=\"string\">'.mydiv'</span>).hide(<span class=\"string\">'blind'</span>, &#123;&#125;, <span class=\"number\">500</span>)</div><div class=\"line\">&#125;, <span class=\"number\">5000</span>);</div><div class=\"line\"><span class=\"comment\">//而这是在1.4中可以使用delay()这一功能来实现的方式（这很像是休眠）</span></div><div class=\"line\">$(<span class=\"string\">\".mydiv\"</span>).delay(<span class=\"number\">5000</span>).hide(<span class=\"string\">'blind'</span>, &#123;&#125;, <span class=\"number\">500</span>);</div></pre></td></tr></table></figure>\n<h3 id=\"28-如何把已创建的元素动态地添加到DOM中：\"><a href=\"#28-如何把已创建的元素动态地添加到DOM中：\" class=\"headerlink\" title=\"28. 如何把已创建的元素动态地添加到DOM中：\"></a>28. 如何把已创建的元素动态地添加到DOM中：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> newDiv = $(<span class=\"string\">''</span>);</div><div class=\"line\">newDiv.attr(<span class=\"string\">'id'</span>,<span class=\"string\">'myNewDiv'</span>).appendTo(<span class=\"string\">'body'</span>);</div></pre></td></tr></table></figure>\n<h3 id=\"29-如何限制“Text-Area”域中的字符的个数：\"><a href=\"#29-如何限制“Text-Area”域中的字符的个数：\" class=\"headerlink\" title=\"29. 如何限制“Text-Area”域中的字符的个数：\"></a>29. 如何限制“Text-Area”域中的字符的个数：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">jQuery.fn.maxLength = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">max</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> type = <span class=\"keyword\">this</span>.tagName.toLowerCase();</div><div class=\"line\">        <span class=\"keyword\">var</span> inputType = <span class=\"keyword\">this</span>.type? <span class=\"keyword\">this</span>.type.toLowerCase() : <span class=\"literal\">null</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span>(type == <span class=\"string\">\"input\"</span> &amp;&amp; inputType == <span class=\"string\">\"text\"</span> || inputType == <span class=\"string\">\"password\"</span>)&#123;</div><div class=\"line\">        <span class=\"comment\">//Apply the standard maxLength</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.maxLength = max;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(type == <span class=\"string\">\"textarea\"</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.onkeypress = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</div><div class=\"line\">                <span class=\"keyword\">var</span> ob = e || event;</div><div class=\"line\">                <span class=\"keyword\">var</span> keyCode = ob.keyCode;</div><div class=\"line\">                <span class=\"keyword\">var</span> hasSelection = <span class=\"built_in\">document</span>.selection? <span class=\"built_in\">document</span>.selection.createRange().text.length &gt; <span class=\"number\">0</span> : <span class=\"keyword\">this</span>.selectionStart != <span class=\"keyword\">this</span>.selectionEnd;</div><div class=\"line\">                <span class=\"keyword\">return</span> !(<span class=\"keyword\">this</span>.value.length &gt;= max &amp;&amp; (keyCode &gt; <span class=\"number\">50</span> || keyCode == <span class=\"number\">32</span> || keyCode == <span class=\"number\">0</span> || keyCode == <span class=\"number\">13</span>) &amp;&amp; !ob.ctrlKey &amp;&amp; !ob.altKey &amp;&amp; !hasSelection);</div><div class=\"line\">            &#125;;</div><div class=\"line\">            <span class=\"keyword\">this</span>.onkeyup = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">                <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.value.length &gt; max)&#123;</div><div class=\"line\">                    <span class=\"keyword\">this</span>.value = <span class=\"keyword\">this</span>.value.substring(<span class=\"number\">0</span>,max);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"comment\">//用法</span></div><div class=\"line\">$(<span class=\"string\">'#mytextarea'</span>).maxLength(<span class=\"number\">500</span>);</div></pre></td></tr></table></figure>\n<h3 id=\"30-如何为函数创建一个基本的测试\"><a href=\"#30-如何为函数创建一个基本的测试\" class=\"headerlink\" title=\"30. 如何为函数创建一个基本的测试\"></a>30. 如何为函数创建一个基本的测试</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//把测试单独放在模块中</span></div><div class=\"line\"><span class=\"built_in\">module</span>(<span class=\"string\">\"Module B\"</span>);</div><div class=\"line\">test(<span class=\"string\">\"some other test\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\"><span class=\"comment\">//指明测试内部预期有多少要运行的断言</span></div><div class=\"line\">    expect(<span class=\"number\">2</span>);</div><div class=\"line\"><span class=\"comment\">//一个比较断言，相当于JUnit的assertEquals</span></div><div class=\"line\">    equals( <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"string\">\"failing test\"</span> );</div><div class=\"line\">    equals( <span class=\"literal\">true</span>, <span class=\"literal\">true</span>, <span class=\"string\">\"passing test\"</span> );</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"31-如何在jQuery中克隆一个元素：\"><a href=\"#31-如何在jQuery中克隆一个元素：\" class=\"headerlink\" title=\"31. 如何在jQuery中克隆一个元素：\"></a>31. 如何在jQuery中克隆一个元素：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> cloned = $(<span class=\"string\">'#somediv'</span>).clone();</div></pre></td></tr></table></figure>\n<h3 id=\"32-在jQuery中如何测试某个元素是否可见\"><a href=\"#32-在jQuery中如何测试某个元素是否可见\" class=\"headerlink\" title=\"32. 在jQuery中如何测试某个元素是否可见\"></a>32. 在jQuery中如何测试某个元素是否可见</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span>($(element).is(<span class=\"string\">':visible'</span>) == <span class=\"string\">'true'</span>) &#123;</div><div class=\"line\"><span class=\"comment\">//该元素是可见的</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"33-如何把一个元素放在屏幕的中心位置：\"><a href=\"#33-如何把一个元素放在屏幕的中心位置：\" class=\"headerlink\" title=\"33. 如何把一个元素放在屏幕的中心位置：\"></a>33. 如何把一个元素放在屏幕的中心位置：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">jQuery.fn.center = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.css(<span class=\"string\">'position'</span>,<span class=\"string\">'absolute'</span>);</div><div class=\"line\">    <span class=\"keyword\">this</span>.css(<span class=\"string\">'top'</span>, ( (<span class=\"built_in\">window</span>).height()−<span class=\"keyword\">this</span>.height())/+(<span class=\"built_in\">window</span>).height()−<span class=\"keyword\">this</span>.height())/+(<span class=\"built_in\">window</span>).scrollTop() + <span class=\"string\">'px'</span>);</div><div class=\"line\">    <span class=\"keyword\">this</span>.css(<span class=\"string\">'left'</span>, ( (<span class=\"built_in\">window</span>).width()−<span class=\"keyword\">this</span>.width())/<span class=\"number\">2</span>+(<span class=\"built_in\">window</span>).width()−<span class=\"keyword\">this</span>.width())/<span class=\"number\">2</span>+(<span class=\"built_in\">window</span>).scrollLeft() + <span class=\"string\">'px'</span>);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//这样来使用上面的函数：</span></div><div class=\"line\">$(element).center();</div></pre></td></tr></table></figure>\n<h3 id=\"34-如何把有着某个特定名称的所有元素的值都放到一个数组中：\"><a href=\"#34-如何把有着某个特定名称的所有元素的值都放到一个数组中：\" class=\"headerlink\" title=\"34. 如何把有着某个特定名称的所有元素的值都放到一个数组中：\"></a>34. 如何把有着某个特定名称的所有元素的值都放到一个数组中：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arrInputValues = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</div><div class=\"line\">$(<span class=\"string\">\"input[name='table[]']\"</span>).each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    arrInputValues.push($(<span class=\"keyword\">this</span>).val());</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"35-如何从元素中除去html\"><a href=\"#35-如何从元素中除去html\" class=\"headerlink\" title=\"35. 如何从元素中除去html\"></a>35. 如何从元素中除去html</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">(function($) &#123;</div><div class=\"line\">    $.fn.stripHtml = function() &#123;</div><div class=\"line\">    var regexp = /&lt;(\"[^\"]*\"|'[^']*'|[^'\"&gt;])*&gt;/gi;</div><div class=\"line\">    this.each(function() &#123;</div><div class=\"line\">        (this).html((this).html((this).html().replace(regexp,”\") );&#125;);</div><div class=\"line\">        return $(this);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)(jQuery);</div><div class=\"line\">//用法：</div><div class=\"line\">$('p').stripHtml();</div></pre></td></tr></table></figure>\n<h3 id=\"36-如何使用closest来取得父元素：\"><a href=\"#36-如何使用closest来取得父元素：\" class=\"headerlink\" title=\"36. 如何使用closest来取得父元素：\"></a>36. 如何使用closest来取得父元素：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(<span class=\"string\">'#searchBox'</span>).closest(<span class=\"string\">'div'</span>);</div></pre></td></tr></table></figure>\n<h3 id=\"37-如何使用Firebug和Firefox来记录jQuery事件日志：\"><a href=\"#37-如何使用Firebug和Firefox来记录jQuery事件日志：\" class=\"headerlink\" title=\"37. 如何使用Firebug和Firefox来记录jQuery事件日志：\"></a>37. 如何使用Firebug和Firefox来记录jQuery事件日志：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 允许链式日志记录</span></div><div class=\"line\"><span class=\"comment\">// 用法：</span></div><div class=\"line\">$(<span class=\"string\">'#someDiv'</span>).hide().log(<span class=\"string\">'div hidden'</span>).addClass(<span class=\"string\">'someClass'</span>);</div><div class=\"line\">jQuery.log = jQuery.fn.log = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">msg</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">console</span>)&#123;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">\"%s: %o\"</span>, msg, <span class=\"keyword\">this</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<h3 id=\"38-如何强制在弹出窗口中打开链接：\"><a href=\"#38-如何强制在弹出窗口中打开链接：\" class=\"headerlink\" title=\"38. 如何强制在弹出窗口中打开链接：\"></a>38. 如何强制在弹出窗口中打开链接：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">jQuery(<span class=\"string\">'a.popup'</span>).live(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    newwindow=<span class=\"built_in\">window</span>.open($(<span class=\"keyword\">this</span>).attr(<span class=\"string\">'href'</span>),<span class=\"string\">''</span>,<span class=\"string\">'height=200,width=150'</span>);</div><div class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">window</span>.focus) &#123;</div><div class=\"line\">        newwindow.focus();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"39-如何强制在新的选项卡中打开链接：\"><a href=\"#39-如何强制在新的选项卡中打开链接：\" class=\"headerlink\" title=\"39. 如何强制在新的选项卡中打开链接：\"></a>39. 如何强制在新的选项卡中打开链接：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">jQuery(<span class=\"string\">'a.newTab'</span>).live(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    newwindow=<span class=\"built_in\">window</span>.open($(<span class=\"keyword\">this</span>).href);</div><div class=\"line\">    jQuery(<span class=\"keyword\">this</span>).target = <span class=\"string\">\"_blank\"</span>;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"40-在jQuery中如何使用-siblings-来选择同辈元素\"><a href=\"#40-在jQuery中如何使用-siblings-来选择同辈元素\" class=\"headerlink\" title=\"40. 在jQuery中如何使用.siblings()来选择同辈元素\"></a>40. 在jQuery中如何使用.siblings()来选择同辈元素</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 不这样做</span></div><div class=\"line\">$(<span class=\"string\">'#nav li'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    $(<span class=\"string\">'#nav li'</span>).removeClass(<span class=\"string\">'active'</span>);</div><div class=\"line\">    $(<span class=\"keyword\">this</span>).addClass(<span class=\"string\">'active'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"comment\">//替代做法是</span></div><div class=\"line\">$(<span class=\"string\">'#nav li'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    $(<span class=\"keyword\">this</span>).addClass(<span class=\"string\">'active'</span>).siblings().removeClass(<span class=\"string\">'active'</span>);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"41-如何切换页面上的所有复选框：\"><a href=\"#41-如何切换页面上的所有复选框：\" class=\"headerlink\" title=\"41. 如何切换页面上的所有复选框：\"></a>41. 如何切换页面上的所有复选框：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> tog = <span class=\"literal\">false</span>;</div><div class=\"line\"><span class=\"comment\">// 或者为true，如果它们在加载时为被选中状态的话</span></div><div class=\"line\">$(<span class=\"string\">'a'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    $(<span class=\"string\">\"input[type=checkbox]\"</span>).attr(<span class=\"string\">\"checked\"</span>,!tog);</div><div class=\"line\">    tog = !tog;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"42-如何基于一些输入文本来过滤一个元素列表：\"><a href=\"#42-如何基于一些输入文本来过滤一个元素列表：\" class=\"headerlink\" title=\"42. 如何基于一些输入文本来过滤一个元素列表：\"></a>42. 如何基于一些输入文本来过滤一个元素列表：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//如果元素的值和输入的文本相匹配的话</span></div><div class=\"line\"><span class=\"comment\">//该元素将被返回</span></div><div class=\"line\">$(<span class=\"string\">'.someClass'</span>).filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> (<span class=\"keyword\">this</span>).attr(′value′)==(<span class=\"keyword\">this</span>).attr(′value′)==(<span class=\"string\">'input#someId'</span>).val();</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h3 id=\"43-如何获得鼠标垫光标位置x和y\"><a href=\"#43-如何获得鼠标垫光标位置x和y\" class=\"headerlink\" title=\"43. 如何获得鼠标垫光标位置x和y\"></a>43. 如何获得鼠标垫光标位置x和y</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(document).ready(function() &#123;</div><div class=\"line\">    $(document).mousemove(function(e)&#123;</div><div class=\"line\">        $(’#XY’).html(”X Axis : ” + e.pageX + ” | Y Axis ” + e.pageY);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"44-如何把整个的列表元素（List-Element，LI）变成可点击的\"><a href=\"#44-如何把整个的列表元素（List-Element，LI）变成可点击的\" class=\"headerlink\" title=\"44. 如何把整个的列表元素（List Element，LI）变成可点击的\"></a>44. 如何把整个的列表元素（List Element，LI）变成可点击的</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(<span class=\"string\">\"ul li\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"built_in\">window</span>.location=$(<span class=\"keyword\">this</span>).find(<span class=\"string\">\"a\"</span>).attr(<span class=\"string\">\"href\"</span>);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">&#125;);</div><div class=\"line\">&lt;ul&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=\"#\"&gt;Link 1&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=\"#\"&gt;Link 2&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=\"#\"&gt;Link 3&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=\"#\"&gt;Link 4&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;/ul&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"45-如何使用jQuery来解析XML（基本的例子）：\"><a href=\"#45-如何使用jQuery来解析XML（基本的例子）：\" class=\"headerlink\" title=\"45. 如何使用jQuery来解析XML（基本的例子）：\"></a>45. 如何使用jQuery来解析XML（基本的例子）：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parseXml</span>(<span class=\"params\">xml</span>) </span>&#123;</div><div class=\"line\"><span class=\"comment\">//找到每个Tutorial并打印出author</span></div><div class=\"line\">    $(xml).find(<span class=\"string\">\"Tutorial\"</span>).each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        (<span class=\"string\">\"#output\"</span>).append((<span class=\"string\">\"#output\"</span>).append((<span class=\"keyword\">this</span>).attr(<span class=\"string\">\"author\"</span>) + <span class=\"string\">\"\"</span>);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"46-如何检查图像是否已经被完全加载进来\"><a href=\"#46-如何检查图像是否已经被完全加载进来\" class=\"headerlink\" title=\"46. 如何检查图像是否已经被完全加载进来\"></a>46. 如何检查图像是否已经被完全加载进来</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(<span class=\"string\">'#theImage'</span>).attr(<span class=\"string\">'src'</span>, <span class=\"string\">'image.jpg'</span>).load(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    alert(<span class=\"string\">'This Image Has Been Loaded'</span>);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"47-如何使用jQuery来为事件指定命名空间：\"><a href=\"#47-如何使用jQuery来为事件指定命名空间：\" class=\"headerlink\" title=\"47. 如何使用jQuery来为事件指定命名空间：\"></a>47. 如何使用jQuery来为事件指定命名空间：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//事件可以这样绑定命名空间</span></div><div class=\"line\">$(<span class=\"string\">'input'</span>).bind(<span class=\"string\">'blur.validation'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</div><div class=\"line\"><span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"comment\">//data方法也接受命名空间</span></div><div class=\"line\">$(<span class=\"string\">'input'</span>).data(<span class=\"string\">'validation.isValid'</span>, <span class=\"literal\">true</span>);</div></pre></td></tr></table></figure>\n<h3 id=\"48-如何检查cookie是否启用\"><a href=\"#48-如何检查cookie是否启用\" class=\"headerlink\" title=\"48. 如何检查cookie是否启用\"></a>48. 如何检查cookie是否启用</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> dt = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</div><div class=\"line\">dt.setSeconds(dt.getSeconds() + <span class=\"number\">60</span>);</div><div class=\"line\"><span class=\"built_in\">document</span>.cookie = <span class=\"string\">\"cookietest=1; expires=\"</span> + dt.toGMTString();</div><div class=\"line\"><span class=\"keyword\">var</span> cookiesEnabled = <span class=\"built_in\">document</span>.cookie.indexOf(<span class=\"string\">\"cookietest=\"</span>) != <span class=\"number\">-1</span>;</div><div class=\"line\"><span class=\"keyword\">if</span>(!cookiesEnabled) &#123;</div><div class=\"line\"><span class=\"comment\">//没有启用cookie</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"49-如何让cookie过期：\"><a href=\"#49-如何让cookie过期：\" class=\"headerlink\" title=\"49. 如何让cookie过期：\"></a>49. 如何让cookie过期：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</div><div class=\"line\">date.setTime(date.getTime() + (x * <span class=\"number\">60</span> * <span class=\"number\">1000</span>));</div><div class=\"line\">$.cookie(<span class=\"string\">'example'</span>, <span class=\"string\">'foo'</span>, &#123; <span class=\"attr\">expires</span>: date &#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"50-如何使用一个可点击的链接来替换页面中任何的URL\"><a href=\"#50-如何使用一个可点击的链接来替换页面中任何的URL\" class=\"headerlink\" title=\"50. 如何使用一个可点击的链接来替换页面中任何的URL\"></a>50. 如何使用一个可点击的链接来替换页面中任何的URL</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">$.fn.replaceUrl = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> regexp = <span class=\"regexp\">/((ftp|http|https):\\/\\/(\\w+:&#123;0,1&#125;\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&amp;%@!\\-\\/]))?)/gi</span>;</div><div class=\"line\">    <span class=\"keyword\">this</span>.each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        $(<span class=\"keyword\">this</span>).html(</div><div class=\"line\">            (<span class=\"keyword\">this</span>).html().replace(regexp,′(<span class=\"keyword\">this</span>).html().replace(regexp,′<span class=\"number\">1</span>‘)</div><div class=\"line\">        );</div><div class=\"line\">    &#125;);</div><div class=\"line\">    <span class=\"keyword\">return</span> $(<span class=\"keyword\">this</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//用法　</span></div><div class=\"line\"></div><div class=\"line\">$(<span class=\"string\">'p'</span>).replaceUrl();</div></pre></td></tr></table></figure>\n<hr>\n<p>如果能给您带去些许帮助，鄙人不甚欢心。如有错误，恳请交流指出，谢谢！<br>转载请注明出处：<a href=\"http://mcchen.club/\">http://mcchen.club/</a></p>\n<hr>\n","categories":["Javascript"],"tags":["Javascript","资料整理"]},{"title":"纯css实现焦点轮播效果-功能可拓展","url":"http://mcchen.club/2015/08/04/纯css实现焦点轮播效果-功能可拓展/","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>相信对于很多刚接触前端的新手而言，轮播图是第一道需要去客服的坎，我这里提供一个纯css实现轮播的思路。</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"html部分\"><a href=\"#html部分\" class=\"headerlink\" title=\"html部分\"></a>html部分</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width,initial-scale=1,maximum-scale=1\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"format-detection\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"telephone=no\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apple-mobile-web-app-capable\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"yes\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>纯CSS焦点轮播<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"css\"></span></div><div class=\"line\">        <span class=\"selector-tag\">body</span> &#123;  <span class=\"attribute\">background-color</span>: <span class=\"number\">#f0f0f0</span>;  &#125;</div><div class=\"line\">        <span class=\"selector-class\">.focus_img</span> &#123; <span class=\"attribute\">position</span>: relative; <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>; <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>; <span class=\"attribute\">overflow</span>: hidden; <span class=\"attribute\">margin</span>: auto; <span class=\"attribute\">border</span>: solid <span class=\"number\">2px</span> <span class=\"number\">#000000</span>;&#125;</div><div class=\"line\">        <span class=\"selector-tag\">ul</span> &#123; <span class=\"attribute\">position</span>: absolute; <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>; <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>; &#125;</div><div class=\"line\">        <span class=\"selector-class\">.img_list</span> &#123; <span class=\"attribute\">top</span>: <span class=\"number\">0</span>; <span class=\"attribute\">left</span>: <span class=\"number\">0</span>; <span class=\"attribute\">-webkit-animation</span>: img_list <span class=\"number\">10s</span> <span class=\"number\">2s</span> infinite;&#125;</div><div class=\"line\">        <span class=\"selector-class\">.img_list</span> <span class=\"selector-tag\">li</span> &#123; <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>; <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>; <span class=\"attribute\">overflow</span>: hidden;&#125;</div><div class=\"line\">        <span class=\"selector-class\">.img_list</span> <span class=\"selector-tag\">img</span> &#123; <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>; <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;&#125;</div><div class=\"line\">        <span class=\"selector-class\">.img_index</span> &#123; <span class=\"attribute\">bottom</span>: <span class=\"number\">10px</span>;<span class=\"attribute\">right</span>: <span class=\"number\">10px</span>;&#125;</div><div class=\"line\">        <span class=\"selector-class\">.img_index</span> <span class=\"selector-tag\">li</span> &#123;<span class=\"attribute\">float</span>: left; <span class=\"attribute\">width</span>: <span class=\"number\">16px</span>; <span class=\"attribute\">height</span>: <span class=\"number\">16px</span>; <span class=\"attribute\">border</span>: solid <span class=\"number\">1px</span> <span class=\"number\">#cccccc</span>; <span class=\"attribute\">background-color</span>: <span class=\"number\">#ffffff</span>; <span class=\"attribute\">color</span>:<span class=\"number\">#000000</span>; <span class=\"attribute\">text-align</span>: center;<span class=\"attribute\">line-height</span>: <span class=\"number\">16px</span>;<span class=\"attribute\">overflow</span>: hidden;<span class=\"attribute\">cursor</span>: pointer;<span class=\"attribute\">margin-right</span>: <span class=\"number\">2px</span>;  &#125;</div><div class=\"line\">        <span class=\"selector-class\">.one</span> &#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#000000</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#ffffff</span>; <span class=\"attribute\">-webkit-animation</span>: one <span class=\"number\">10s</span> <span class=\"number\">2s</span> infinite;&#125;</div><div class=\"line\">        <span class=\"selector-class\">.two</span> &#123; <span class=\"attribute\">-webkit-animation</span>: two <span class=\"number\">10s</span> <span class=\"number\">2s</span> infinite;&#125;</div><div class=\"line\">        <span class=\"selector-class\">.three</span> &#123;<span class=\"attribute\">-webkit-animation</span>: three <span class=\"number\">10s</span> <span class=\"number\">2s</span> infinite;&#125;</div><div class=\"line\">        <span class=\"selector-class\">.four</span> &#123;<span class=\"attribute\">-webkit-animation</span>: four <span class=\"number\">10s</span> <span class=\"number\">2s</span> infinite;&#125;</div><div class=\"line\">        <span class=\"selector-class\">.five</span> &#123;<span class=\"attribute\">-webkit-animation</span>: five <span class=\"number\">10s</span> <span class=\"number\">2s</span> infinite;&#125;</div><div class=\"line\">        @-<span class=\"keyword\">webkit</span>-<span class=\"keyword\">keyframes</span> img_list &#123;</div><div class=\"line\">            0%&#123; <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translate</span>(0,0);&#125;</div><div class=\"line\">            10%,20% &#123;<span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translate</span>(0,-300px);&#125;</div><div class=\"line\">            30%,40% &#123;<span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translate</span>(0,-600px);&#125;</div><div class=\"line\">            50%,60% &#123;<span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translate</span>(0,-900px);&#125;</div><div class=\"line\">            70%,80% &#123;<span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translate</span>(0,-1200px);&#125;</div><div class=\"line\">            90%,100% &#123;<span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translate</span>(0,0);&#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        @-<span class=\"keyword\">webkit</span>-<span class=\"keyword\">keyframes</span> one &#123;</div><div class=\"line\">            10%,20%,30%,40%,50%,60%,70%,80%&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#ffffff</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#000000</span>;&#125;</div><div class=\"line\">            0%,90%,100%&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#000000</span>;<span class=\"attribute\">color</span>: <span class=\"number\">#ffffff</span>;&#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        @-<span class=\"keyword\">webkit</span>-<span class=\"keyword\">keyframes</span> two &#123;</div><div class=\"line\">            0%,30%,40%,50%,60%,70%,80%,90%,100%&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#ffffff</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#000000</span>;&#125;</div><div class=\"line\">            10%,20%&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#000000</span>;<span class=\"attribute\">color</span>: <span class=\"number\">#ffffff</span>;&#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        @-<span class=\"keyword\">webkit</span>-<span class=\"keyword\">keyframes</span> three &#123;</div><div class=\"line\">            0%,10%,20%,50%,60%,70%,80%,90%,100%&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#ffffff</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#000000</span>;&#125;</div><div class=\"line\">            30%,40%&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#000000</span>;<span class=\"attribute\">color</span>: <span class=\"number\">#ffffff</span>;&#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        @-<span class=\"keyword\">webkit</span>-<span class=\"keyword\">keyframes</span> four &#123;</div><div class=\"line\">            0%,10%,20%,30%,40%,70%,80%,90%,100%&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#ffffff</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#000000</span>;&#125;</div><div class=\"line\">            50%,60%&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#000000</span>;<span class=\"attribute\">color</span>: <span class=\"number\">#ffffff</span>;&#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        @-<span class=\"keyword\">webkit</span>-<span class=\"keyword\">keyframes</span> five &#123;</div><div class=\"line\">            0%,10%,20%,30%,40%,50%,60%,90%,100%&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#ffffff</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#000000</span>;&#125;</div><div class=\"line\">            70%,80%&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#000000</span>;<span class=\"attribute\">color</span>: <span class=\"number\">#ffffff</span>;&#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"focus_img\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"img_list\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://ss0.bdstatic.com/-0U0bnSm1A5BphGlnYG/tam-ogel/1d68b8f42a077e5fc13dd53282b884ad_121_121.jpg\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://ss1.baidu.com/6ONXsjip0QIZ8tyhnq/it/u=2677286959,1418084722&amp;fm=58&amp;s=05F07D3288656D01446505DD0100C022\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=3509313783,3642023323&amp;fm=58\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://ss2.bdstatic.com/8_V1bjqh_Q23odCf/pacific/833581989.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://ss1.bdstatic.com/9vo3dSag_xI4khGkpoWK1HF6hhy/wisegame/pic/item/c0cc7cd98d1001e9e09d1675b10e7bec54e79723.jpg\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>/&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"img_index\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"one\"</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"two\"</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"three\"</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"four\"</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"five\"</span>&gt;</span>5<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://code.jquery.com/jquery-1.12.4.min.js\"</span> <span class=\"attr\">integrity</span>=<span class=\"string\">\"sha256-ZosEbRLbNQzLpnKIkEdrPv7lOy9C27hHQ+Xp8a4MxAQ=\"</span> <span class=\"attr\">crossorigin</span>=<span class=\"string\">\"anonymous\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"css部分\"><a href=\"#css部分\" class=\"headerlink\" title=\"css部分\"></a>css部分</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">body</span> &#123;  <span class=\"attribute\">background-color</span>: <span class=\"number\">#f0f0f0</span>;  &#125;</div><div class=\"line\"><span class=\"selector-class\">.focus_img</span> &#123; <span class=\"attribute\">position</span>: relative; <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>; <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>; <span class=\"attribute\">overflow</span>: hidden; <span class=\"attribute\">margin</span>: auto; <span class=\"attribute\">border</span>: solid <span class=\"number\">2px</span> <span class=\"number\">#000000</span>;&#125;</div><div class=\"line\"><span class=\"selector-tag\">ul</span> &#123; <span class=\"attribute\">position</span>: absolute; <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>; <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>; &#125;</div><div class=\"line\"><span class=\"selector-class\">.img_list</span> &#123; <span class=\"attribute\">top</span>: <span class=\"number\">0</span>; <span class=\"attribute\">left</span>: <span class=\"number\">0</span>; <span class=\"attribute\">-webkit-animation</span>: img_list <span class=\"number\">10s</span> <span class=\"number\">2s</span> infinite;&#125;</div><div class=\"line\"><span class=\"selector-class\">.img_list</span> <span class=\"selector-tag\">li</span> &#123; <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>; <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>; <span class=\"attribute\">overflow</span>: hidden;&#125;</div><div class=\"line\"><span class=\"selector-class\">.img_list</span> <span class=\"selector-tag\">img</span> &#123; <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>; <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;&#125;</div><div class=\"line\"><span class=\"selector-class\">.img_index</span> &#123; <span class=\"attribute\">bottom</span>: <span class=\"number\">10px</span>;<span class=\"attribute\">right</span>: <span class=\"number\">10px</span>;&#125;</div><div class=\"line\"><span class=\"selector-class\">.img_index</span> <span class=\"selector-tag\">li</span> &#123;<span class=\"attribute\">float</span>: left; <span class=\"attribute\">width</span>: <span class=\"number\">16px</span>; <span class=\"attribute\">height</span>: <span class=\"number\">16px</span>; <span class=\"attribute\">border</span>: solid <span class=\"number\">1px</span> <span class=\"number\">#cccccc</span>; <span class=\"attribute\">background-color</span>: <span class=\"number\">#ffffff</span>; <span class=\"attribute\">color</span>:<span class=\"number\">#000000</span>; <span class=\"attribute\">text-align</span>: center;<span class=\"attribute\">line-height</span>: <span class=\"number\">16px</span>;<span class=\"attribute\">overflow</span>: hidden;<span class=\"attribute\">cursor</span>: pointer;<span class=\"attribute\">margin-right</span>: <span class=\"number\">2px</span>;  &#125;</div><div class=\"line\"><span class=\"selector-class\">.one</span> &#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#000000</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#ffffff</span>; <span class=\"attribute\">-webkit-animation</span>: one <span class=\"number\">10s</span> <span class=\"number\">2s</span> infinite;&#125;</div><div class=\"line\"><span class=\"selector-class\">.two</span> &#123; <span class=\"attribute\">-webkit-animation</span>: two <span class=\"number\">10s</span> <span class=\"number\">2s</span> infinite;&#125;</div><div class=\"line\"><span class=\"selector-class\">.three</span> &#123;<span class=\"attribute\">-webkit-animation</span>: three <span class=\"number\">10s</span> <span class=\"number\">2s</span> infinite;&#125;</div><div class=\"line\"><span class=\"selector-class\">.four</span> &#123;<span class=\"attribute\">-webkit-animation</span>: four <span class=\"number\">10s</span> <span class=\"number\">2s</span> infinite;&#125;</div><div class=\"line\"><span class=\"selector-class\">.five</span> &#123;<span class=\"attribute\">-webkit-animation</span>: five <span class=\"number\">10s</span> <span class=\"number\">2s</span> infinite;&#125;</div><div class=\"line\">@-<span class=\"keyword\">webkit</span>-<span class=\"keyword\">keyframes</span> img_list &#123;</div><div class=\"line\">    0%&#123; <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translate</span>(0,0);&#125;</div><div class=\"line\">    10%,20% &#123;<span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translate</span>(0,-300px);&#125;</div><div class=\"line\">    30%,40% &#123;<span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translate</span>(0,-600px);&#125;</div><div class=\"line\">    50%,60% &#123;<span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translate</span>(0,-900px);&#125;</div><div class=\"line\">    70%,80% &#123;<span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translate</span>(0,-1200px);&#125;</div><div class=\"line\">    90%,100% &#123;<span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translate</span>(0,0);&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@-<span class=\"keyword\">webkit</span>-<span class=\"keyword\">keyframes</span> one &#123;</div><div class=\"line\">    10%,20%,30%,40%,50%,60%,70%,80%&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#ffffff</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#000000</span>;&#125;</div><div class=\"line\">    0%,90%,100%&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#000000</span>;<span class=\"attribute\">color</span>: <span class=\"number\">#ffffff</span>;&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">@-<span class=\"keyword\">webkit</span>-<span class=\"keyword\">keyframes</span> two &#123;</div><div class=\"line\">    0%,30%,40%,50%,60%,70%,80%,90%,100%&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#ffffff</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#000000</span>;&#125;</div><div class=\"line\">    10%,20%&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#000000</span>;<span class=\"attribute\">color</span>: <span class=\"number\">#ffffff</span>;&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">@-<span class=\"keyword\">webkit</span>-<span class=\"keyword\">keyframes</span> three &#123;</div><div class=\"line\">    0%,10%,20%,50%,60%,70%,80%,90%,100%&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#ffffff</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#000000</span>;&#125;</div><div class=\"line\">    30%,40%&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#000000</span>;<span class=\"attribute\">color</span>: <span class=\"number\">#ffffff</span>;&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">@-<span class=\"keyword\">webkit</span>-<span class=\"keyword\">keyframes</span> four &#123;</div><div class=\"line\">    0%,10%,20%,30%,40%,70%,80%,90%,100%&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#ffffff</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#000000</span>;&#125;</div><div class=\"line\">    50%,60%&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#000000</span>;<span class=\"attribute\">color</span>: <span class=\"number\">#ffffff</span>;&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">@-<span class=\"keyword\">webkit</span>-<span class=\"keyword\">keyframes</span> five &#123;</div><div class=\"line\">    0%,10%,20%,30%,40%,50%,60%,90%,100%&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#ffffff</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#000000</span>;&#125;</div><div class=\"line\">    70%,80%&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#000000</span>;<span class=\"attribute\">color</span>: <span class=\"number\">#ffffff</span>;&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"效果Demo\"><a href=\"#效果Demo\" class=\"headerlink\" title=\"效果Demo\"></a>效果Demo</h2><p><a href=\"http://mcchen.club/project/css-swiper/纯css实现焦点轮播效果-功能可拓展.html\">Demo效果</a></p>\n<hr>\n<p>如果能给您带去些许帮助，鄙人不甚欢心。如有错误，恳请交流指出，谢谢！<br>转载请注明出处：<a href=\"http://mcchen.club/\">http://mcchen.club/</a></p>\n<hr>\n","categories":["Css"],"tags":["Css","轮播"]},{"title":"移动端前端开发入门总结","url":"http://mcchen.club/2015/04/10/移动端前端开发入门总结/","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>做了快半个月的移动端开发了，就移动端前端开发来做一个小小的总结，希望能帮助新人更快入门。</p>\n<h2 id=\"实用的一些key\"><a href=\"#实用的一些key\" class=\"headerlink\" title=\"实用的一些key\"></a>实用的一些key</h2><h3 id=\"meta标签\"><a href=\"#meta标签\" class=\"headerlink\" title=\"meta标签\"></a>meta标签</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1, user-scalable=no\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apple-mobile-web-app-capable\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"yes\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apple-mobile-web-app-status-bar-style\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"black\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"format-detection\"</span><span class=\"attr\">content</span>=<span class=\"string\">\"telephone=no, email=no\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1, user-scalable=no\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apple-mobile-web-app-capable\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"yes\"</span> /&gt;</span><span class=\"comment\">&lt;!-- 删除苹果默认的工具栏和菜单栏 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apple-mobile-web-app-status-bar-style\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"black\"</span> /&gt;</span><span class=\"comment\">&lt;!-- 设置苹果工具栏颜色 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"format-detection\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"telphone=no, email=no\"</span> /&gt;</span><span class=\"comment\">&lt;!-- 忽略页面中的数字识别为电话，忽略email识别 --&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 启用360浏览器的极速模式(webkit) --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"renderer\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"webkit\"</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 避免IE使用兼容模式 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=edge\"</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"HandheldFriendly\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"true\"</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 微软的老式浏览器 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"MobileOptimized\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"320\"</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- uc强制竖屏 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"screen-orientation\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"portrait\"</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- QQ强制竖屏 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"x5-orientation\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"portrait\"</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- UC强制全屏 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"full-screen\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"yes\"</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- QQ强制全屏 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"x5-fullscreen\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"true\"</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- UC应用模式 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"browsermode\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"application\"</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- QQ应用模式 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"x5-page-mode\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"app\"</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- windows phone 点击无高光 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"msapplication-tap-highlight\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"no\"</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 适应移动端end --&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"Html5-Css3的使用\"><a href=\"#Html5-Css3的使用\" class=\"headerlink\" title=\"Html5+Css3的使用\"></a>Html5+Css3的使用</h3><p>因为手机大多数都是高级浏览器，HTML5可以实现一些HTML4中无法实现的丰富的WEB应用程序的体验，可以减少开发者很多的工作量，当然了你决定使用HTML5前，一定要对此非常熟悉，要知道HTML5的新标签的作用。比如定义一块内容或文章区域可使用section标签，定义导航条或选项卡可以直接使用nav标签等等。</p>\n<p>按钮带有圆角效果，有内发光效果还有高光效果，这样的按钮使用CSS3写是无法写出来的，当然圆角可以使用CSS3来写，但高光和内发光却无法使用CSS3编写，这个时候你不妨使用-webkit-border-image来定义这个按钮的样式。-webkit-border-image就个很复杂的样式属性。</p>\n<p>还有渐变，动画等你能够想象出的各种酷炫狂拽吊炸天的效果。</p>\n<h3 id=\"块级化a标签\"><a href=\"#块级化a标签\" class=\"headerlink\" title=\"块级化a标签\"></a>块级化a标签</h3><p>因为大多数都是触屏手机，要让用户很方便的能点击到标签，建议用42X42。操作对象的大小符合手指的操作，按键的大小设置规范：食指点击的间距 约为7<em>7 mm， 1mm间距，拇指点击8</em>8 mm，2mm间距。当前推荐的值为9mm 大小，最小应不小于7mm。</p>\n<h3 id=\"自适应布局\"><a href=\"#自适应布局\" class=\"headerlink\" title=\"自适应布局\"></a>自适应布局</h3><p>在编写CSS时，我不建议前端工程师把容器（不管是外层容器还是内层）的宽度定死。为达到适配各种手持设备，我建议前端工程师使用自适应布局模式（支付宝采用了自适应布局模式），因为这样做可以让你的页面在ipad、itouch、ipod、iphone、android、web safarik、chrome都能够正常的显示，你无需再次考虑设备的分辨率。页面必须自适应屏幕大小，可以采用流体布局。其它一些小问题可以采用media query，比如对于图片的处理，只要设置宽度，让图片自适应，防止图片变形，当然要兼容的设备分辨率差距很大的时候，需要利用media queries根据分辨率的不同加载不同的图片（需要同一张设置为几种不同的规格）,一是防止小分辨率设备加载大图片浪费流量，二是防止大分辨率设备加载小图片导致的图片模糊问题。</p>\n<h3 id=\"适当优雅降级\"><a href=\"#适当优雅降级\" class=\"headerlink\" title=\"适当优雅降级\"></a>适当优雅降级</h3><p>要做好优雅降级（平稳退化），少用JS，图片，要用户禁止下载JS和图片的时候页面也能体现价值（因为很多APP默认设置为3G下是不自动下载图片等资源的）。</p>\n<h3 id=\"字体大小与行间距\"><a href=\"#字体大小与行间距\" class=\"headerlink\" title=\"字体大小与行间距\"></a>字体大小与行间距</h3><p>不建议使用px/em，而使用rem，虽然它是相对单位，但使用rem单位可以避开很多层级的关系而行间距则直接是采用字体的倍数。为了方便计算，在html元素中常将font-size设为62.5%。注意在chorme是会强制等于12的~</p>\n<h3 id=\"IOS在第三方输入法下不支持onkeyup事件\"><a href=\"#IOS在第三方输入法下不支持onkeyup事件\" class=\"headerlink\" title=\"IOS在第三方输入法下不支持onkeyup事件\"></a>IOS在第三方输入法下不支持onkeyup事件</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 使用oninput进行代替onkeyup事件</span></div><div class=\"line\">$(<span class=\"string\">\"#user-name\"</span>)[<span class=\"number\">0</span>].oninput = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    that.checkusername();</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<h3 id=\"部分android系统中元素被点击时产生的边框怎么去掉\"><a href=\"#部分android系统中元素被点击时产生的边框怎么去掉\" class=\"headerlink\" title=\"部分android系统中元素被点击时产生的边框怎么去掉\"></a>部分android系统中元素被点击时产生的边框怎么去掉</h3><p>android用户点击一个链接，会出现一个边框或者半透明灰色遮罩, 不同生产商定义出来额效果不一样，可设置-webkit-tap-highlight-color的alpha值为0去除部分机器自带的效果</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">a</span>,<span class=\"selector-tag\">button</span>,<span class=\"selector-tag\">input</span>,<span class=\"selector-tag\">textarea</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">-webkit-tap-highlight-color</span>: <span class=\"built_in\">rgba</span>(0,0,0,0;)</div><div class=\"line\">    -webkit-user-modify:read-write-plaintext-only;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>-webkit-user-modify有个副作用，就是输入法不再能够输入多个字符</p>\n<p>另外，有些机型去除不了，如小米2</p>\n<p>对于按钮类还有个办法，不使用a或者input标签，直接用div标签</p>\n<h3 id=\"winphone系统a、input标签被点击时产生的半透明灰色背景怎么去掉\"><a href=\"#winphone系统a、input标签被点击时产生的半透明灰色背景怎么去掉\" class=\"headerlink\" title=\"winphone系统a、input标签被点击时产生的半透明灰色背景怎么去掉\"></a>winphone系统a、input标签被点击时产生的半透明灰色背景怎么去掉</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"msapplication-tap-highlight\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"no\"</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"webkit表单元素的默认外观怎么重置\"><a href=\"#webkit表单元素的默认外观怎么重置\" class=\"headerlink\" title=\"webkit表单元素的默认外观怎么重置\"></a>webkit表单元素的默认外观怎么重置</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.css</span>&#123;<span class=\"attribute\">-webkit-appearance</span>:none;&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"移动端如何清除输入框内阴影\"><a href=\"#移动端如何清除输入框内阴影\" class=\"headerlink\" title=\"移动端如何清除输入框内阴影\"></a>移动端如何清除输入框内阴影</h3><p>在iOS上，输入框默认有内部阴影，但无法使用 box-shadow 来清除，如果不需要阴影，可以这样关闭：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">input</span>,</div><div class=\"line\"><span class=\"selector-tag\">textarea</span> &#123;</div><div class=\"line\">　　<span class=\"attribute\">border</span>: <span class=\"number\">0</span>; <span class=\"comment\">/* 方法1 /</span></div><div class=\"line\">　　-webkit-appearance: none; / 方法2 */</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"移动端禁止选中内容\"><a href=\"#移动端禁止选中内容\" class=\"headerlink\" title=\"移动端禁止选中内容\"></a>移动端禁止选中内容</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.user-select-none</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">-webkit-user-select</span>: none; <span class=\"comment\">/* Chrome all / Safari all /</span></div><div class=\"line\">    -moz-user-select: none; / Firefox all （移动端不需要） /</div><div class=\"line\">    -ms-user-select: none; / IE 10+ */</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"移动端取消touch高亮效果\"><a href=\"#移动端取消touch高亮效果\" class=\"headerlink\" title=\"移动端取消touch高亮效果\"></a>移动端取消touch高亮效果</h3><p>在做移动端页面时，会发现所有a标签在触发点击时或者所有设置了伪类 :active 的元素，默认都会在激活状态时，显示高亮框，如果不想要这个高亮，那么你可以通过css以下方法来进行全局的禁止：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">html</span> &#123;<span class=\"attribute\">-webkit-tap-highlight-color</span>: <span class=\"built_in\">rgba</span>(0, 0, 0, 0);&#125;</div></pre></td></tr></table></figure>\n<p>但这个方法在三星的机子上无效，有一种妥协的方法是把页面非真实跳转链接的a标签换成其它标签，可以解决这个问题。</p>\n<h3 id=\"如何禁止保存或拷贝图像（IOS）\"><a href=\"#如何禁止保存或拷贝图像（IOS）\" class=\"headerlink\" title=\"如何禁止保存或拷贝图像（IOS）\"></a>如何禁止保存或拷贝图像（IOS）</h3><p>通常当你在手机或者pad上长按图像 img ，会弹出选项 存储图像 或者 拷贝图像，如果你不想让用户这么操作，那么你可以通过以下方法来禁止：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">img</span> &#123; <span class=\"attribute\">-webkit-touch-callout</span>: none; &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"屏幕旋转的事件\"><a href=\"#屏幕旋转的事件\" class=\"headerlink\" title=\"屏幕旋转的事件\"></a>屏幕旋转的事件</h3><p>window.orientation，取值：正负90表示横屏模式、0和180表现为竖屏模式；</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">window</span>.onorientationchange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">switch</span>(<span class=\"built_in\">window</span>.orientation)&#123;</div><div class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">-90</span>:</div><div class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">90</span>:</div><div class=\"line\">            alert(<span class=\"string\">\"横屏:\"</span> + <span class=\"built_in\">window</span>.orientation);</div><div class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">0</span>:</div><div class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">180</span>:</div><div class=\"line\">            alert(<span class=\"string\">\"竖屏:\"</span> + <span class=\"built_in\">window</span>.orientation);</div><div class=\"line\">        <span class=\"keyword\">break</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"audio元素和video元素在ios和andriod中无法自动播放\"><a href=\"#audio元素和video元素在ios和andriod中无法自动播放\" class=\"headerlink\" title=\"audio元素和video元素在ios和andriod中无法自动播放\"></a>audio元素和video元素在ios和andriod中无法自动播放</h3><p>应对方案：触屏即播</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(<span class=\"string\">'html'</span>).one(<span class=\"string\">'touchstart'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    audio.play()</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h3 id=\"手机拍照和上传图片\"><a href=\"#手机拍照和上传图片\" class=\"headerlink\" title=\"手机拍照和上传图片\"></a>手机拍照和上传图片</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">file</span> <span class=\"attr\">accept</span>=<span class=\"string\">\"image/*\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">file</span> <span class=\"attr\">accept</span>=<span class=\"string\">\"video/*\"</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>使用总结：</p>\n<ul>\n<li>ios 有拍照、录像、选取本地图片功能</li>\n<li>部分android只有选取本地图片功能</li>\n<li>winphone不支持</li>\n<li>input控件默认外观丑陋</li>\n</ul>\n<h3 id=\"消除transition闪屏\"><a href=\"#消除transition闪屏\" class=\"headerlink\" title=\"消除transition闪屏\"></a>消除transition闪屏</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">.css&#123;</div><div class=\"line\">/设置内嵌的元素在 3D 空间如何呈现：保留 3D/</div><div class=\"line\">-webkit-transform-style: preserve-3d;</div><div class=\"line\">/（设置进行转换的元素的背面在面对用户时是否可见：隐藏）/</div><div class=\"line\">-webkit-backface-visibility: hidden;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>开启硬件加速，解决页面闪白，保证动画流畅</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.css</span> &#123;</div><div class=\"line\"><span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translate3d</span>(0, 0, 0);</div><div class=\"line\"><span class=\"attribute\">-moz-transform</span>: <span class=\"built_in\">translate3d</span>(0, 0, 0);</div><div class=\"line\"><span class=\"attribute\">-ms-transform</span>: <span class=\"built_in\">translate3d</span>(0, 0, 0);</div><div class=\"line\"><span class=\"attribute\">transform</span>: <span class=\"built_in\">translate3d</span>(0, 0, 0);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>设计高性能CSS3动画的几个要素</p>\n<ul>\n<li>尽可能地使用合成属性transform和opacity来设计CSS3动画，</li>\n<li>不使用position的left和top来定位</li>\n<li>利用translate3D开启GPU加速</li>\n</ul>\n<h2 id=\"移动端border-radius的几个BUG\"><a href=\"#移动端border-radius的几个BUG\" class=\"headerlink\" title=\"移动端border-radius的几个BUG\"></a>移动端border-radius的几个BUG</h2><h3 id=\"Android-2-3-自带浏览器不支持\"><a href=\"#Android-2-3-自带浏览器不支持\" class=\"headerlink\" title=\"Android 2.3 自带浏览器不支持 %\"></a>Android 2.3 自带浏览器不支持 %</h3><p>通常我们实现一个正圆只需要border-radius: 50%即可，大致代码如下</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.foo</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</div><div class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</div><div class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</div><div class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid blue;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>然而 Android 2.3 是不支持百分比的，要兼容我们只能使用一个较大值，比如border-radius: 999px;</p>\n<h3 id=\"Android-及-Safari-低版本-img-圆角问题\"><a href=\"#Android-及-Safari-低版本-img-圆角问题\" class=\"headerlink\" title=\"Android 及 Safari 低版本 img 圆角问题\"></a>Android 及 Safari 低版本 img 圆角问题</h3><p>当 img 元素有border 时设置border-radius 会导致圆角变形，需要在img 外面嵌套一个元素并设置border 和border-radius。</p>\n<h3 id=\"Android-4-2-x-背景色溢出及不支持-border-radius-缩写\"><a href=\"#Android-4-2-x-背景色溢出及不支持-border-radius-缩写\" class=\"headerlink\" title=\"Android 4.2.x 背景色溢出及不支持 border-radius 缩写\"></a>Android 4.2.x 背景色溢出及不支持 border-radius 缩写</h3><p><strong>Android 4.2.x 背景色溢出</strong></p>\n<p>测试发现，在 Android 4.2.x 系统自带浏览器中，同时设置border-radius，border和背景色的时候，背景色会溢出到圆角以外部分，可以使用背景剪裁background-clip: padding-box;来修复，但是如果border-color为半透明时，背景直角部分依然会露出来</p>\n<p><img src=\"https://camo.githubusercontent.com/0c3412b67e4349ba7bd9fe2b1b4b1c8078690f0b/687474703a2f2f67746d7330342e616c6963646e2e636f6d2f7470732f69342f5431424d314646794a615858584a366a725a2d3631382d3335302e706e67?_=4414627g\" alt=\"Alt text\"></p>\n<p>关于背景剪裁background-clip</p>\n<p>background-clip: border-box|padding-box|content-box;</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">值</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">border-box</td>\n<td style=\"text-align:left\">背景被裁剪到边框盒。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">padding-box</td>\n<td style=\"text-align:left\">背景被裁剪到内边距框。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">content-box</td>\n<td style=\"text-align:left\">背景被裁剪到内容框。</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Android 4.2.x 不支持border-radius缩写</strong></p>\n<p>这个 BUG在小米上测试并未发现，国外有人反映三星 Galaxy S4 中自带浏览器不支持。</p>\n<p>解决方案就是使用border-radius的四个扩写属性，缩写属性放到最后。</p>\n<p>以上两个问题影响到 Android 4.2.x 内核的系统以及在其基础上定制的系统的自带浏览器，比如：红米，小米3，阿里云OS 等，安卓版 Chrome 不受影响。</p>\n<p>完整代码应该是这样的：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.foo</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</div><div class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</div><div class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">5px</span> solid blue;</div><div class=\"line\">    <span class=\"attribute\">border-top-left-radius</span>: <span class=\"number\">999px</span>; <span class=\"comment\">/* 左上角 */</span></div><div class=\"line\">    <span class=\"attribute\">border-top-right-radius</span>: <span class=\"number\">999px</span>; <span class=\"comment\">/* 右上角 */</span></div><div class=\"line\">    <span class=\"attribute\">border-bottom-right-radius</span>: <span class=\"number\">999px</span>; <span class=\"comment\">/* 右下角 */</span></div><div class=\"line\">    <span class=\"attribute\">border-bottom-left-radius</span>: <span class=\"number\">999px</span>; <span class=\"comment\">/* 左下角 */</span></div><div class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">999px</span>;</div><div class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#ccc</span>;</div><div class=\"line\">    <span class=\"attribute\">background-clip</span>: padding-box;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong>用box-shadow模拟边框</strong></p>\n<p>背景色溢出另一个解决办法就是使用box-shadow模拟border；差不多可以达到效果</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">border</span>: 1<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-id\">#333333</span>;</div><div class=\"line\"><span class=\"comment\">/*替换为*/</span></div><div class=\"line\"><span class=\"selector-tag\">box-shadow</span>: 0 0 1<span class=\"selector-tag\">px</span> 1<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#333333</span>;</div></pre></td></tr></table></figure>\n<h3 id=\"其他问题\"><a href=\"#其他问题\" class=\"headerlink\" title=\"其他问题\"></a>其他问题</h3><ul>\n<li>IE9 中fieldset元素不支持border-radius。</li>\n<li>IE9 中带有背景渐变(gradient)的时候背景溢出。</li>\n</ul>\n<hr>\n<p>如果能给您带去些许帮助，鄙人不甚欢心。如有错误，恳请交流指出，谢谢！<br>转载请注明出处：<a href=\"http://mcchen.club/\">http://mcchen.club/</a></p>\n<hr>\n","categories":["Css"],"tags":["Css","资料整理"]},{"title":"实现未知高度父容器及其左右排列子容器的高度自适应","url":"http://mcchen.club/2015/04/10/实现未知高度父容器及其左右排列子容器的高度自适应/","content":"<h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><p>需要实现两个子容器中一个依据另外一个的高度而自动等高，同时父容器也是同样自动等高，宽度可以自适应或者按需分配。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"content-1\"</span>&gt;</span>未知高度和宽度的内容<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"content-2\"</span>&gt;</span>未知高度和宽度内容<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"方案\"><a href=\"#方案\" class=\"headerlink\" title=\"方案\"></a>方案</h2><p>目前我学习到的两种解决办法一种是利用flexbox，另外一种是利用table和table-cell，下文均有解释。</p>\n<h3 id=\"利用Flexbox\"><a href=\"#利用Flexbox\" class=\"headerlink\" title=\"利用Flexbox\"></a>利用Flexbox</h3><p>Flexbox通常能让我们更好的操作他的子元素布局，例如：</p>\n<ul>\n<li>如果元素容器没有足够的空间，我们无需计算每个元素的宽度，就可以设置他们在同一行；</li>\n<li>可以快速让他们布局在一列；</li>\n<li>可以方便让他们对齐容器的左、右、中间等；</li>\n<li>无需修改结构就可以改变他们的显示顺序；</li>\n<li>如果元素容器设置百分比和视窗大小改变，不用提心未指定元素的确切宽度而破坏布局，因为容器中的每个子元素都可以自动分配容器的宽度或高度的比例。</li>\n</ul>\n<p>听起来相当有用，不是吗？接下来让我们更详细的探索它。</p>\n<p><strong>目前支持的浏览器</strong></p>\n<p>Opera Mobile12.1+、Opera12.5+、Firefox18+（partial）和chrome。Chrome需要添加浏览器前缀“-webkit-”,Opera支持标准语法，不用添加任何前缀。Firefox有部分支持，也需要添加前缀“-moz-”，同时需要设置一个标志（到firefox浏览器地址栏中输入：about:config，搜索“flexbox”，找到之后双击“layout.css.flexbox.enabled”，设置他的“value”值为“true”）。注意，其他浏览器除了opera自2009年支持flexbox以来，都使用旧的语法规则，真的不应该使用这些过时的语法。</p>\n<p><strong>flexbox的术语</strong></p>\n<ul>\n<li><strong>伸缩容器</strong>：一个设有“display:flex”或“display:inline-flex”的元素</li>\n<li><strong>伸缩项目</strong>：伸缩容器的子元素</li>\n<li><strong>主轴、主轴方向</strong>：用户代理沿着一个伸缩容器的主轴配置伸缩项目，主轴是主轴方向的延伸。</li>\n<li><strong>主轴起点、主轴终点</strong>：伸缩项目的配置从容器的主轴起点边开始，往主轴终点边结束。</li>\n<li><strong>主轴长度、主轴长度属性</strong>：伸缩项目的在主轴方向的宽度或高度就是项目的主轴长度，伸缩项目的主轴长度属性是width或height属性，由哪一个对着主轴方向决定。</li>\n<li><strong>侧轴、侧轴方向</strong>：与主轴垂直的轴称作侧轴，是侧轴方向的延伸。</li>\n<li><strong>侧轴起点、侧轴终点</strong>：填满项目的伸缩行的配置从容器的侧轴起点边开始，往侧轴终点边结束。</li>\n<li><strong>侧轴长度、侧轴长度属性</strong>：伸缩项目的在侧轴方向的宽度或高度就是项目的侧轴长度，伸缩项目的侧轴长度属性是「width」或「height」属性，由哪一个对着侧轴方向决定。</li>\n</ul>\n<p>关于更多flexbox的信息参考这篇：<a href=\"http://www.w3cplus.com/css3/flexbox-basics.html\" target=\"_blank\" rel=\"external\">Flexbox——快速布局神器</a></p>\n<p>就我们这个问题的话，只需要向下面这样设置样式即可：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">.container &#123; display: flex&#125;</div><div class=\"line\">.content-1,.content-2 &#123; flex:1; width:0;&#125; // 不需要自适应可以一个写宽度，另外一个写flex，或者flex按比例分配</div></pre></td></tr></table></figure>\n<h3 id=\"使用-table和table-cell\"><a href=\"#使用-table和table-cell\" class=\"headerlink\" title=\"使用 table和table-cell\"></a>使用 table和table-cell</h3><p>从前在页面布局的时候，table被大量的使用，其中一个好处便是元素可以轻松的定位，不会出现什么窜行的问题。你要是用div的话，一会inline一会float很是蛮烦。怎么样才能在使用div的时候也能享受的table定位的好处呢？以开头的问题为例：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.container</span>&#123; <span class=\"attribute\">width</span>: <span class=\"number\">90%</span>; <span class=\"attribute\">margin</span>: <span class=\"number\">50px</span> auto; <span class=\"attribute\">border</span>: <span class=\"number\">#333333</span> solid <span class=\"number\">1px</span>; <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span>; <span class=\"attribute\">display</span>: table;&#125;</div><div class=\"line\"><span class=\"selector-class\">.content-1</span>&#123; <span class=\"attribute\">height</span>: <span class=\"number\">50px</span>; <span class=\"attribute\">background</span>: <span class=\"number\">#f30</span>; <span class=\"attribute\">width</span>: <span class=\"number\">35%</span>; <span class=\"attribute\">display</span>: table-cell;&#125;</div><div class=\"line\"><span class=\"selector-class\">.content-2</span>&#123; <span class=\"attribute\">height</span>: <span class=\"number\">50px</span>; <span class=\"attribute\">background</span>: <span class=\"number\">#03f</span>; <span class=\"attribute\">display</span>: table-cell; &#125;</div></pre></td></tr></table></figure>\n<p>将父容器的display指定为table，这样浏览器便会把parent当作一个table对待，然后向table中添加元素，元素具有的效果就会和直接使用td标签一样。</p>\n<p><strong>效果如下图</strong></p>\n<p><img src=\"http://files.jb51.net/file_images/article/201409/201409040905241.gif?201484967&amp;_=4414486\" alt=\"Alt text\"></p>\n<hr>\n<p>如果能给您带去些许帮助，鄙人不甚欢心。如有错误，恳请交流指出，谢谢！<br>转载请注明出处：<a href=\"http://mcchen.club/\">http://mcchen.club/</a></p>\n<hr>\n","categories":["Css"],"tags":["Css","自适应"]},{"title":"JPG和PNG特性分析及适用范围","url":"http://mcchen.club/2015/04/09/JPG和PNG特性分析及适用范围/","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>由于做移动端开发，必须要考虑到图片尺寸问题，所以就JPG和PNG做简单的分析。</p>\n<h2 id=\"特性分析\"><a href=\"#特性分析\" class=\"headerlink\" title=\"特性分析\"></a>特性分析</h2><h3 id=\"JPG的特性\"><a href=\"#JPG的特性\" class=\"headerlink\" title=\"JPG的特性\"></a>JPG的特性</h3><p>有损压缩</p>\n<ul>\n<li><p>支持摄影图像或写实图像的高级压缩，并且可利用压缩比例控制图像文件大小</p>\n</li>\n<li><p>有损压缩会使图像数据质量下降，并且在编辑和重新保存JPG格式图像时，这种下降损失会累积</p>\n</li>\n<li><p>JPG不适用于所含颜色很少、具有大块颜色相近的区域或亮度差异十分明显的较简单的图片</p>\n</li>\n</ul>\n<blockquote>\n<p>童鞋可以自行调整jpg质量或者采用工具压缩jpg进行对比，体积减小明显</p>\n</blockquote>\n<h3 id=\"PNG的特性\"><a href=\"#PNG的特性\" class=\"headerlink\" title=\"PNG的特性\"></a>PNG的特性</h3><p>无损压缩</p>\n<ul>\n<li><p>能在保证最不失真的情况下尽可能压缩图像文件的大小</p>\n</li>\n<li><p>PNG用来存储灰度图像时，灰度图像的深度可多到16位，存储彩色图像时，彩色图像的深度可多到48位，并且还可存储多到16位的α通道数据</p>\n</li>\n<li><p>对于需要高保真的较复杂的图像，PNG虽然能无损压缩，但图片文件较大，不适合应用在Web页面上</p>\n</li>\n</ul>\n<blockquote>\n<p>PNG8最多只能索引256种颜色，所以对于颜色较多的图像不能真实还原；PNG24则可以保存1600多万种颜色，基本能够真实还原我们人类肉眼所可以分别的所有颜色；PNG格式最多可以保存48位颜色通道。</p>\n</blockquote>\n<h2 id=\"各自适用情况总结\"><a href=\"#各自适用情况总结\" class=\"headerlink\" title=\"各自适用情况总结\"></a>各自适用情况总结</h2><p>在存储图像时采用JPG还是PNG主要依据图像上的色彩层次和颜色数量进行选择。</p>\n<ul>\n<li><p>一般层次丰富颜色较多的图像采用JPG存储，而颜色简单对比强烈的则需要采用PNG。但也会有一些特殊情况，例如有些图像尽管色彩层次丰富，但由于图片尺寸较小，上面包含的颜色数量有限时，也可以尝试用PNG进行存储。</p>\n</li>\n<li><p>有些矢量工具绘制的图像由于采用较多的滤镜特效也会形成丰富的色彩层次，这个时候就需要采用JPG进行存储了</p>\n</li>\n<li><p>用于页面结构的基本视觉元素，如容器的背景、按钮、导航的背景等应该尽量用PNG格式进行存储，这样才能更好的保证设计品质</p>\n</li>\n<li><p>一些内容元素，如广告Banner、商品图片等对质量要求不是特别苛刻的，则可以用JPG去进行存储从而降低文件大小</p>\n</li>\n</ul>\n<hr>\n<p>如果能给您带去些许帮助，鄙人不甚欢心。如有错误，恳请交流指出，谢谢！<br>转载请注明出处：<a href=\"http://mcchen.club/\">http://mcchen.club/</a></p>\n<hr>\n","categories":["Image"],"tags":["Css","Image"]},{"title":"link","url":"http://mcchen.club/link/index.html","content":"","categories":[],"tags":[]},{"title":"about","url":"http://mcchen.club/about/index.html","content":"","categories":[],"tags":[]},{"title":"project","url":"http://mcchen.club/project/index.html","content":"","categories":[],"tags":[]},{"title":"category","url":"http://mcchen.club/category/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://mcchen.club/search/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://mcchen.club/tag/index.html","content":"","categories":[],"tags":[]}]